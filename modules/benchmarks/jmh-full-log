# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = tethys-jackson, size = 10)

# Run progress: 0.00% complete, ETA 04:21:20
# Fork: 1 of 2
# Warmup Iteration   1: 21229.372 ops/s
# Warmup Iteration   2: 20045.147 ops/s
Iteration   1: 21401.158 ops/s
                 ·gc.alloc.rate:                   1265.034 MB/sec
                 ·gc.alloc.rate.norm:              63016.001 B/op
                 ·gc.churn.PS_Eden_Space:          1265.873 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     63057.824 B/op
                 ·gc.churn.PS_Survivor_Space:      0.093 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.644 B/op
                 ·gc.count:                        395.000 counts
                 ·gc.time:                         260.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 21322.294 ops/s
                 ·gc.alloc.rate:                   1260.244 MB/sec
                 ·gc.alloc.rate.norm:              63016.001 B/op
                 ·gc.churn.PS_Eden_Space:          1261.163 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     63061.961 B/op
                 ·gc.churn.PS_Survivor_Space:      0.109 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 5.430 B/op
                 ·gc.count:                        424.000 counts
                 ·gc.time:                         278.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 21485.231 ops/s
                 ·gc.alloc.rate:                   1269.960 MB/sec
                 ·gc.alloc.rate.norm:              63016.001 B/op
                 ·gc.churn.PS_Eden_Space:          1270.470 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     63041.288 B/op
                 ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.118 B/op
                 ·gc.count:                        433.000 counts
                 ·gc.time:                         282.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 21407.824 ops/s
                 ·gc.alloc.rate:                   1265.377 MB/sec
                 ·gc.alloc.rate.norm:              63016.001 B/op
                 ·gc.churn.PS_Eden_Space:          1267.408 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     63117.138 B/op
                 ·gc.churn.PS_Survivor_Space:      0.072 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3.571 B/op
                 ·gc.count:                        439.000 counts
                 ·gc.time:                         284.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 1.02% complete, ETA 04:24:25
# Fork: 2 of 2
# Warmup Iteration   1: 21264.903 ops/s
# Warmup Iteration   2: 21319.773 ops/s
Iteration   1: 21325.722 ops/s
                 ·gc.alloc.rate:                   1260.518 MB/sec
                 ·gc.alloc.rate.norm:              63016.001 B/op
                 ·gc.churn.PS_Eden_Space:          1259.170 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     62948.585 B/op
                 ·gc.churn.PS_Survivor_Space:      0.082 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.097 B/op
                 ·gc.count:                        420.000 counts
                 ·gc.time:                         275.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 21336.517 ops/s
                 ·gc.alloc.rate:                   1261.185 MB/sec
                 ·gc.alloc.rate.norm:              63016.001 B/op
                 ·gc.churn.PS_Eden_Space:          1264.386 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     63175.942 B/op
                 ·gc.churn.PS_Survivor_Space:      0.078 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3.891 B/op
                 ·gc.count:                        436.000 counts
                 ·gc.time:                         287.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 21324.781 ops/s
                 ·gc.alloc.rate:                   1260.517 MB/sec
                 ·gc.alloc.rate.norm:              63016.001 B/op
                 ·gc.churn.PS_Eden_Space:          1261.552 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     63067.711 B/op
                 ·gc.churn.PS_Survivor_Space:      0.090 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.507 B/op
                 ·gc.count:                        424.000 counts
                 ·gc.time:                         281.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 21368.007 ops/s
                 ·gc.alloc.rate:                   1262.971 MB/sec
                 ·gc.alloc.rate.norm:              63016.001 B/op
                 ·gc.churn.PS_Eden_Space:          1265.376 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     63135.972 B/op
                 ·gc.churn.PS_Survivor_Space:      0.082 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.089 B/op
                 ·gc.count:                        397.000 counts
                 ·gc.time:                         268.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  21371.442 ±(99.9%) 109.762 ops/s [Average]
  (min, avg, max) = (21322.294, 21371.442, 21485.231), stdev = 57.408
  CI (99.9%): [21261.680, 21481.204] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1263.226 ±(99.9%) 6.505 MB/sec [Average]
  (min, avg, max) = (1260.244, 1263.226, 1269.960), stdev = 3.402
  CI (99.9%): [1256.721, 1269.731] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  63016.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (63016.001, 63016.001, 63016.001), stdev = 0.001
  CI (99.9%): [63016.001, 63016.001] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1264.425 ±(99.9%) 7.042 MB/sec [Average]
  (min, avg, max) = (1259.170, 1264.425, 1270.470), stdev = 3.683
  CI (99.9%): [1257.383, 1271.466] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  63075.803 ±(99.9%) 131.898 B/op [Average]
  (min, avg, max) = (62948.585, 63075.803, 63175.942), stdev = 68.985
  CI (99.9%): [62943.905, 63207.701] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  0.086 ±(99.9%) 0.022 MB/sec [Average]
  (min, avg, max) = (0.072, 0.086, 0.109), stdev = 0.011
  CI (99.9%): [0.064, 0.108] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  4.294 ±(99.9%) 1.085 B/op [Average]
  (min, avg, max) = (3.571, 4.294, 5.430), stdev = 0.568
  CI (99.9%): [3.208, 5.379] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  3368.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (395.000, 421.000, 439.000), stdev = 16.750
  CI (99.9%): [3368.000, 3368.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2215.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (260.000, 276.875, 287.000), stdev = 8.983
  CI (99.9%): [2215.000, 2215.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 60.0%  60.0% tethys.jackson.JacksonTokenIterator.nextToken
  8.1%   8.1% tethys.readers.instances.LowPriorityComplexReaders$$anon$3.recRead
  7.3%   7.3% scala.collection.immutable.HashMap.$plus
  2.6%   2.6% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  2.3%   2.3% scala.collection.mutable.MapBuilder.$plus$eq
  2.2%   2.2% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber
  2.0%   2.0% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  1.8%   1.8% sun.misc.FloatingDecimal.parseDouble
  1.7%   1.7% json.bench.macrojson.TethysBench$$anon$2.read
  1.5%   1.5% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol
 10.4%  10.4% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = tethys-jackson, size = 100)

# Run progress: 2.04% complete, ETA 04:21:38
# Fork: 1 of 2
# Warmup Iteration   1: 2368.580 ops/s
# Warmup Iteration   2: 2383.215 ops/s
Iteration   1: 2376.941 ops/s
                 ·gc.alloc.rate:                   1154.917 MB/sec
                 ·gc.alloc.rate.norm:              517987.269 B/op
                 ·gc.churn.PS_Eden_Space:          1156.294 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     518604.641 B/op
                 ·gc.churn.PS_Survivor_Space:      0.270 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 121.314 B/op
                 ·gc.count:                        392.000 counts
                 ·gc.time:                         264.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2386.468 ops/s
                 ·gc.alloc.rate:                   1159.498 MB/sec
                 ·gc.alloc.rate.norm:              517984.006 B/op
                 ·gc.churn.PS_Eden_Space:          1158.971 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     517748.588 B/op
                 ·gc.churn.PS_Survivor_Space:      0.228 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 102.064 B/op
                 ·gc.count:                        328.000 counts
                 ·gc.time:                         238.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2379.506 ops/s
                 ·gc.alloc.rate:                   1156.084 MB/sec
                 ·gc.alloc.rate.norm:              517984.006 B/op
                 ·gc.churn.PS_Eden_Space:          1157.482 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     518610.767 B/op
                 ·gc.churn.PS_Survivor_Space:      0.263 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 117.970 B/op
                 ·gc.count:                        380.000 counts
                 ·gc.time:                         266.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2384.295 ops/s
                 ·gc.alloc.rate:                   1158.329 MB/sec
                 ·gc.alloc.rate.norm:              517984.006 B/op
                 ·gc.churn.PS_Eden_Space:          1161.002 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     519179.251 B/op
                 ·gc.churn.PS_Survivor_Space:      0.245 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 109.486 B/op
                 ·gc.count:                        359.000 counts
                 ·gc.time:                         247.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 3.06% complete, ETA 04:18:58
# Fork: 2 of 2
# Warmup Iteration   1: 2429.940 ops/s
# Warmup Iteration   2: 2443.314 ops/s
Iteration   1: 2443.043 ops/s
                 ·gc.alloc.rate:                   1187.036 MB/sec
                 ·gc.alloc.rate.norm:              517986.647 B/op
                 ·gc.churn.PS_Eden_Space:          1188.001 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     518407.892 B/op
                 ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 109.090 B/op
                 ·gc.count:                        393.000 counts
                 ·gc.time:                         263.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2444.168 ops/s
                 ·gc.alloc.rate:                   1187.550 MB/sec
                 ·gc.alloc.rate.norm:              517984.006 B/op
                 ·gc.churn.PS_Eden_Space:          1188.774 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     518517.871 B/op
                 ·gc.churn.PS_Survivor_Space:      0.263 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 114.848 B/op
                 ·gc.count:                        388.000 counts
                 ·gc.time:                         266.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2445.333 ops/s
                 ·gc.alloc.rate:                   1188.039 MB/sec
                 ·gc.alloc.rate.norm:              517984.006 B/op
                 ·gc.churn.PS_Eden_Space:          1190.194 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     518923.469 B/op
                 ·gc.churn.PS_Survivor_Space:      0.261 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 113.844 B/op
                 ·gc.count:                        397.000 counts
                 ·gc.time:                         271.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2449.011 ops/s
                 ·gc.alloc.rate:                   1189.897 MB/sec
                 ·gc.alloc.rate.norm:              517984.006 B/op
                 ·gc.churn.PS_Eden_Space:          1190.116 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     518079.693 B/op
                 ·gc.churn.PS_Survivor_Space:      0.236 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 102.580 B/op
                 ·gc.count:                        355.000 counts
                 ·gc.time:                         252.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  2413.596 ±(99.9%) 65.293 ops/s [Average]
  (min, avg, max) = (2376.941, 2413.596, 2449.011), stdev = 34.150
  CI (99.9%): [2348.302, 2478.889] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1172.669 ±(99.9%) 31.749 MB/sec [Average]
  (min, avg, max) = (1154.917, 1172.669, 1189.897), stdev = 16.605
  CI (99.9%): [1140.920, 1204.418] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  517984.744 ±(99.9%) 2.632 B/op [Average]
  (min, avg, max) = (517984.006, 517984.744, 517987.269), stdev = 1.377
  CI (99.9%): [517982.112, 517987.376] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1173.854 ±(99.9%) 31.643 MB/sec [Average]
  (min, avg, max) = (1156.294, 1173.854, 1190.194), stdev = 16.550
  CI (99.9%): [1142.212, 1205.497] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  518509.022 ±(99.9%) 859.131 B/op [Average]
  (min, avg, max) = (517748.588, 518509.022, 519179.251), stdev = 449.342
  CI (99.9%): [517649.891, 519368.152] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  0.252 ±(99.9%) 0.029 MB/sec [Average]
  (min, avg, max) = (0.228, 0.252, 0.270), stdev = 0.015
  CI (99.9%): [0.224, 0.281] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  111.399 ±(99.9%) 13.193 B/op [Average]
  (min, avg, max) = (102.064, 111.399, 121.314), stdev = 6.900
  CI (99.9%): [98.207, 124.592] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  2992.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (328.000, 374.000, 397.000), stdev = 24.343
  CI (99.9%): [2992.000, 2992.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2067.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (238.000, 258.375, 271.000), stdev = 11.426
  CI (99.9%): [2067.000, 2067.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 49.7%  49.7% tethys.jackson.JacksonTokenIterator.nextToken
  8.4%   8.4% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  8.4%   8.4% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  7.9%   7.9% scala.collection.immutable.HashMap.$plus
  7.2%   7.2% tethys.readers.instances.LowPriorityComplexReaders$$anon$3.recRead
  3.2%   3.2% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  2.4%   2.4% scala.collection.mutable.MapBuilder.$plus$eq
  2.3%   2.3% sun.misc.FloatingDecimal.parseDouble
  1.6%   1.6% java.math.BigDecimal.<init>
  1.4%   1.4% com.fasterxml.jackson.core.util.TextBuffer.contentsAsInt
  7.6%   7.6% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = tethys-jackson, size = 1000)

# Run progress: 4.08% complete, ETA 04:16:15
# Fork: 1 of 2
# Warmup Iteration   1: 234.544 ops/s
# Warmup Iteration   2: 237.325 ops/s
Iteration   1: 236.770 ops/s
                 ·gc.alloc.rate:                   1109.782 MB/sec
                 ·gc.alloc.rate.norm:              4997144.065 B/op
                 ·gc.churn.PS_Eden_Space:          1107.237 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4985680.721 B/op
                 ·gc.churn.PS_Survivor_Space:      2.149 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 9677.261 B/op
                 ·gc.count:                        239.000 counts
                 ·gc.time:                         272.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 237.083 ops/s
                 ·gc.alloc.rate:                   1111.247 MB/sec
                 ·gc.alloc.rate.norm:              4997144.061 B/op
                 ·gc.churn.PS_Eden_Space:          1113.458 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5007086.741 B/op
                 ·gc.churn.PS_Survivor_Space:      1.996 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 8974.000 B/op
                 ·gc.count:                        231.000 counts
                 ·gc.time:                         255.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 237.352 ops/s
                 ·gc.alloc.rate:                   1112.520 MB/sec
                 ·gc.alloc.rate.norm:              4997144.065 B/op
                 ·gc.churn.PS_Eden_Space:          1114.399 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5005584.621 B/op
                 ·gc.churn.PS_Survivor_Space:      2.493 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 11195.695 B/op
                 ·gc.count:                        261.000 counts
                 ·gc.time:                         266.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 237.318 ops/s
                 ·gc.alloc.rate:                   1112.405 MB/sec
                 ·gc.alloc.rate.norm:              4997144.061 B/op
                 ·gc.churn.PS_Eden_Space:          1112.474 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4997451.345 B/op
                 ·gc.churn.PS_Survivor_Space:      2.278 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10235.398 B/op
                 ·gc.count:                        267.000 counts
                 ·gc.time:                         279.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 5.10% complete, ETA 04:13:34
# Fork: 2 of 2
# Warmup Iteration   1: 232.304 ops/s
# Warmup Iteration   2: 235.110 ops/s
Iteration   1: 235.591 ops/s
                 ·gc.alloc.rate:                   1104.307 MB/sec
                 ·gc.alloc.rate.norm:              4997144.066 B/op
                 ·gc.churn.PS_Eden_Space:          1117.663 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5057584.098 B/op
                 ·gc.churn.PS_Survivor_Space:      1.592 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 7204.509 B/op
                 ·gc.count:                        195.000 counts
                 ·gc.time:                         235.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 234.753 ops/s
                 ·gc.alloc.rate:                   1100.353 MB/sec
                 ·gc.alloc.rate.norm:              4997144.066 B/op
                 ·gc.churn.PS_Eden_Space:          1096.387 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4979135.518 B/op
                 ·gc.churn.PS_Survivor_Space:      1.289 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 5852.924 B/op
                 ·gc.count:                        146.000 counts
                 ·gc.time:                         250.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 235.676 ops/s
                 ·gc.alloc.rate:                   1104.701 MB/sec
                 ·gc.alloc.rate.norm:              4997144.061 B/op
                 ·gc.churn.PS_Eden_Space:          1110.032 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5021256.901 B/op
                 ·gc.churn.PS_Survivor_Space:      1.957 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 8851.206 B/op
                 ·gc.count:                        226.000 counts
                 ·gc.time:                         245.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 234.528 ops/s
                 ·gc.alloc.rate:                   1099.338 MB/sec
                 ·gc.alloc.rate.norm:              4997144.066 B/op
                 ·gc.churn.PS_Eden_Space:          1102.342 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5010798.529 B/op
                 ·gc.churn.PS_Survivor_Space:      2.316 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10528.414 B/op
                 ·gc.count:                        268.000 counts
                 ·gc.time:                         276.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  236.134 ±(99.9%) 2.190 ops/s [Average]
  (min, avg, max) = (234.528, 236.134, 237.352), stdev = 1.145
  CI (99.9%): [233.944, 238.323] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1106.832 ±(99.9%) 10.237 MB/sec [Average]
  (min, avg, max) = (1099.338, 1106.832, 1112.520), stdev = 5.354
  CI (99.9%): [1096.595, 1117.068] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  4997144.064 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (4997144.061, 4997144.064, 4997144.066), stdev = 0.002
  CI (99.9%): [4997144.059, 4997144.069] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1109.249 ±(99.9%) 13.388 MB/sec [Average]
  (min, avg, max) = (1096.387, 1109.249, 1117.663), stdev = 7.002
  CI (99.9%): [1095.861, 1122.637] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  5008072.309 ±(99.9%) 46224.003 B/op [Average]
  (min, avg, max) = (4979135.518, 5008072.309, 5057584.098), stdev = 24176.048
  CI (99.9%): [4961848.306, 5054296.313] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  2.009 ±(99.9%) 0.763 MB/sec [Average]
  (min, avg, max) = (1.289, 2.009, 2.493), stdev = 0.399
  CI (99.9%): [1.245, 2.772] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  9064.926 ±(99.9%) 3409.462 B/op [Average]
  (min, avg, max) = (5852.924, 9064.926, 11195.695), stdev = 1783.215
  CI (99.9%): [5655.464, 12474.388] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  1833.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (146.000, 229.125, 268.000), stdev = 41.657
  CI (99.9%): [1833.000, 1833.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2078.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (235.000, 259.750, 279.000), stdev = 15.908
  CI (99.9%): [2078.000, 2078.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 36.7%  36.7% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
 24.8%  24.8% tethys.jackson.JacksonTokenIterator.nextToken
  7.6%   7.6% scala.collection.immutable.HashMap.$plus
  6.3%   6.3% tethys.readers.instances.LowPriorityComplexReaders$$anon$3.recRead
  3.5%   3.5% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  2.6%   2.6% scala.collection.mutable.MapBuilder.$plus$eq
  2.6%   2.6% json.bench.macrojson.TethysBench$$anon$2.read
  1.5%   1.5% sun.misc.FloatingDecimal.parseDouble
  1.4%   1.4% java.math.BigDecimal.<init>
  1.2%   1.2% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._findSymbol2
 11.9%  11.9% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = tethys-jackson, size = 5000)

# Run progress: 6.12% complete, ETA 04:10:51
# Fork: 1 of 2
# Warmup Iteration   1: 34.840 ops/s
# Warmup Iteration   2: 39.802 ops/s
Iteration   1: 39.661 ops/s
                 ·gc.alloc.rate:                   1012.961 MB/sec
                 ·gc.alloc.rate.norm:              27227824.390 B/op
                 ·gc.churn.PS_Eden_Space:          982.683 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     26413981.903 B/op
                 ·gc.churn.PS_Survivor_Space:      1.903 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 51148.491 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         234.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 39.774 ops/s
                 ·gc.alloc.rate:                   1015.837 MB/sec
                 ·gc.alloc.rate.norm:              27227824.389 B/op
                 ·gc.churn.PS_Eden_Space:          1054.959 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     28276423.826 B/op
                 ·gc.churn.PS_Survivor_Space:      1.575 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 42222.513 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         257.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 39.708 ops/s
                 ·gc.alloc.rate:                   1014.166 MB/sec
                 ·gc.alloc.rate.norm:              27227824.362 B/op
                 ·gc.churn.PS_Eden_Space:          1013.181 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     27201398.550 B/op
                 ·gc.churn.PS_Survivor_Space:      1.595 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 42829.436 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         235.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 39.611 ops/s
                 ·gc.alloc.rate:                   1011.659 MB/sec
                 ·gc.alloc.rate.norm:              27227793.992 B/op
                 ·gc.churn.PS_Eden_Space:          1018.258 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     27405402.429 B/op
                 ·gc.churn.PS_Survivor_Space:      2.319 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 62421.975 B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         286.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 7.14% complete, ETA 04:08:12
# Fork: 2 of 2
# Warmup Iteration   1: 35.719 ops/s
# Warmup Iteration   2: 40.804 ops/s
Iteration   1: 40.702 ops/s
                 ·gc.alloc.rate:                   1039.492 MB/sec
                 ·gc.alloc.rate.norm:              27226000.380 B/op
                 ·gc.churn.PS_Eden_Space:          1046.031 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     27397265.807 B/op
                 ·gc.churn.PS_Survivor_Space:      1.813 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 47476.203 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         262.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 41.026 ops/s
                 ·gc.alloc.rate:                   1047.705 MB/sec
                 ·gc.alloc.rate.norm:              27226000.351 B/op
                 ·gc.churn.PS_Eden_Space:          1053.570 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     27378396.023 B/op
                 ·gc.churn.PS_Survivor_Space:      1.609 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 41818.619 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         235.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 40.820 ops/s
                 ·gc.alloc.rate:                   1042.456 MB/sec
                 ·gc.alloc.rate.norm:              27225998.132 B/op
                 ·gc.churn.PS_Eden_Space:          1021.469 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     26677871.837 B/op
                 ·gc.churn.PS_Survivor_Space:      1.982 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 51773.623 B/op
                 ·gc.count:                        40.000 counts
                 ·gc.time:                         250.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 40.814 ops/s
                 ·gc.alloc.rate:                   1042.212 MB/sec
                 ·gc.alloc.rate.norm:              27225967.432 B/op
                 ·gc.churn.PS_Eden_Space:          1053.574 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     27522766.054 B/op
                 ·gc.churn.PS_Survivor_Space:      1.741 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 45474.103 B/op
                 ·gc.count:                        40.000 counts
                 ·gc.time:                         254.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  40.265 ±(99.9%) 1.193 ops/s [Average]
  (min, avg, max) = (39.611, 40.265, 41.026), stdev = 0.624
  CI (99.9%): [39.072, 41.457] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1028.311 ±(99.9%) 30.344 MB/sec [Average]
  (min, avg, max) = (1011.659, 1028.311, 1047.705), stdev = 15.870
  CI (99.9%): [997.967, 1058.655] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  27226904.178 ±(99.9%) 1865.559 B/op [Average]
  (min, avg, max) = (27225967.432, 27226904.178, 27227824.390), stdev = 975.723
  CI (99.9%): [27225038.620, 27228769.737] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1030.466 ±(99.9%) 49.658 MB/sec [Average]
  (min, avg, max) = (982.683, 1030.466, 1054.959), stdev = 25.972
  CI (99.9%): [980.807, 1080.124] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  27284188.303 ±(99.9%) 1074197.126 B/op [Average]
  (min, avg, max) = (26413981.903, 27284188.303, 28276423.826), stdev = 561825.867
  CI (99.9%): [26209991.178, 28358385.429] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  1.817 ±(99.9%) 0.481 MB/sec [Average]
  (min, avg, max) = (1.575, 1.817, 2.319), stdev = 0.252
  CI (99.9%): [1.336, 2.299] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  48145.620 ±(99.9%) 13265.365 B/op [Average]
  (min, avg, max) = (41818.619, 48145.620, 62421.975), stdev = 6938.042
  CI (99.9%): [34880.255, 61410.985] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  279.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (29.000, 34.875, 40.000), stdev = 4.486
  CI (99.9%): [279.000, 279.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2013.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (234.000, 251.625, 286.000), stdev = 17.687
  CI (99.9%): [2013.000, 2013.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 32.0%  32.0% tethys.jackson.JacksonTokenIterator.nextToken
 16.2%  16.2% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  8.8%   8.8% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  8.7%   8.7% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  6.3%   6.3% scala.collection.immutable.HashMap.$plus
  5.5%   5.5% tethys.readers.instances.LowPriorityComplexReaders$$anon$3.recRead
  3.1%   3.1% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  2.6%   2.6% scala.collection.mutable.MapBuilder.$plus$eq
  1.9%   1.9% json.bench.macrojson.TethysBench$$anon$2.read
  1.7%   1.7% java.lang.String.hashCode
 13.1%  13.1% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = tethys-jackson, size = 10000)

# Run progress: 8.16% complete, ETA 04:05:31
# Fork: 1 of 2
# Warmup Iteration   1: 15.272 ops/s
# Warmup Iteration   2: 17.437 ops/s
Iteration   1: 19.307 ops/s
                 ·gc.alloc.rate:                   990.851 MB/sec
                 ·gc.alloc.rate.norm:              54710496.800 B/op
                 ·gc.churn.PS_Eden_Space:          967.487 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     53420427.476 B/op
                 ·gc.churn.PS_Survivor_Space:      0.790 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 43615.421 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         55.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 19.368 ops/s
                 ·gc.alloc.rate:                   994.006 MB/sec
                 ·gc.alloc.rate.norm:              54710546.323 B/op
                 ·gc.churn.PS_Eden_Space:          978.000 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     53829603.849 B/op
                 ·gc.churn.PS_Survivor_Space:      1.802 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 99204.838 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         90.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 19.339 ops/s
                 ·gc.alloc.rate:                   992.392 MB/sec
                 ·gc.alloc.rate.norm:              54710496.799 B/op
                 ·gc.churn.PS_Eden_Space:          1034.925 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     57055348.324 B/op
                 ·gc.churn.PS_Survivor_Space:      2.915 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 160681.749 B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         174.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 19.371 ops/s
                 ·gc.alloc.rate:                   994.137 MB/sec
                 ·gc.alloc.rate.norm:              54710496.742 B/op
                 ·gc.churn.PS_Eden_Space:          992.732 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     54633151.780 B/op
                 ·gc.churn.PS_Survivor_Space:      3.093 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 170202.337 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         226.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 9.18% complete, ETA 04:02:55
# Fork: 2 of 2
# Warmup Iteration   1: 18.482 ops/s
# Warmup Iteration   2: 19.672 ops/s
Iteration   1: 20.252 ops/s
                 ·gc.alloc.rate:                   1039.321 MB/sec
                 ·gc.alloc.rate.norm:              54710136.171 B/op
                 ·gc.churn.PS_Eden_Space:          1023.094 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     53855932.632 B/op
                 ·gc.churn.PS_Survivor_Space:      0.435 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 22905.263 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         64.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 20.116 ops/s
                 ·gc.alloc.rate:                   1032.353 MB/sec
                 ·gc.alloc.rate.norm:              54710088.768 B/op
                 ·gc.churn.PS_Eden_Space:          1051.712 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     55735980.927 B/op
                 ·gc.churn.PS_Survivor_Space:      0.925 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 49043.497 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         124.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 20.037 ops/s
                 ·gc.alloc.rate:                   1028.295 MB/sec
                 ·gc.alloc.rate.norm:              54710088.771 B/op
                 ·gc.churn.PS_Eden_Space:          1060.174 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     56406247.336 B/op
                 ·gc.churn.PS_Survivor_Space:      3.377 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 179679.734 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         235.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 20.137 ops/s
                 ·gc.alloc.rate:                   1033.432 MB/sec
                 ·gc.alloc.rate.norm:              54710088.714 B/op
                 ·gc.churn.PS_Eden_Space:          1040.643 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     55091836.403 B/op
                 ·gc.churn.PS_Survivor_Space:      3.752 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 198612.231 B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         238.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  19.741 ±(99.9%) 0.815 ops/s [Average]
  (min, avg, max) = (19.307, 19.741, 20.252), stdev = 0.426
  CI (99.9%): [18.926, 20.556] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1013.098 ±(99.9%) 41.830 MB/sec [Average]
  (min, avg, max) = (990.851, 1013.098, 1039.321), stdev = 21.878
  CI (99.9%): [971.268, 1054.929] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  54710304.886 ±(99.9%) 419.746 B/op [Average]
  (min, avg, max) = (54710088.714, 54710304.886, 54710546.323), stdev = 219.535
  CI (99.9%): [54709885.140, 54710724.632] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1018.596 ±(99.9%) 66.733 MB/sec [Average]
  (min, avg, max) = (967.487, 1018.596, 1060.174), stdev = 34.903
  CI (99.9%): [951.862, 1085.329] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  55003566.091 ±(99.9%) 2509648.386 B/op [Average]
  (min, avg, max) = (53420427.476, 55003566.091, 57055348.324), stdev = 1312594.632
  CI (99.9%): [52493917.704, 57513214.477] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  2.136 ±(99.9%) 2.499 MB/sec [Average]
  (min, avg, max) = (0.435, 2.136, 3.752), stdev = 1.307
  CI (99.9%): [≈ 0, 4.635] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  115493.134 ±(99.9%) 134195.977 B/op [Average]
  (min, avg, max) = (22905.263, 115493.134, 198612.231), stdev = 70187.091
  CI (99.9%): [≈ 0, 249689.111] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  167.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (7.000, 20.875, 39.000), stdev = 12.253
  CI (99.9%): [167.000, 167.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  1206.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (55.000, 150.750, 238.000), stdev = 77.472
  CI (99.9%): [1206.000, 1206.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 37.7%  37.7% tethys.jackson.JacksonTokenIterator.nextToken
  9.3%   9.3% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  9.3%   9.3% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  8.8%   8.8% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  6.7%   6.7% scala.collection.immutable.HashMap.$plus
  5.7%   5.7% tethys.readers.instances.LowPriorityComplexReaders$$anon$3.recRead
  3.6%   3.6% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  2.4%   2.4% scala.collection.mutable.MapBuilder.$plus$eq
  2.1%   2.1% json.bench.macrojson.TethysBench$$anon$2.read
  1.8%   1.8% java.lang.String.hashCode
 12.5%  12.5% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = tethys-jackson, size = 50000)

# Run progress: 10.20% complete, ETA 04:00:15
# Fork: 1 of 2
# Warmup Iteration   1: 4.297 ops/s
# Warmup Iteration   2: 4.548 ops/s
Iteration   1: 4.555 ops/s
                 ·gc.alloc.rate:                   1198.203 MB/sec
                 ·gc.alloc.rate.norm:              280486979.153 B/op
                 ·gc.churn.PS_Eden_Space:          1188.523 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     278220889.693 B/op
                 ·gc.churn.PS_Survivor_Space:      16.587 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3882887.474 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         810.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 4.572 ops/s
                 ·gc.alloc.rate:                   1202.836 MB/sec
                 ·gc.alloc.rate.norm:              280486979.362 B/op
                 ·gc.churn.PS_Eden_Space:          1203.893 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     280733428.870 B/op
                 ·gc.churn.PS_Survivor_Space:      9.092 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2120183.652 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         730.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 4.594 ops/s
                 ·gc.alloc.rate:                   1208.625 MB/sec
                 ·gc.alloc.rate.norm:              280486979.130 B/op
                 ·gc.churn.PS_Eden_Space:          1202.861 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     279149167.304 B/op
                 ·gc.churn.PS_Survivor_Space:      14.076 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3266589.449 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         634.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 4.607 ops/s
                 ·gc.alloc.rate:                   1212.172 MB/sec
                 ·gc.alloc.rate.norm:              280486979.108 B/op
                 ·gc.churn.PS_Eden_Space:          1220.385 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     282387551.770 B/op
                 ·gc.churn.PS_Survivor_Space:      5.838 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1350795.511 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         552.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 11.22% complete, ETA 03:57:55
# Fork: 2 of 2
# Warmup Iteration   1: 4.407 ops/s
# Warmup Iteration   2: 4.617 ops/s
Iteration   1: 4.661 ops/s
                 ·gc.alloc.rate:                   1231.744 MB/sec
                 ·gc.alloc.rate.norm:              281693267.314 B/op
                 ·gc.churn.PS_Eden_Space:          1233.165 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     282018260.114 B/op
                 ·gc.churn.PS_Survivor_Space:      17.287 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3953458.857 B/op
                 ·gc.count:                        26.000 counts
                 ·gc.time:                         777.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 4.681 ops/s
                 ·gc.alloc.rate:                   1236.901 MB/sec
                 ·gc.alloc.rate.norm:              281693267.064 B/op
                 ·gc.churn.PS_Eden_Space:          1203.961 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     274191468.936 B/op
                 ·gc.churn.PS_Survivor_Space:      10.842 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2469102.752 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         706.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 4.701 ops/s
                 ·gc.alloc.rate:                   1242.414 MB/sec
                 ·gc.alloc.rate.norm:              281693267.268 B/op
                 ·gc.churn.PS_Eden_Space:          1255.950 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     284762227.380 B/op
                 ·gc.churn.PS_Survivor_Space:      14.955 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3390794.817 B/op
                 ·gc.count:                        22.000 counts
                 ·gc.time:                         497.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 4.673 ops/s
                 ·gc.alloc.rate:                   1234.912 MB/sec
                 ·gc.alloc.rate.norm:              281693267.064 B/op
                 ·gc.churn.PS_Eden_Space:          1206.003 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     275098747.461 B/op
                 ·gc.churn.PS_Survivor_Space:      6.445 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1470144.000 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         714.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  4.630 ±(99.9%) 0.106 ops/s [Average]
  (min, avg, max) = (4.555, 4.630, 4.701), stdev = 0.055
  CI (99.9%): [4.524, 4.736] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1220.976 ±(99.9%) 33.125 MB/sec [Average]
  (min, avg, max) = (1198.203, 1220.976, 1242.414), stdev = 17.325
  CI (99.9%): [1187.851, 1254.101] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  281090123.183 ±(99.9%) 1232818.765 B/op [Average]
  (min, avg, max) = (280486979.108, 281090123.183, 281693267.314), stdev = 644788.052
  CI (99.9%): [279857304.417, 282322941.948] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1214.342 ±(99.9%) 40.924 MB/sec [Average]
  (min, avg, max) = (1188.523, 1214.342, 1255.950), stdev = 21.404
  CI (99.9%): [1173.418, 1255.267] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  279570217.691 ±(99.9%) 6975182.534 B/op [Average]
  (min, avg, max) = (274191468.936, 279570217.691, 284762227.380), stdev = 3648155.337
  CI (99.9%): [272595035.157, 286545400.225] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  11.890 ±(99.9%) 8.568 MB/sec [Average]
  (min, avg, max) = (5.838, 11.890, 17.287), stdev = 4.481
  CI (99.9%): [3.322, 20.458] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  2737994.564 ±(99.9%) 1976369.594 B/op [Average]
  (min, avg, max) = (1350795.511, 2737994.564, 3953458.857), stdev = 1033679.513
  CI (99.9%): [761624.970, 4714364.158] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  180.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (20.000, 22.500, 26.000), stdev = 2.204
  CI (99.9%): [180.000, 180.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  5420.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (497.000, 677.500, 810.000), stdev = 108.615
  CI (99.9%): [5420.000, 5420.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 45.5%  45.5% tethys.jackson.JacksonTokenIterator.nextToken
 15.0%  15.0% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  6.9%   6.9% tethys.readers.instances.LowPriorityComplexReaders$$anon$3.recRead
  6.6%   6.6% scala.collection.immutable.HashMap.$plus
  3.6%   3.6% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  2.8%   2.8% scala.collection.mutable.MapBuilder.$plus$eq
  2.5%   2.5% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  2.2%   2.2% java.lang.String.hashCode
  1.6%   1.6% sun.misc.FloatingDecimal.parseDouble
  1.5%   1.5% json.bench.macrojson.TethysBench$$anon$2.read
 11.7%  11.7% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = tethys-jackson, size = 100000)

# Run progress: 12.24% complete, ETA 03:55:33
# Fork: 1 of 2
# Warmup Iteration   1: 2.162 ops/s
# Warmup Iteration   2: 2.252 ops/s
Iteration   1: 2.288 ops/s
                 ·gc.alloc.rate:                   1214.348 MB/sec
                 ·gc.alloc.rate.norm:              565833990.725 B/op
                 ·gc.churn.PS_Eden_Space:          1234.736 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     575333895.420 B/op
                 ·gc.churn.PS_Survivor_Space:      21.732 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10126260.870 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         872.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2.278 ops/s
                 ·gc.alloc.rate:                   1209.171 MB/sec
                 ·gc.alloc.rate.norm:              565833990.261 B/op
                 ·gc.churn.PS_Eden_Space:          1167.169 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     546178923.594 B/op
                 ·gc.churn.PS_Survivor_Space:      15.890 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 7435961.507 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         907.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2.327 ops/s
                 ·gc.alloc.rate:                   1235.066 MB/sec
                 ·gc.alloc.rate.norm:              565833990.629 B/op
                 ·gc.churn.PS_Eden_Space:          1240.249 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     568208354.743 B/op
                 ·gc.churn.PS_Survivor_Space:      1.381 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 632890.057 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         282.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2.297 ops/s
                 ·gc.alloc.rate:                   1219.259 MB/sec
                 ·gc.alloc.rate.norm:              565833990.261 B/op
                 ·gc.churn.PS_Eden_Space:          1188.597 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     551604164.638 B/op
                 ·gc.churn.PS_Survivor_Space:      9.998 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4639757.913 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         744.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 13.27% complete, ETA 03:53:24
# Fork: 2 of 2
# Warmup Iteration   1: 2.209 ops/s
# Warmup Iteration   2: 2.313 ops/s
Iteration   1: 2.339 ops/s
                 ·gc.alloc.rate:                   1241.749 MB/sec
                 ·gc.alloc.rate.norm:              565835550.535 B/op
                 ·gc.churn.PS_Eden_Space:          1265.013 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     576436195.155 B/op
                 ·gc.churn.PS_Survivor_Space:      20.705 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 9434876.394 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         1089.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2.376 ops/s
                 ·gc.alloc.rate:                   1261.413 MB/sec
                 ·gc.alloc.rate.norm:              565835550.444 B/op
                 ·gc.churn.PS_Eden_Space:          1206.193 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     541065216.000 B/op
                 ·gc.churn.PS_Survivor_Space:      7.134 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3200340.889 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         594.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2.358 ops/s
                 ·gc.alloc.rate:                   1251.479 MB/sec
                 ·gc.alloc.rate.norm:              565835550.085 B/op
                 ·gc.churn.PS_Eden_Space:          1284.054 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     580564040.113 B/op
                 ·gc.churn.PS_Survivor_Space:      13.516 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6111000.338 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         829.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2.356 ops/s
                 ·gc.alloc.rate:                   1250.579 MB/sec
                 ·gc.alloc.rate.norm:              565835550.535 B/op
                 ·gc.churn.PS_Eden_Space:          1261.490 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     570772407.887 B/op
                 ·gc.churn.PS_Survivor_Space:      17.677 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 7998160.225 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         777.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  2.327 ±(99.9%) 0.069 ops/s [Average]
  (min, avg, max) = (2.278, 2.327, 2.376), stdev = 0.036
  CI (99.9%): [2.258, 2.397] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1235.383 ±(99.9%) 36.832 MB/sec [Average]
  (min, avg, max) = (1209.171, 1235.383, 1261.413), stdev = 19.264
  CI (99.9%): [1198.551, 1272.215] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  565834770.434 ±(99.9%) 1594.240 B/op [Average]
  (min, avg, max) = (565833990.261, 565834770.434, 565835550.535), stdev = 833.818
  CI (99.9%): [565833176.194, 565836364.674] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1230.937 ±(99.9%) 77.458 MB/sec [Average]
  (min, avg, max) = (1167.169, 1230.937, 1284.054), stdev = 40.512
  CI (99.9%): [1153.479, 1308.396] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  563770399.694 ±(99.9%) 29067497.940 B/op [Average]
  (min, avg, max) = (541065216.000, 563770399.694, 580564040.113), stdev = 15202863.470
  CI (99.9%): [534702901.754, 592837897.634] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  13.504 ±(99.9%) 13.374 MB/sec [Average]
  (min, avg, max) = (1.381, 13.504, 21.732), stdev = 6.995
  CI (99.9%): [0.130, 26.878] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  6197406.024 ±(99.9%) 6177519.770 B/op [Average]
  (min, avg, max) = (632890.057, 6197406.024, 10126260.870), stdev = 3230962.288
  CI (99.9%): [19886.255, 12374925.794] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  114.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (13.000, 14.250, 16.000), stdev = 1.165
  CI (99.9%): [114.000, 114.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  6094.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (282.000, 761.750, 1089.000), stdev = 240.153
  CI (99.9%): [6094.000, 6094.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 28.3%  28.3% tethys.jackson.JacksonTokenIterator.nextToken
 20.4%  20.4% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
 14.3%  14.3% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  7.2%   7.2% tethys.readers.instances.LowPriorityComplexReaders$$anon$3.recRead
  6.5%   6.5% scala.collection.immutable.HashMap.$plus
  3.4%   3.4% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  2.6%   2.6% scala.collection.mutable.MapBuilder.$plus$eq
  2.3%   2.3% java.lang.String.hashCode
  1.5%   1.5% sun.misc.FloatingDecimal.parseDouble
  1.4%   1.4% java.math.BigDecimal.<init>
 12.1%  12.1% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = circe-jawn, size = 10)

# Run progress: 14.29% complete, ETA 03:51:11
# Fork: 1 of 2
# Warmup Iteration   1: 12834.470 ops/s
# Warmup Iteration   2: 13184.211 ops/s
Iteration   1: 13164.167 ops/s
                 ·gc.alloc.rate:                   2642.718 MB/sec
                 ·gc.alloc.rate.norm:              214016.001 B/op
                 ·gc.churn.PS_Eden_Space:          2646.596 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     214330.053 B/op
                 ·gc.churn.PS_Survivor_Space:      0.075 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6.057 B/op
                 ·gc.count:                        421.000 counts
                 ·gc.time:                         279.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 13166.794 ops/s
                 ·gc.alloc.rate:                   2643.231 MB/sec
                 ·gc.alloc.rate.norm:              214016.001 B/op
                 ·gc.churn.PS_Eden_Space:          2644.843 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     214146.494 B/op
                 ·gc.churn.PS_Survivor_Space:      0.095 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 7.715 B/op
                 ·gc.count:                        412.000 counts
                 ·gc.time:                         273.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 13169.455 ops/s
                 ·gc.alloc.rate:                   2643.804 MB/sec
                 ·gc.alloc.rate.norm:              214016.001 B/op
                 ·gc.churn.PS_Eden_Space:          2644.946 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     214108.440 B/op
                 ·gc.churn.PS_Survivor_Space:      0.085 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6.884 B/op
                 ·gc.count:                        418.000 counts
                 ·gc.time:                         280.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 13218.758 ops/s
                 ·gc.alloc.rate:                   2653.678 MB/sec
                 ·gc.alloc.rate.norm:              214016.001 B/op
                 ·gc.churn.PS_Eden_Space:          2654.473 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     214080.146 B/op
                 ·gc.churn.PS_Survivor_Space:      0.059 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.793 B/op
                 ·gc.count:                        374.000 counts
                 ·gc.time:                         261.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 15.31% complete, ETA 03:48:17
# Fork: 2 of 2
# Warmup Iteration   1: 12867.326 ops/s
# Warmup Iteration   2: 13092.753 ops/s
Iteration   1: 13114.342 ops/s
                 ·gc.alloc.rate:                   2632.718 MB/sec
                 ·gc.alloc.rate.norm:              214016.001 B/op
                 ·gc.churn.PS_Eden_Space:          2639.491 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     214566.557 B/op
                 ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6.746 B/op
                 ·gc.count:                        380.000 counts
                 ·gc.time:                         264.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 13169.834 ops/s
                 ·gc.alloc.rate:                   2643.872 MB/sec
                 ·gc.alloc.rate.norm:              214016.001 B/op
                 ·gc.churn.PS_Eden_Space:          2640.835 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     213770.192 B/op
                 ·gc.churn.PS_Survivor_Space:      0.080 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6.469 B/op
                 ·gc.count:                        369.000 counts
                 ·gc.time:                         254.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 13123.194 ops/s
                 ·gc.alloc.rate:                   2634.472 MB/sec
                 ·gc.alloc.rate.norm:              214016.001 B/op
                 ·gc.churn.PS_Eden_Space:          2639.509 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     214425.160 B/op
                 ·gc.churn.PS_Survivor_Space:      0.079 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6.409 B/op
                 ·gc.count:                        426.000 counts
                 ·gc.time:                         282.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 13137.257 ops/s
                 ·gc.alloc.rate:                   2637.302 MB/sec
                 ·gc.alloc.rate.norm:              214016.001 B/op
                 ·gc.churn.PS_Eden_Space:          2639.105 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     214162.309 B/op
                 ·gc.churn.PS_Survivor_Space:      0.081 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6.568 B/op
                 ·gc.count:                        409.000 counts
                 ·gc.time:                         275.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  13157.975 ±(99.9%) 63.108 ops/s [Average]
  (min, avg, max) = (13114.342, 13157.975, 13218.758), stdev = 33.006
  CI (99.9%): [13094.868, 13221.083] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2641.474 ±(99.9%) 12.679 MB/sec [Average]
  (min, avg, max) = (2632.718, 2641.474, 2653.678), stdev = 6.632
  CI (99.9%): [2628.795, 2654.154] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  214016.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (214016.001, 214016.001, 214016.001), stdev = 0.001
  CI (99.9%): [214016.001, 214016.001] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2643.725 ±(99.9%) 10.011 MB/sec [Average]
  (min, avg, max) = (2639.105, 2643.725, 2654.473), stdev = 5.236
  CI (99.9%): [2633.714, 2653.736] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  214198.669 ±(99.9%) 464.826 B/op [Average]
  (min, avg, max) = (213770.192, 214198.669, 214566.557), stdev = 243.113
  CI (99.9%): [213733.843, 214663.495] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  0.080 ±(99.9%) 0.019 MB/sec [Average]
  (min, avg, max) = (0.059, 0.080, 0.095), stdev = 0.010
  CI (99.9%): [0.060, 0.099] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  6.455 ±(99.9%) 1.582 B/op [Average]
  (min, avg, max) = (4.793, 6.455, 7.715), stdev = 0.828
  CI (99.9%): [4.873, 8.037] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  3209.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (369.000, 401.125, 426.000), stdev = 22.969
  CI (99.9%): [3209.000, 3209.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2168.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (254.000, 271.000, 282.000), stdev = 10.170
  CI (99.9%): [2168.000, 2168.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 35.4%  35.4% jawn.Parser.rparse
 26.6%  26.6% io.circe.SeqDecoder.apply
  7.9%   7.9% jawn.Parser.parseNum
  3.2%   3.2% jawn.CharBasedParser$class.parseStringSimple
  3.1%   3.1% json.bench.circe.CirceBench$anon$lazy$macro$53$1$$anon$4.apply
  2.7%   2.7% java.math.BigInteger.<init>
  2.5%   2.5% scala.collection.immutable.HashMap.$plus
  2.4%   2.4% io.circe.MapDecoder.apply
  2.0%   2.0% io.circe.Decoder$class.tryDecode
  1.8%   1.8% java.util.LinkedHashMap.afterNodeInsertion
 12.4%  12.4% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = circe-jawn, size = 100)

# Run progress: 16.33% complete, ETA 03:45:24
# Fork: 1 of 2
# Warmup Iteration   1: 1549.143 ops/s
# Warmup Iteration   2: 1583.049 ops/s
Iteration   1: 1590.761 ops/s
                 ·gc.alloc.rate:                   2608.730 MB/sec
                 ·gc.alloc.rate.norm:              1748271.743 B/op
                 ·gc.churn.PS_Eden_Space:          2608.286 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1747974.517 B/op
                 ·gc.churn.PS_Survivor_Space:      1.129 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 756.586 B/op
                 ·gc.count:                        304.000 counts
                 ·gc.time:                         264.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 1591.837 ops/s
                 ·gc.alloc.rate:                   2610.460 MB/sec
                 ·gc.alloc.rate.norm:              1748256.011 B/op
                 ·gc.churn.PS_Eden_Space:          2609.723 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1747762.067 B/op
                 ·gc.churn.PS_Survivor_Space:      1.248 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 835.736 B/op
                 ·gc.count:                        329.000 counts
                 ·gc.time:                         277.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 1588.847 ops/s
                 ·gc.alloc.rate:                   2605.508 MB/sec
                 ·gc.alloc.rate.norm:              1748256.009 B/op
                 ·gc.churn.PS_Eden_Space:          2604.281 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1747432.347 B/op
                 ·gc.churn.PS_Survivor_Space:      1.289 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 864.812 B/op
                 ·gc.count:                        325.000 counts
                 ·gc.time:                         278.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 1591.874 ops/s
                 ·gc.alloc.rate:                   2610.525 MB/sec
                 ·gc.alloc.rate.norm:              1748256.009 B/op
                 ·gc.churn.PS_Eden_Space:          2609.306 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1747440.035 B/op
                 ·gc.churn.PS_Survivor_Space:      1.016 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 680.651 B/op
                 ·gc.count:                        260.000 counts
                 ·gc.time:                         249.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 17.35% complete, ETA 03:42:33
# Fork: 2 of 2
# Warmup Iteration   1: 1557.019 ops/s
# Warmup Iteration   2: 1592.225 ops/s
Iteration   1: 1592.751 ops/s
                 ·gc.alloc.rate:                   2611.922 MB/sec
                 ·gc.alloc.rate.norm:              1748240.417 B/op
                 ·gc.churn.PS_Eden_Space:          2617.649 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1752074.093 B/op
                 ·gc.churn.PS_Survivor_Space:      1.176 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 787.260 B/op
                 ·gc.count:                        328.000 counts
                 ·gc.time:                         278.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 1587.616 ops/s
                 ·gc.alloc.rate:                   2603.537 MB/sec
                 ·gc.alloc.rate.norm:              1748256.009 B/op
                 ·gc.churn.PS_Eden_Space:          2598.753 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1745043.570 B/op
                 ·gc.churn.PS_Survivor_Space:      1.087 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 729.936 B/op
                 ·gc.count:                        294.000 counts
                 ·gc.time:                         268.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 1579.597 ops/s
                 ·gc.alloc.rate:                   2590.338 MB/sec
                 ·gc.alloc.rate.norm:              1748256.010 B/op
                 ·gc.churn.PS_Eden_Space:          2591.958 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1749348.875 B/op
                 ·gc.churn.PS_Survivor_Space:      0.894 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 603.652 B/op
                 ·gc.count:                        247.000 counts
                 ·gc.time:                         236.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 1599.473 ops/s
                 ·gc.alloc.rate:                   2622.904 MB/sec
                 ·gc.alloc.rate.norm:              1748256.009 B/op
                 ·gc.churn.PS_Eden_Space:          2627.386 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1751243.193 B/op
                 ·gc.churn.PS_Survivor_Space:      0.915 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 609.812 B/op
                 ·gc.count:                        260.000 counts
                 ·gc.time:                         249.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  1590.345 ±(99.9%) 10.696 ops/s [Average]
  (min, avg, max) = (1579.597, 1590.345, 1599.473), stdev = 5.594
  CI (99.9%): [1579.649, 1601.040] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2607.991 ±(99.9%) 17.531 MB/sec [Average]
  (min, avg, max) = (2590.338, 2607.991, 2622.904), stdev = 9.169
  CI (99.9%): [2590.459, 2625.522] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  1748256.027 ±(99.9%) 16.007 B/op [Average]
  (min, avg, max) = (1748240.417, 1748256.027, 1748271.743), stdev = 8.372
  CI (99.9%): [1748240.020, 1748272.034] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2608.418 ±(99.9%) 20.807 MB/sec [Average]
  (min, avg, max) = (2591.958, 2608.418, 2627.386), stdev = 10.882
  CI (99.9%): [2587.611, 2629.225] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  1748539.837 ±(99.9%) 4338.248 B/op [Average]
  (min, avg, max) = (1745043.570, 1748539.837, 1752074.093), stdev = 2268.988
  CI (99.9%): [1744201.589, 1752878.085] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  1.094 ±(99.9%) 0.278 MB/sec [Average]
  (min, avg, max) = (0.894, 1.094, 1.289), stdev = 0.145
  CI (99.9%): [0.817, 1.372] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  733.556 ±(99.9%) 185.771 B/op [Average]
  (min, avg, max) = (603.652, 733.556, 864.812), stdev = 97.162
  CI (99.9%): [547.784, 919.327] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  2347.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (247.000, 293.375, 329.000), stdev = 33.721
  CI (99.9%): [2347.000, 2347.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2099.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (236.000, 262.375, 278.000), stdev = 15.991
  CI (99.9%): [2099.000, 2099.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 40.7%  40.7% jawn.Parser.rparse
 22.7%  22.7% io.circe.SeqDecoder.apply
  8.2%   8.2% jawn.Parser.parseNum
  4.0%   4.0% scala.collection.immutable.HashMap.$plus
  3.9%   3.9% json.bench.circe.CirceBench$anon$lazy$macro$53$1$$anon$4.apply
  3.1%   3.1% io.circe.MapDecoder.apply
  3.0%   3.0% jawn.CharBasedParser$class.parseStringSimple
  2.7%   2.7% java.math.BigInteger.<init>
  2.1%   2.1% io.circe.Decoder$class.tryDecode
  1.6%   1.6% scala.collection.mutable.MapBuilder.$plus$eq
  8.1%   8.1% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = circe-jawn, size = 1000)

# Run progress: 18.37% complete, ETA 03:39:42
# Fork: 1 of 2
# Warmup Iteration   1: 143.784 ops/s
# Warmup Iteration   2: 150.256 ops/s
Iteration   1: 150.313 ops/s
                 ·gc.alloc.rate:                   2378.184 MB/sec
                 ·gc.alloc.rate.norm:              16866936.447 B/op
                 ·gc.churn.PS_Eden_Space:          2383.137 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     16902068.619 B/op
                 ·gc.churn.PS_Survivor_Space:      1.868 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 13245.247 B/op
                 ·gc.count:                        56.000 counts
                 ·gc.time:                         276.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 150.564 ops/s
                 ·gc.alloc.rate:                   2382.155 MB/sec
                 ·gc.alloc.rate.norm:              16866912.103 B/op
                 ·gc.churn.PS_Eden_Space:          2386.404 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     16897000.197 B/op
                 ·gc.churn.PS_Survivor_Space:      1.817 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 12862.002 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         261.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 150.445 ops/s
                 ·gc.alloc.rate:                   2380.252 MB/sec
                 ·gc.alloc.rate.norm:              16866912.103 B/op
                 ·gc.churn.PS_Eden_Space:          2371.545 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     16805207.451 B/op
                 ·gc.churn.PS_Survivor_Space:      1.844 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 13066.549 B/op
                 ·gc.count:                        56.000 counts
                 ·gc.time:                         280.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 150.639 ops/s
                 ·gc.alloc.rate:                   2383.268 MB/sec
                 ·gc.alloc.rate.norm:              16866912.096 B/op
                 ·gc.churn.PS_Eden_Space:          2412.011 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     17070330.110 B/op
                 ·gc.churn.PS_Survivor_Space:      1.556 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 11012.078 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         261.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 19.39% complete, ETA 03:36:53
# Fork: 2 of 2
# Warmup Iteration   1: 142.659 ops/s
# Warmup Iteration   2: 152.900 ops/s
Iteration   1: 152.705 ops/s
                 ·gc.alloc.rate:                   2418.482 MB/sec
                 ·gc.alloc.rate.norm:              16884023.808 B/op
                 ·gc.churn.PS_Eden_Space:          2409.263 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     16819667.080 B/op
                 ·gc.churn.PS_Survivor_Space:      1.907 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 13316.023 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         276.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 153.080 ops/s
                 ·gc.alloc.rate:                   2424.403 MB/sec
                 ·gc.alloc.rate.norm:              16884000.101 B/op
                 ·gc.churn.PS_Eden_Space:          2436.967 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     16971498.207 B/op
                 ·gc.churn.PS_Survivor_Space:      1.994 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 13883.416 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         260.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 153.072 ops/s
                 ·gc.alloc.rate:                   2424.269 MB/sec
                 ·gc.alloc.rate.norm:              16884000.094 B/op
                 ·gc.churn.PS_Eden_Space:          2443.143 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     17015445.710 B/op
                 ·gc.churn.PS_Survivor_Space:      1.776 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 12370.937 B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         271.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 153.043 ops/s
                 ·gc.alloc.rate:                   2423.697 MB/sec
                 ·gc.alloc.rate.norm:              16884000.101 B/op
                 ·gc.churn.PS_Eden_Space:          2424.791 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     16891618.564 B/op
                 ·gc.churn.PS_Survivor_Space:      1.755 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 12223.777 B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         268.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  151.732 ±(99.9%) 2.556 ops/s [Average]
  (min, avg, max) = (150.313, 151.732, 153.080), stdev = 1.337
  CI (99.9%): [149.177, 154.288] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2401.839 ±(99.9%) 42.905 MB/sec [Average]
  (min, avg, max) = (2378.184, 2401.839, 2424.403), stdev = 22.440
  CI (99.9%): [2358.934, 2444.744] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  16875462.107 ±(99.9%) 17463.677 B/op [Average]
  (min, avg, max) = (16866912.096, 16875462.107, 16884023.808), stdev = 9133.841
  CI (99.9%): [16857998.429, 16892925.784] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2408.408 ±(99.9%) 49.994 MB/sec [Average]
  (min, avg, max) = (2371.545, 2408.408, 2443.143), stdev = 26.148
  CI (99.9%): [2358.414, 2458.401] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  16921604.492 ±(99.9%) 175890.661 B/op [Average]
  (min, avg, max) = (16805207.451, 16921604.492, 17070330.110), stdev = 91994.216
  CI (99.9%): [16745713.832, 17097495.153] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  1.814 ±(99.9%) 0.246 MB/sec [Average]
  (min, avg, max) = (1.556, 1.814, 1.994), stdev = 0.129
  CI (99.9%): [1.568, 2.061] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  12747.503 ±(99.9%) 1679.922 B/op [Average]
  (min, avg, max) = (11012.078, 12747.503, 13883.416), stdev = 878.631
  CI (99.9%): [11067.582, 14427.425] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  430.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (48.000, 53.750, 58.000), stdev = 3.808
  CI (99.9%): [430.000, 430.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2153.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (260.000, 269.125, 280.000), stdev = 7.864
  CI (99.9%): [2153.000, 2153.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 35.8%  35.8% jawn.Parser.rparse
 22.7%  22.7% io.circe.SeqDecoder.apply
  7.3%   7.3% jawn.Parser.parseNum
  4.4%   4.4% scala.collection.immutable.HashMap.$plus
  3.5%   3.5% json.bench.circe.CirceBench$anon$lazy$macro$53$1$$anon$4.apply
  3.3%   3.3% java.math.BigInteger.<init>
  2.7%   2.7% jawn.CharBasedParser$class.parseStringSimple
  2.1%   2.1% io.circe.HCursor.downField
  2.0%   2.0% io.circe.MapDecoder.apply
  1.7%   1.7% io.circe.Decoder$class.tryDecode
 14.4%  14.4% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = circe-jawn, size = 5000)

# Run progress: 20.41% complete, ETA 03:34:04
# Fork: 1 of 2
# Warmup Iteration   1: 25.475 ops/s
# Warmup Iteration   2: 29.507 ops/s
Iteration   1: 29.512 ops/s
                 ·gc.alloc.rate:                   2346.437 MB/sec
                 ·gc.alloc.rate.norm:              84758840.524 B/op
                 ·gc.churn.PS_Eden_Space:          2343.196 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     84641741.147 B/op
                 ·gc.churn.PS_Survivor_Space:      3.897 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 140761.860 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         235.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 29.586 ops/s
                 ·gc.alloc.rate:                   2352.254 MB/sec
                 ·gc.alloc.rate.norm:              84758840.486 B/op
                 ·gc.churn.PS_Eden_Space:          2302.898 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     82980384.288 B/op
                 ·gc.churn.PS_Survivor_Space:      4.225 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 152253.117 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         275.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 28.970 ops/s
                 ·gc.alloc.rate:                   2303.315 MB/sec
                 ·gc.alloc.rate.norm:              84758840.533 B/op
                 ·gc.churn.PS_Eden_Space:          2330.201 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     85748206.345 B/op
                 ·gc.churn.PS_Survivor_Space:      2.439 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 89754.189 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         284.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 29.666 ops/s
                 ·gc.alloc.rate:                   2358.533 MB/sec
                 ·gc.alloc.rate.norm:              84758840.521 B/op
                 ·gc.churn.PS_Eden_Space:          2430.715 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     87352860.764 B/op
                 ·gc.churn.PS_Survivor_Space:      3.792 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 136263.335 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         226.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 21.43% complete, ETA 03:31:17
# Fork: 2 of 2
# Warmup Iteration   1: 27.616 ops/s
# Warmup Iteration   2: 30.085 ops/s
Iteration   1: 30.053 ops/s
                 ·gc.alloc.rate:                   2352.419 MB/sec
                 ·gc.alloc.rate.norm:              83446568.514 B/op
                 ·gc.churn.PS_Eden_Space:          2339.296 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     82981072.887 B/op
                 ·gc.churn.PS_Survivor_Space:      4.744 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 168272.035 B/op
                 ·gc.count:                        22.000 counts
                 ·gc.time:                         255.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 29.843 ops/s
                 ·gc.alloc.rate:                   2335.991 MB/sec
                 ·gc.alloc.rate.norm:              83446568.518 B/op
                 ·gc.churn.PS_Eden_Space:          2382.235 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     85098496.000 B/op
                 ·gc.churn.PS_Survivor_Space:      3.861 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 137910.857 B/op
                 ·gc.count:                        22.000 counts
                 ·gc.time:                         263.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 29.997 ops/s
                 ·gc.alloc.rate:                   2347.990 MB/sec
                 ·gc.alloc.rate.norm:              83446568.480 B/op
                 ·gc.churn.PS_Eden_Space:          2331.230 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     82850902.471 B/op
                 ·gc.churn.PS_Survivor_Space:      3.551 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 126193.209 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         280.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 29.940 ops/s
                 ·gc.alloc.rate:                   2343.593 MB/sec
                 ·gc.alloc.rate.norm:              83446568.481 B/op
                 ·gc.churn.PS_Eden_Space:          2387.973 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     85026800.053 B/op
                 ·gc.churn.PS_Survivor_Space:      2.720 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 96846.024 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         231.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  29.696 ±(99.9%) 0.675 ops/s [Average]
  (min, avg, max) = (28.970, 29.696, 30.053), stdev = 0.353
  CI (99.9%): [29.021, 30.371] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2342.567 ±(99.9%) 32.920 MB/sec [Average]
  (min, avg, max) = (2303.315, 2342.567, 2358.533), stdev = 17.218
  CI (99.9%): [2309.646, 2375.487] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  84102704.507 ±(99.9%) 1341133.779 B/op [Average]
  (min, avg, max) = (83446568.480, 84102704.507, 84758840.533), stdev = 701438.899
  CI (99.9%): [82761570.728, 85443838.286] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2355.968 ±(99.9%) 78.617 MB/sec [Average]
  (min, avg, max) = (2302.898, 2355.968, 2430.715), stdev = 41.118
  CI (99.9%): [2277.351, 2434.585] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  84585057.994 ±(99.9%) 3034362.488 B/op [Average]
  (min, avg, max) = (82850902.471, 84585057.994, 87352860.764), stdev = 1587030.253
  CI (99.9%): [81550695.507, 87619420.482] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  3.654 ±(99.9%) 1.444 MB/sec [Average]
  (min, avg, max) = (2.439, 3.654, 4.744), stdev = 0.755
  CI (99.9%): [2.209, 5.098] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  131031.828 ±(99.9%) 50598.828 B/op [Average]
  (min, avg, max) = (89754.189, 131031.828, 168272.035), stdev = 26464.165
  CI (99.9%): [80433.001, 181630.656] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  164.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (17.000, 20.500, 25.000), stdev = 3.117
  CI (99.9%): [164.000, 164.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2049.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (226.000, 256.125, 284.000), stdev = 23.105
  CI (99.9%): [2049.000, 2049.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 30.4%  30.4% jawn.Parser.rparse
 23.6%  23.6% io.circe.SeqDecoder.apply
  7.4%   7.4% jawn.Parser.parseNum
  7.2%   7.2% json.bench.circe.CirceBench$anon$lazy$macro$53$1$$anon$4.apply
  5.3%   5.3% java.util.HashMap.hash
  4.2%   4.2% scala.collection.immutable.HashMap.$plus
  2.7%   2.7% java.math.BigInteger.<init>
  2.6%   2.6% java.util.HashMap.putVal
  2.6%   2.6% jawn.CharBasedParser$class.parseStringSimple
  2.5%   2.5% io.circe.MapDecoder.apply
 11.6%  11.6% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = circe-jawn, size = 10000)

# Run progress: 22.45% complete, ETA 03:28:30
# Fork: 1 of 2
# Warmup Iteration   1: 13.481 ops/s
# Warmup Iteration   2: 14.455 ops/s
Iteration   1: 14.405 ops/s
                 ·gc.alloc.rate:                   2315.842 MB/sec
                 ·gc.alloc.rate.norm:              171380281.072 B/op
                 ·gc.churn.PS_Eden_Space:          2408.092 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     178207065.275 B/op
                 ·gc.churn.PS_Survivor_Space:      4.467 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 330555.714 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         391.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 14.454 ops/s
                 ·gc.alloc.rate:                   2323.620 MB/sec
                 ·gc.alloc.rate.norm:              171380280.995 B/op
                 ·gc.churn.PS_Eden_Space:          2237.570 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     165033540.424 B/op
                 ·gc.churn.PS_Survivor_Space:      6.767 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 499070.230 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         340.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 14.418 ops/s
                 ·gc.alloc.rate:                   2317.914 MB/sec
                 ·gc.alloc.rate.norm:              171380281.072 B/op
                 ·gc.churn.PS_Eden_Space:          2382.325 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     176142605.598 B/op
                 ·gc.churn.PS_Survivor_Space:      5.086 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 376037.395 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         396.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 14.454 ops/s
                 ·gc.alloc.rate:                   2323.571 MB/sec
                 ·gc.alloc.rate.norm:              171380281.069 B/op
                 ·gc.churn.PS_Eden_Space:          2411.036 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     177831482.986 B/op
                 ·gc.churn.PS_Survivor_Space:      6.031 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 444859.576 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         375.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 23.47% complete, ETA 03:25:44
# Fork: 2 of 2
# Warmup Iteration   1: 13.716 ops/s
# Warmup Iteration   2: 14.430 ops/s
Iteration   1: 14.793 ops/s
                 ·gc.alloc.rate:                   2380.284 MB/sec
                 ·gc.alloc.rate.norm:              171540281.045 B/op
                 ·gc.churn.PS_Eden_Space:          2250.414 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     162180935.495 B/op
                 ·gc.churn.PS_Survivor_Space:      4.842 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 348934.919 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         342.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 14.885 ops/s
                 ·gc.alloc.rate:                   2395.209 MB/sec
                 ·gc.alloc.rate.norm:              171540280.966 B/op
                 ·gc.churn.PS_Eden_Space:          2422.680 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     173507659.597 B/op
                 ·gc.churn.PS_Survivor_Space:      5.520 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 395341.888 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         324.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 14.843 ops/s
                 ·gc.alloc.rate:                   2388.316 MB/sec
                 ·gc.alloc.rate.norm:              171540281.040 B/op
                 ·gc.churn.PS_Eden_Space:          2421.974 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     173957817.973 B/op
                 ·gc.churn.PS_Survivor_Space:      6.104 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 438400.574 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         325.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 14.844 ops/s
                 ·gc.alloc.rate:                   2388.562 MB/sec
                 ·gc.alloc.rate.norm:              171540280.969 B/op
                 ·gc.churn.PS_Eden_Space:          2424.712 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     174136499.085 B/op
                 ·gc.churn.PS_Survivor_Space:      5.348 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 384105.614 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         354.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  14.637 ±(99.9%) 0.421 ops/s [Average]
  (min, avg, max) = (14.405, 14.637, 14.885), stdev = 0.220
  CI (99.9%): [14.216, 15.058] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2354.165 ±(99.9%) 69.945 MB/sec [Average]
  (min, avg, max) = (2315.842, 2354.165, 2395.209), stdev = 36.583
  CI (99.9%): [2284.220, 2424.110] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  171460281.029 ±(99.9%) 163518.950 B/op [Average]
  (min, avg, max) = (171380280.995, 171460281.029, 171540281.045), stdev = 85523.572
  CI (99.9%): [171296762.079, 171623799.978] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2369.850 ±(99.9%) 150.887 MB/sec [Average]
  (min, avg, max) = (2237.570, 2369.850, 2424.712), stdev = 78.917
  CI (99.9%): [2218.963, 2520.737] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  172624700.804 ±(99.9%) 11246327.785 B/op [Average]
  (min, avg, max) = (162180935.495, 172624700.804, 178207065.275), stdev = 5882046.890
  CI (99.9%): [161378373.019, 183871028.590] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  5.521 ±(99.9%) 1.435 MB/sec [Average]
  (min, avg, max) = (4.467, 5.521, 6.767), stdev = 0.751
  CI (99.9%): [4.086, 6.956] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  402163.239 ±(99.9%) 106068.836 B/op [Average]
  (min, avg, max) = (330555.714, 402163.239, 499070.230), stdev = 55476.052
  CI (99.9%): [296094.402, 508232.075] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  110.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (13.000, 13.750, 14.000), stdev = 0.463
  CI (99.9%): [110.000, 110.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2847.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (324.000, 355.875, 396.000), stdev = 28.352
  CI (99.9%): [2847.000, 2847.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 33.9%  33.9% jawn.Parser.rparse
 23.1%  23.1% io.circe.SeqDecoder.apply
  7.2%   7.2% jawn.Parser.parseNum
  6.8%   6.8% json.bench.circe.CirceBench$anon$lazy$macro$53$1$$anon$4.apply
  4.1%   4.1% scala.collection.immutable.HashMap.$plus
  3.8%   3.8% jawn.CharBasedParser$class.parseStringSimple
  3.2%   3.2% io.circe.MapDecoder.apply
  2.6%   2.6% java.math.BigInteger.<init>
  2.3%   2.3% io.circe.Decoder$class.tryDecode
  1.6%   1.6% java.util.HashMap.putVal
 11.3%  11.3% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = circe-jawn, size = 50000)

# Run progress: 24.49% complete, ETA 03:22:59
# Fork: 1 of 2
# Warmup Iteration   1: 2.229 ops/s
# Warmup Iteration   2: 2.713 ops/s
Iteration   1: 2.719 ops/s
                 ·gc.alloc.rate:                   2173.709 MB/sec
                 ·gc.alloc.rate.norm:              852297213.268 B/op
                 ·gc.churn.PS_Eden_Space:          2123.493 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     832607706.537 B/op
                 ·gc.churn.PS_Survivor_Space:      27.538 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10797455.610 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         2845.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2.851 ops/s
                 ·gc.alloc.rate:                   2279.685 MB/sec
                 ·gc.alloc.rate.norm:              852297213.395 B/op
                 ·gc.churn.PS_Eden_Space:          2398.020 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     896538576.372 B/op
                 ·gc.churn.PS_Survivor_Space:      41.753 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 15610141.767 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         1504.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2.859 ops/s
                 ·gc.alloc.rate:                   2285.419 MB/sec
                 ·gc.alloc.rate.norm:              852297213.023 B/op
                 ·gc.churn.PS_Eden_Space:          2262.091 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     843597681.116 B/op
                 ·gc.churn.PS_Survivor_Space:      37.675 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 14050232.558 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         1509.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2.853 ops/s
                 ·gc.alloc.rate:                   2280.942 MB/sec
                 ·gc.alloc.rate.norm:              852297213.023 B/op
                 ·gc.churn.PS_Eden_Space:          2245.179 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     838933956.465 B/op
                 ·gc.churn.PS_Survivor_Space:      38.047 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 14216739.721 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         1577.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 25.51% complete, ETA 03:20:22
# Fork: 2 of 2
# Warmup Iteration   1: 2.192 ops/s
# Warmup Iteration   2: 2.700 ops/s
Iteration   1: 2.699 ops/s
                 ·gc.alloc.rate:                   2159.966 MB/sec
                 ·gc.alloc.rate.norm:              853097213.728 B/op
                 ·gc.churn.PS_Eden_Space:          2237.803 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     883839532.247 B/op
                 ·gc.churn.PS_Survivor_Space:      29.621 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 11698985.086 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         2784.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2.812 ops/s
                 ·gc.alloc.rate:                   2250.762 MB/sec
                 ·gc.alloc.rate.norm:              853097213.459 B/op
                 ·gc.churn.PS_Eden_Space:          2236.326 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     847625661.741 B/op
                 ·gc.churn.PS_Survivor_Space:      39.128 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 14830411.294 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         1635.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2.831 ops/s
                 ·gc.alloc.rate:                   2265.058 MB/sec
                 ·gc.alloc.rate.norm:              853097213.082 B/op
                 ·gc.churn.PS_Eden_Space:          2260.963 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     851554737.694 B/op
                 ·gc.churn.PS_Survivor_Space:      39.699 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 14951845.647 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         1414.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2.842 ops/s
                 ·gc.alloc.rate:                   2274.346 MB/sec
                 ·gc.alloc.rate.norm:              853097213.023 B/op
                 ·gc.churn.PS_Eden_Space:          2251.962 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     844701124.465 B/op
                 ·gc.churn.PS_Survivor_Space:      37.882 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 14209500.279 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         1417.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  2.808 ±(99.9%) 0.121 ops/s [Average]
  (min, avg, max) = (2.699, 2.808, 2.859), stdev = 0.063
  CI (99.9%): [2.687, 2.929] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2246.236 ±(99.9%) 96.215 MB/sec [Average]
  (min, avg, max) = (2159.966, 2246.236, 2285.419), stdev = 50.322
  CI (99.9%): [2150.021, 2342.451] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  852697213.250 ±(99.9%) 817595.136 B/op [Average]
  (min, avg, max) = (852297213.023, 852697213.250, 853097213.728), stdev = 427618.065
  CI (99.9%): [851879618.115, 853514808.386] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2251.980 ±(99.9%) 141.818 MB/sec [Average]
  (min, avg, max) = (2123.493, 2251.980, 2398.020), stdev = 74.173
  CI (99.9%): [2110.162, 2393.798] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  854924872.080 ±(99.9%) 43473730.871 B/op [Average]
  (min, avg, max) = (832607706.537, 854924872.080, 896538576.372), stdev = 22737601.850
  CI (99.9%): [811451141.209, 898398602.950] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  36.418 ±(99.9%) 9.642 MB/sec [Average]
  (min, avg, max) = (27.538, 36.418, 41.753), stdev = 5.043
  CI (99.9%): [26.776, 46.060] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  13795663.995 ±(99.9%) 3191049.537 B/op [Average]
  (min, avg, max) = (10797455.610, 13795663.995, 15610141.767), stdev = 1668980.610
  CI (99.9%): [10604614.458, 16986713.532] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  124.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (15.000, 15.500, 17.000), stdev = 0.756
  CI (99.9%): [124.000, 124.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  14685.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1414.000, 1835.625, 2845.000), stdev = 608.871
  CI (99.9%): [14685.000, 14685.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 30.0%  30.0% jawn.Parser.rparse
 23.4%  23.4% io.circe.SeqDecoder.apply
  8.3%   8.3% java.util.HashMap.putVal
  7.0%   7.0% json.bench.circe.CirceBench$anon$lazy$macro$53$1$$anon$4.apply
  7.0%   7.0% jawn.Parser.parseNum
  4.7%   4.7% io.circe.MapDecoder.apply
  4.2%   4.2% scala.collection.immutable.HashMap.$plus
  2.7%   2.7% java.math.BigInteger.<init>
  2.6%   2.6% jawn.CharBasedParser$class.parseStringSimple
  2.4%   2.4% io.circe.Decoder$class.tryDecode
  7.8%   7.8% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = circe-jawn, size = 100000)

# Run progress: 26.53% complete, ETA 03:17:44
# Fork: 1 of 2
# Warmup Iteration   1: 0.956 ops/s
# Warmup Iteration   2: 1.280 ops/s
Iteration   1: 1.304 ops/s
                 ·gc.alloc.rate:                   2087.293 MB/sec
                 ·gc.alloc.rate.norm:              1705941979.600 B/op
                 ·gc.churn.PS_Eden_Space:          2175.770 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1778253824.000 B/op
                 ·gc.churn.PS_Survivor_Space:      70.652 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 57743769.600 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         3992.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 1.322 ops/s
                 ·gc.alloc.rate:                   2115.228 MB/sec
                 ·gc.alloc.rate.norm:              1705941979.600 B/op
                 ·gc.churn.PS_Eden_Space:          2049.342 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1652804812.800 B/op
                 ·gc.churn.PS_Survivor_Space:      76.201 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 61456384.000 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         3573.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 1.309 ops/s
                 ·gc.alloc.rate:                   2095.464 MB/sec
                 ·gc.alloc.rate.norm:              1705941978.800 B/op
                 ·gc.churn.PS_Eden_Space:          2144.938 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1746219827.200 B/op
                 ·gc.churn.PS_Survivor_Space:      73.894 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 60157952.000 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         3938.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 1.335 ops/s
                 ·gc.alloc.rate:                   2137.629 MB/sec
                 ·gc.alloc.rate.norm:              1705941979.317 B/op
                 ·gc.churn.PS_Eden_Space:          2144.746 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1711621294.829 B/op
                 ·gc.churn.PS_Survivor_Space:      80.166 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 63976722.732 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         3433.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 27.55% complete, ETA 03:15:18
# Fork: 2 of 2
# Warmup Iteration   1: 0.940 ops/s
# Warmup Iteration   2: 1.264 ops/s
Iteration   1: 1.327 ops/s
                 ·gc.alloc.rate:                   2122.874 MB/sec
                 ·gc.alloc.rate.norm:              1705941979.600 B/op
                 ·gc.churn.PS_Eden_Space:          2174.790 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1747661619.200 B/op
                 ·gc.churn.PS_Survivor_Space:      79.086 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 63553536.000 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         3570.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 1.328 ops/s
                 ·gc.alloc.rate:                   2125.760 MB/sec
                 ·gc.alloc.rate.norm:              1705941979.600 B/op
                 ·gc.churn.PS_Eden_Space:          2066.259 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1658191872.000 B/op
                 ·gc.churn.PS_Survivor_Space:      77.715 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 62367334.400 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         3544.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 1.294 ops/s
                 ·gc.alloc.rate:                   2070.429 MB/sec
                 ·gc.alloc.rate.norm:              1705941979.897 B/op
                 ·gc.churn.PS_Eden_Space:          2160.715 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1780334171.897 B/op
                 ·gc.churn.PS_Survivor_Space:      59.513 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 49036051.692 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         4262.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 1.335 ops/s
                 ·gc.alloc.rate:                   2137.783 MB/sec
                 ·gc.alloc.rate.norm:              1705941979.317 B/op
                 ·gc.churn.PS_Eden_Space:          2141.904 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1709230030.049 B/op
                 ·gc.churn.PS_Survivor_Space:      79.126 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 63142337.561 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         3498.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  1.319 ±(99.9%) 0.029 ops/s [Average]
  (min, avg, max) = (1.294, 1.319, 1.335), stdev = 0.015
  CI (99.9%): [1.290, 1.349] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2111.558 ±(99.9%) 47.112 MB/sec [Average]
  (min, avg, max) = (2070.429, 2111.558, 2137.783), stdev = 24.641
  CI (99.9%): [2064.445, 2158.670] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  1705941979.466 ±(99.9%) 0.624 B/op [Average]
  (min, avg, max) = (1705941978.800, 1705941979.466, 1705941979.897), stdev = 0.326
  CI (99.9%): [1705941978.842, 1705941980.091] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2132.308 ±(99.9%) 91.845 MB/sec [Average]
  (min, avg, max) = (2049.342, 2132.308, 2175.770), stdev = 48.037
  CI (99.9%): [2040.463, 2224.153] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  1723039681.497 ±(99.9%) 94040308.021 B/op [Average]
  (min, avg, max) = (1652804812.800, 1723039681.497, 1780334171.897), stdev = 49184899.451
  CI (99.9%): [1628999373.476, 1817079989.517] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  74.544 ±(99.9%) 13.079 MB/sec [Average]
  (min, avg, max) = (59.513, 74.544, 80.166), stdev = 6.840
  CI (99.9%): [61.465, 87.623] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  60179260.998 ±(99.9%) 9452977.004 B/op [Average]
  (min, avg, max) = (49036051.692, 60179260.998, 63976722.732), stdev = 4944089.755
  CI (99.9%): [50726283.994, 69632238.002] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  142.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (17.000, 17.750, 18.000), stdev = 0.463
  CI (99.9%): [142.000, 142.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  29810.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (3433.000, 3726.250, 4262.000), stdev = 298.017
  CI (99.9%): [29810.000, 29810.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 35.2%  35.2% jawn.Parser.rparse
 24.3%  24.3% io.circe.SeqDecoder.apply
  7.8%   7.8% json.bench.circe.CirceBench$anon$lazy$macro$53$1$$anon$4.apply
  7.7%   7.7% jawn.Parser.parseNum
  4.9%   4.9% io.circe.MapDecoder.apply
  4.0%   4.0% scala.collection.immutable.HashMap.$plus
  2.8%   2.8% jawn.CharBasedParser$class.parseStringSimple
  2.7%   2.7% java.math.BigInteger.<init>
  2.3%   2.3% io.circe.Decoder$class.tryDecode
  1.5%   1.5% java.util.HashMap.putVal
  6.8%   6.8% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = pure-jackson, size = 10)

# Run progress: 28.57% complete, ETA 03:12:46
# Fork: 1 of 2
# Warmup Iteration   1: 25542.731 ops/s
# Warmup Iteration   2: 25566.552 ops/s
Iteration   1: 25589.257 ops/s
                 ·gc.alloc.rate:                   1317.480 MB/sec
                 ·gc.alloc.rate.norm:              54888.001 B/op
                 ·gc.churn.PS_Eden_Space:          1320.137 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     54998.674 B/op
                 ·gc.churn.PS_Survivor_Space:      0.118 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.909 B/op
                 ·gc.count:                        386.000 counts
                 ·gc.time:                         258.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 25603.543 ops/s
                 ·gc.alloc.rate:                   1318.229 MB/sec
                 ·gc.alloc.rate.norm:              54888.001 B/op
                 ·gc.churn.PS_Eden_Space:          1320.976 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     55002.380 B/op
                 ·gc.churn.PS_Survivor_Space:      0.140 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 5.844 B/op
                 ·gc.count:                        442.000 counts
                 ·gc.time:                         286.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 25643.677 ops/s
                 ·gc.alloc.rate:                   1320.272 MB/sec
                 ·gc.alloc.rate.norm:              54888.001 B/op
                 ·gc.churn.PS_Eden_Space:          1321.264 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     54929.264 B/op
                 ·gc.churn.PS_Survivor_Space:      0.120 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.983 B/op
                 ·gc.count:                        404.000 counts
                 ·gc.time:                         253.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 25617.940 ops/s
                 ·gc.alloc.rate:                   1318.970 MB/sec
                 ·gc.alloc.rate.norm:              54888.001 B/op
                 ·gc.churn.PS_Eden_Space:          1320.213 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     54939.716 B/op
                 ·gc.churn.PS_Survivor_Space:      0.124 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 5.159 B/op
                 ·gc.count:                        412.000 counts
                 ·gc.time:                         269.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 29.59% complete, ETA 03:09:57
# Fork: 2 of 2
# Warmup Iteration   1: 25375.075 ops/s
# Warmup Iteration   2: 25483.404 ops/s
Iteration   1: 25517.390 ops/s
                 ·gc.alloc.rate:                   1315.933 MB/sec
                 ·gc.alloc.rate.norm:              54984.001 B/op
                 ·gc.churn.PS_Eden_Space:          1320.350 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     55168.534 B/op
                 ·gc.churn.PS_Survivor_Space:      0.107 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.452 B/op
                 ·gc.count:                        361.000 counts
                 ·gc.time:                         227.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 25550.493 ops/s
                 ·gc.alloc.rate:                   1317.802 MB/sec
                 ·gc.alloc.rate.norm:              54984.001 B/op
                 ·gc.churn.PS_Eden_Space:          1319.425 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     55051.717 B/op
                 ·gc.churn.PS_Survivor_Space:      0.112 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.660 B/op
                 ·gc.count:                        361.000 counts
                 ·gc.time:                         249.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 25514.313 ops/s
                 ·gc.alloc.rate:                   1315.895 MB/sec
                 ·gc.alloc.rate.norm:              54984.001 B/op
                 ·gc.churn.PS_Eden_Space:          1318.498 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     55092.763 B/op
                 ·gc.churn.PS_Survivor_Space:      0.111 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.623 B/op
                 ·gc.count:                        393.000 counts
                 ·gc.time:                         254.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 25457.426 ops/s
                 ·gc.alloc.rate:                   1312.986 MB/sec
                 ·gc.alloc.rate.norm:              54984.001 B/op
                 ·gc.churn.PS_Eden_Space:          1314.967 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     55066.949 B/op
                 ·gc.churn.PS_Survivor_Space:      0.137 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 5.749 B/op
                 ·gc.count:                        447.000 counts
                 ·gc.time:                         283.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  25561.755 ±(99.9%) 120.059 ops/s [Average]
  (min, avg, max) = (25457.426, 25561.755, 25643.677), stdev = 62.793
  CI (99.9%): [25441.696, 25681.814] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1317.196 ±(99.9%) 4.283 MB/sec [Average]
  (min, avg, max) = (1312.986, 1317.196, 1320.272), stdev = 2.240
  CI (99.9%): [1312.913, 1321.479] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  54936.001 ±(99.9%) 98.111 B/op [Average]
  (min, avg, max) = (54888.001, 54936.001, 54984.001), stdev = 51.314
  CI (99.9%): [54837.889, 55034.112] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1319.479 ±(99.9%) 3.857 MB/sec [Average]
  (min, avg, max) = (1314.967, 1319.479, 1321.264), stdev = 2.017
  CI (99.9%): [1315.622, 1323.335] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  55031.249 ±(99.9%) 153.296 B/op [Average]
  (min, avg, max) = (54929.264, 55031.249, 55168.534), stdev = 80.177
  CI (99.9%): [54877.954, 55184.545] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  0.121 ±(99.9%) 0.024 MB/sec [Average]
  (min, avg, max) = (0.107, 0.121, 0.140), stdev = 0.012
  CI (99.9%): [0.097, 0.145] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  5.047 ±(99.9%) 0.983 B/op [Average]
  (min, avg, max) = (4.452, 5.047, 5.844), stdev = 0.514
  CI (99.9%): [4.065, 6.030] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  3206.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (361.000, 400.750, 447.000), stdev = 32.548
  CI (99.9%): [3206.000, 3206.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2079.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (227.000, 259.875, 286.000), stdev = 19.216
  CI (99.9%): [2079.000, 2079.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 47.3%  47.3% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readSeqOfInt
  8.4%   8.4% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol
  7.2%   7.2% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readDataObject
  7.1%   7.1% scala.collection.immutable.HashMap.$plus
  3.7%   3.7% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readMap
  3.2%   3.2% java.lang.String.hashCode
  3.1%   3.1% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  3.1%   3.1% scala.collection.mutable.MapBuilder.$plus$eq
  2.4%   2.4% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  2.4%   2.4% com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext
 12.1%  12.1% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = pure-jackson, size = 100)

# Run progress: 30.61% complete, ETA 03:07:08
# Fork: 1 of 2
# Warmup Iteration   1: 2706.989 ops/s
# Warmup Iteration   2: 2700.797 ops/s
Iteration   1: 2707.739 ops/s
                 ·gc.alloc.rate:                   970.219 MB/sec
                 ·gc.alloc.rate.norm:              381991.327 B/op
                 ·gc.churn.PS_Eden_Space:          971.996 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     382690.874 B/op
                 ·gc.churn.PS_Survivor_Space:      0.598 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 235.576 B/op
                 ·gc.count:                        363.000 counts
                 ·gc.time:                         248.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2710.464 ops/s
                 ·gc.alloc.rate:                   971.208 MB/sec
                 ·gc.alloc.rate.norm:              381992.006 B/op
                 ·gc.churn.PS_Eden_Space:          969.610 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     381363.442 B/op
                 ·gc.churn.PS_Survivor_Space:      0.561 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 220.831 B/op
                 ·gc.count:                        354.000 counts
                 ·gc.time:                         251.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2700.766 ops/s
                 ·gc.alloc.rate:                   967.701 MB/sec
                 ·gc.alloc.rate.norm:              381992.005 B/op
                 ·gc.churn.PS_Eden_Space:          971.217 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     383380.203 B/op
                 ·gc.churn.PS_Survivor_Space:      0.653 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 257.618 B/op
                 ·gc.count:                        407.000 counts
                 ·gc.time:                         269.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2701.573 ops/s
                 ·gc.alloc.rate:                   968.005 MB/sec
                 ·gc.alloc.rate.norm:              381992.005 B/op
                 ·gc.churn.PS_Eden_Space:          970.629 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     383027.428 B/op
                 ·gc.churn.PS_Survivor_Space:      0.650 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 256.328 B/op
                 ·gc.count:                        407.000 counts
                 ·gc.time:                         272.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 31.63% complete, ETA 03:04:20
# Fork: 2 of 2
# Warmup Iteration   1: 2715.579 ops/s
# Warmup Iteration   2: 2705.686 ops/s
Iteration   1: 2714.270 ops/s
                 ·gc.alloc.rate:                   980.575 MB/sec
                 ·gc.alloc.rate.norm:              385135.381 B/op
                 ·gc.churn.PS_Eden_Space:          981.661 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     385562.121 B/op
                 ·gc.churn.PS_Survivor_Space:      0.617 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 242.252 B/op
                 ·gc.count:                        367.000 counts
                 ·gc.time:                         248.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2711.916 ops/s
                 ·gc.alloc.rate:                   979.728 MB/sec
                 ·gc.alloc.rate.norm:              385136.006 B/op
                 ·gc.churn.PS_Eden_Space:          982.295 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     386145.085 B/op
                 ·gc.churn.PS_Survivor_Space:      0.546 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 214.670 B/op
                 ·gc.count:                        361.000 counts
                 ·gc.time:                         260.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2711.198 ops/s
                 ·gc.alloc.rate:                   979.460 MB/sec
                 ·gc.alloc.rate.norm:              385136.005 B/op
                 ·gc.churn.PS_Eden_Space:          980.227 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     385437.438 B/op
                 ·gc.churn.PS_Survivor_Space:      0.551 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 216.742 B/op
                 ·gc.count:                        358.000 counts
                 ·gc.time:                         238.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2711.932 ops/s
                 ·gc.alloc.rate:                   979.722 MB/sec
                 ·gc.alloc.rate.norm:              385136.005 B/op
                 ·gc.churn.PS_Eden_Space:          980.798 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     385558.699 B/op
                 ·gc.churn.PS_Survivor_Space:      0.625 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 245.682 B/op
                 ·gc.count:                        374.000 counts
                 ·gc.time:                         256.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  2708.732 ±(99.9%) 9.582 ops/s [Average]
  (min, avg, max) = (2700.766, 2708.732, 2714.270), stdev = 5.012
  CI (99.9%): [2699.150, 2718.315] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  974.577 ±(99.9%) 11.046 MB/sec [Average]
  (min, avg, max) = (967.701, 974.577, 980.575), stdev = 5.777
  CI (99.9%): [963.531, 985.623] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  383563.843 ±(99.9%) 3213.162 B/op [Average]
  (min, avg, max) = (381991.327, 383563.843, 385136.006), stdev = 1680.546
  CI (99.9%): [380350.680, 386777.005] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  976.054 ±(99.9%) 10.746 MB/sec [Average]
  (min, avg, max) = (969.610, 976.054, 982.295), stdev = 5.620
  CI (99.9%): [965.308, 986.800] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  384145.661 ±(99.9%) 3340.132 B/op [Average]
  (min, avg, max) = (381363.442, 384145.661, 386145.085), stdev = 1746.954
  CI (99.9%): [380805.529, 387485.793] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  0.600 ±(99.9%) 0.082 MB/sec [Average]
  (min, avg, max) = (0.546, 0.600, 0.653), stdev = 0.043
  CI (99.9%): [0.518, 0.682] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  236.212 ±(99.9%) 32.872 B/op [Average]
  (min, avg, max) = (214.670, 236.212, 257.618), stdev = 17.193
  CI (99.9%): [203.340, 269.085] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  2991.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (354.000, 373.875, 407.000), stdev = 21.290
  CI (99.9%): [2991.000, 2991.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2042.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (238.000, 255.250, 272.000), stdev = 11.424
  CI (99.9%): [2042.000, 2042.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 40.3%  40.3% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readSeqOfInt
 16.9%  16.9% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  8.4%   8.4% scala.collection.immutable.HashMap.$plus
  7.0%   7.0% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  3.7%   3.7% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readMap
  3.6%   3.6% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  3.4%   3.4% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readDataObject
  3.4%   3.4% scala.collection.mutable.MapBuilder.$plus$eq
  2.8%   2.8% java.lang.String.hashCode
  2.1%   2.1% sun.misc.FloatingDecimal.parseDouble
  8.4%   8.4% <other>



# JMH 1.18 (released 187 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = pure-jackson, size = 1000)

# Run progress: 32.65% complete, ETA 03:01:31
# Fork: 1 of 2
# Warmup Iteration   1: 268.729 ops/s
# Warmup Iteration   2: 269.023 ops/s
Iteration   1: 267.983 ops/s
                 ·gc.alloc.rate:                   898.049 MB/sec
                 ·gc.alloc.rate.norm:              3572744.054 B/op
                 ·gc.churn.PS_Eden_Space:          899.518 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3578591.375 B/op
                 ·gc.churn.PS_Survivor_Space:      2.705 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10759.737 B/op
                 ·gc.count:                        187.000 counts
                 ·gc.time:                         267.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 269.118 ops/s
                 ·gc.alloc.rate:                   901.902 MB/sec
                 ·gc.alloc.rate.norm:              3572744.057 B/op
                 ·gc.churn.PS_Eden_Space:          905.705 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3587807.848 B/op
                 ·gc.churn.PS_Survivor_Space:      2.760 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10933.570 B/op
                 ·gc.count:                        189.000 counts
                 ·gc.time:                         258.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 269.250 ops/s
                 ·gc.alloc.rate:                   902.325 MB/sec
                 ·gc.alloc.rate.norm:              3572744.053 B/op
                 ·gc.churn.PS_Eden_Space:          900.222 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3564418.504 B/op
                 ·gc.churn.PS_Survivor_Space:      3.019 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 11954.452 B/op
                 ·gc.count:                        191.000 counts
                 ·gc.time:                         266.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 268.869 ops/s
                 ·gc.alloc.rate:                   901.063 MB/sec
                 ·gc.alloc.rate.norm:              3572744.054 B/op
                 ·gc.churn.PS_Eden_Space:          902.483 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3578373.805 B/op
                 ·gc.churn.PS_Survivor_Space:      2.561 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10155.038 B/op
                 ·gc.count:                        179.000 counts
                 ·gc.time:                         268.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 33.67% complete, ETA 02:58:44
# Fork: 2 of 2
# Warmup Iteration   1: 271.572 ops/s
# Warmup Iteration   2: 273.483 ops/s
Iteration   1: 273.477 ops/s
                 ·gc.alloc.rate:                   916.275 MB/sec
                 ·gc.alloc.rate.norm:              3571856.057 B/op
                 ·gc.churn.PS_Eden_Space:          922.802 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3597299.395 B/op
                 ·gc.churn.PS_Survivor_Space:      2.188 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 8530.523 B/op
                 ·gc.count:                        148.000 counts
                 ·gc.time:                         255.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 273.562 ops/s
                 ·gc.alloc.rate:                   916.563 MB/sec
                 ·gc.alloc.rate.norm:              3571856.057 B/op
                 ·gc.churn.PS_Eden_Space:          917.490 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3575468.342 B/op
                 ·gc.churn.PS_Survivor_Space:      2.656 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10351.152 B/op
                 ·gc.count:                        179.000 counts
                 ·gc.time:                         254.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 274.348 ops/s
                 ·gc.alloc.rate:                   919.197 MB/sec
                 ·gc.alloc.rate.norm:              3571856.052 B/op
                 ·gc.churn.PS_Eden_Space:          918.608 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3569566.216 B/op
                 ·gc.churn.PS_Survivor_Space:      2.661 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10340.848 B/op
                 ·gc.count:                        182.000 counts
                 ·gc.time:                         260.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 274.038 ops/s
                 ·gc.alloc.rate:                   918.145 MB/sec
                 ·gc.alloc.rate.norm:              3571856.053 B/op
                 ·gc.churn.PS_Eden_Space:          920.937 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3582719.165 B/op
                 ·gc.churn.PS_Survivor_Space:      2.963 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 11525.883 B/op
                 ·gc.count:                        190.000 counts
                 ·gc.time:                         271.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  271.331 ±(99.9%) 5.237 ops/s [Average]
  (min, avg, max) = (267.983, 271.331, 274.348), stdev = 2.739
  CI (99.9%): [266.094, 276.567] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  909.190 ±(99.9%) 17.334 MB/sec [Average]
  (min, avg, max) = (898.049, 909.190, 919.197), stdev = 9.066
  CI (99.9%): [891.856, 926.524] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  3572300.055 ±(99.9%) 907.530 B/op [Average]
  (min, avg, max) = (3571856.052, 3572300.055, 3572744.057), stdev = 474.656
  CI (99.9%): [3571392.524, 3573207.585] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  910.971 ±(99.9%) 18.936 MB/sec [Average]
  (min, avg, max) = (899.518, 910.971, 922.802), stdev = 9.904
  CI (99.9%): [892.035, 929.907] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  3579280.581 ±(99.9%) 19662.379 B/op [Average]
  (min, avg, max) = (3564418.504, 3579280.581, 3597299.395), stdev = 10283.805
  CI (99.9%): [3559618.202, 3598942.961] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  2.689 ±(99.9%) 0.489 MB/sec [Average]
  (min, avg, max) = (2.188, 2.689, 3.019), stdev = 0.256
  CI (99.9%): [2.200, 3.178] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  10568.900 ±(99.9%) 1969.912 B/op [Average]
  (min, avg, max) = (8530.523, 10568.900, 11954.452), stdev = 1030.302
  CI (99.9%): [8598.988, 12538.813] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  1445.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (148.000, 180.625, 191.000), stdev = 14.030
  CI (99.9%): [1445.000, 1445.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2099.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (254.000, 262.375, 271.000), stdev = 6.435
  CI (99.9%): [2099.000, 2099.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 38.7%  38.7% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readSeqOfInt
 17.0%  17.0% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  7.9%   7.9% scala.collection.immutable.HashMap.$plus
  7.5%   7.5% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  3.6%   3.6% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readDataObject
  3.6%   3.6% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  3.6%   3.6% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readMap
  3.3%   3.3% scala.collection.mutable.MapBuilder.$plus$eq
  2.4%   2.4% java.lang.String.hashCode
  1.8%   1.8% java.math.BigDecimal.<init>
 10.6%  10.6% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = pure-jackson, size = 5000)

# Run progress: 34.69% complete, ETA 02:55:56
# Fork: 1 of 2
# Warmup Iteration   1: 50.186 ops/s
# Warmup Iteration   2: 51.354 ops/s
Iteration   1: 50.983 ops/s
                 ·gc.alloc.rate:                   848.762 MB/sec
                 ·gc.alloc.rate.norm:              17748088.324 B/op
                 ·gc.churn.PS_Eden_Space:          841.646 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     17599285.877 B/op
                 ·gc.churn.PS_Survivor_Space:      2.598 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 54334.986 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         240.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 51.075 ops/s
                 ·gc.alloc.rate:                   850.305 MB/sec
                 ·gc.alloc.rate.norm:              17748088.282 B/op
                 ·gc.churn.PS_Eden_Space:          840.658 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     17546718.935 B/op
                 ·gc.churn.PS_Survivor_Space:      2.382 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 49718.502 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         239.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 51.207 ops/s
                 ·gc.alloc.rate:                   852.499 MB/sec
                 ·gc.alloc.rate.norm:              17748088.453 B/op
                 ·gc.churn.PS_Eden_Space:          876.319 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     18243994.399 B/op
                 ·gc.churn.PS_Survivor_Space:      2.671 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 55611.930 B/op
                 ·gc.count:                        40.000 counts
                 ·gc.time:                         268.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 51.357 ops/s
                 ·gc.alloc.rate:                   855.002 MB/sec
                 ·gc.alloc.rate.norm:              17748088.280 B/op
                 ·gc.churn.PS_Eden_Space:          842.945 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     17497814.302 B/op
                 ·gc.churn.PS_Survivor_Space:      2.734 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 56754.066 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         244.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 35.71% complete, ETA 02:53:09
# Fork: 2 of 2
# Warmup Iteration   1: 50.671 ops/s
# Warmup Iteration   2: 51.387 ops/s
Iteration   1: 51.070 ops/s
                 ·gc.alloc.rate:                   850.217 MB/sec
                 ·gc.alloc.rate.norm:              17748976.282 B/op
                 ·gc.churn.PS_Eden_Space:          843.396 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     17606569.164 B/op
                 ·gc.churn.PS_Survivor_Space:      2.534 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 52892.733 B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         219.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 51.122 ops/s
                 ·gc.alloc.rate:                   851.139 MB/sec
                 ·gc.alloc.rate.norm:              17748976.302 B/op
                 ·gc.churn.PS_Eden_Space:          876.424 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     18276255.875 B/op
                 ·gc.churn.PS_Survivor_Space:      3.366 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 70192.845 B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         228.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 51.009 ops/s
                 ·gc.alloc.rate:                   849.243 MB/sec
                 ·gc.alloc.rate.norm:              17748976.434 B/op
                 ·gc.churn.PS_Eden_Space:          848.347 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     17730248.988 B/op
                 ·gc.churn.PS_Survivor_Space:      4.154 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 86810.858 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         249.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 51.255 ops/s
                 ·gc.alloc.rate:                   853.341 MB/sec
                 ·gc.alloc.rate.norm:              17748976.281 B/op
                 ·gc.churn.PS_Eden_Space:          858.213 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     17850307.568 B/op
                 ·gc.churn.PS_Survivor_Space:      3.188 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 66303.126 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         232.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  51.135 ±(99.9%) 0.246 ops/s [Average]
  (min, avg, max) = (50.983, 51.135, 51.357), stdev = 0.129
  CI (99.9%): [50.888, 51.381] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  851.314 ±(99.9%) 4.098 MB/sec [Average]
  (min, avg, max) = (848.762, 851.314, 855.002), stdev = 2.144
  CI (99.9%): [847.215, 855.412] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  17748532.330 ±(99.9%) 907.520 B/op [Average]
  (min, avg, max) = (17748088.280, 17748532.330, 17748976.434), stdev = 474.651
  CI (99.9%): [17747624.810, 17749439.850] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  853.493 ±(99.9%) 29.032 MB/sec [Average]
  (min, avg, max) = (840.658, 853.493, 876.424), stdev = 15.184
  CI (99.9%): [824.461, 882.526] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  17793899.389 ±(99.9%) 588963.799 B/op [Average]
  (min, avg, max) = (17497814.302, 17793899.389, 18276255.875), stdev = 308039.455
  CI (99.9%): [17204935.589, 18382863.188] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  2.953 ±(99.9%) 1.125 MB/sec [Average]
  (min, avg, max) = (2.382, 2.953, 4.154), stdev = 0.588
  CI (99.9%): [1.829, 4.078] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  61577.381 ±(99.9%) 23535.238 B/op [Average]
  (min, avg, max) = (49718.502, 61577.381, 86810.858), stdev = 12309.385
  CI (99.9%): [38042.143, 85112.619] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  327.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (33.000, 40.875, 53.000), stdev = 6.600
  CI (99.9%): [327.000, 327.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  1919.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (219.000, 239.875, 268.000), stdev = 14.788
  CI (99.9%): [1919.000, 1919.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 25.0%  25.0% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readSeqOfInt
 21.5%  21.5% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  9.8%   9.8% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  8.7%   8.7% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  7.4%   7.4% scala.collection.immutable.HashMap.$plus
  3.9%   3.9% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  3.1%   3.1% scala.collection.mutable.MapBuilder.$plus$eq
  2.9%   2.9% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readDataObject
  2.7%   2.7% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readMap
  2.4%   2.4% java.lang.String.hashCode
 12.6%  12.6% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = pure-jackson, size = 10000)

# Run progress: 36.73% complete, ETA 02:50:23
# Fork: 1 of 2
# Warmup Iteration   1: 22.076 ops/s
# Warmup Iteration   2: 22.390 ops/s
Iteration   1: 23.997 ops/s
                 ·gc.alloc.rate:                   802.743 MB/sec
                 ·gc.alloc.rate.norm:              35662656.267 B/op
                 ·gc.churn.PS_Eden_Space:          793.791 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     35264921.600 B/op
                 ·gc.churn.PS_Survivor_Space:      0.266 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 11832.889 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         80.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 24.198 ops/s
                 ·gc.alloc.rate:                   809.488 MB/sec
                 ·gc.alloc.rate.norm:              35662616.639 B/op
                 ·gc.churn.PS_Eden_Space:          824.957 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     36344135.229 B/op
                 ·gc.churn.PS_Survivor_Space:      0.728 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 32090.975 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         105.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 24.102 ops/s
                 ·gc.alloc.rate:                   806.272 MB/sec
                 ·gc.alloc.rate.norm:              35662616.641 B/op
                 ·gc.churn.PS_Eden_Space:          835.230 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     36943475.978 B/op
                 ·gc.churn.PS_Survivor_Space:      1.208 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 53451.691 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         150.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 23.885 ops/s
                 ·gc.alloc.rate:                   799.005 MB/sec
                 ·gc.alloc.rate.norm:              35662616.603 B/op
                 ·gc.churn.PS_Eden_Space:          793.941 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     35436603.983 B/op
                 ·gc.churn.PS_Survivor_Space:      2.929 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 130752.112 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         264.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 37.76% complete, ETA 02:47:36
# Fork: 2 of 2
# Warmup Iteration   1: 22.105 ops/s
# Warmup Iteration   2: 22.162 ops/s
Iteration   1: 23.904 ops/s
                 ·gc.alloc.rate:                   799.599 MB/sec
                 ·gc.alloc.rate.norm:              35660424.156 B/op
                 ·gc.churn.PS_Eden_Space:          757.502 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     33782986.518 B/op
                 ·gc.churn.PS_Survivor_Space:      0.981 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 43766.774 B/op
                 ·gc.count:                        5.000 counts
                 ·gc.time:                         51.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 24.056 ops/s
                 ·gc.alloc.rate:                   804.691 MB/sec
                 ·gc.alloc.rate.norm:              35660384.643 B/op
                 ·gc.churn.PS_Eden_Space:          879.803 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     38989018.416 B/op
                 ·gc.churn.PS_Survivor_Space:      1.576 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 69847.601 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         82.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 24.126 ops/s
                 ·gc.alloc.rate:                   807.031 MB/sec
                 ·gc.alloc.rate.norm:              35660384.641 B/op
                 ·gc.churn.PS_Eden_Space:          811.945 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     35877520.265 B/op
                 ·gc.churn.PS_Survivor_Space:      2.491 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 110071.580 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         113.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 23.882 ops/s
                 ·gc.alloc.rate:                   798.872 MB/sec
                 ·gc.alloc.rate.norm:              35660384.647 B/op
                 ·gc.churn.PS_Eden_Space:          813.090 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     36295061.601 B/op
                 ·gc.churn.PS_Survivor_Space:      3.317 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 148072.993 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         238.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  24.019 ±(99.9%) 0.231 ops/s [Average]
  (min, avg, max) = (23.882, 24.019, 24.198), stdev = 0.121
  CI (99.9%): [23.787, 24.250] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  803.463 ±(99.9%) 7.744 MB/sec [Average]
  (min, avg, max) = (798.872, 803.463, 809.488), stdev = 4.050
  CI (99.9%): [795.719, 811.207] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  35661510.529 ±(99.9%) 2281.375 B/op [Average]
  (min, avg, max) = (35660384.641, 35661510.529, 35662656.267), stdev = 1193.203
  CI (99.9%): [35659229.155, 35663791.904] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  813.782 ±(99.9%) 68.207 MB/sec [Average]
  (min, avg, max) = (757.502, 813.782, 879.803), stdev = 35.674
  CI (99.9%): [745.575, 881.990] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  36116715.449 ±(99.9%) 2864208.670 B/op [Average]
  (min, avg, max) = (33782986.518, 36116715.449, 38989018.416), stdev = 1498036.517
  CI (99.9%): [33252506.779, 38980924.119] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  1.687 ±(99.9%) 2.110 MB/sec [Average]
  (min, avg, max) = (0.266, 1.687, 3.317), stdev = 1.103
  CI (99.9%): [≈ 0, 3.797] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  74985.827 ±(99.9%) 94155.618 B/op [Average]
  (min, avg, max) = (11832.889, 74985.827, 148072.993), stdev = 49245.209
  CI (99.9%): [≈ 0, 169141.444] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  92.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (5.000, 11.500, 23.000), stdev = 6.969
  CI (99.9%): [92.000, 92.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  1083.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (51.000, 135.375, 264.000), stdev = 77.227
  CI (99.9%): [1083.000, 1083.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 24.1%  24.1% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readSeqOfInt
 21.0%  21.0% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
 11.0%  11.0% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
 11.0%  11.0% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  7.8%   7.8% scala.collection.immutable.HashMap.$plus
  3.5%   3.5% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  3.2%   3.2% scala.collection.mutable.MapBuilder.$plus$eq
  2.3%   2.3% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readDataObject
  2.1%   2.1% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readMap
  2.1%   2.1% java.lang.String.hashCode
 11.9%  11.9% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = pure-jackson, size = 50000)

# Run progress: 38.78% complete, ETA 02:44:50
# Fork: 1 of 2
# Warmup Iteration   1: 4.934 ops/s
# Warmup Iteration   2: 5.418 ops/s
Iteration   1: 5.443 ops/s
                 ·gc.alloc.rate:                   950.911 MB/sec
                 ·gc.alloc.rate.norm:              186235178.634 B/op
                 ·gc.churn.PS_Eden_Space:          983.193 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     192557555.512 B/op
                 ·gc.churn.PS_Survivor_Space:      10.407 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2038208.976 B/op
                 ·gc.count:                        19.000 counts
                 ·gc.time:                         781.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 5.515 ops/s
                 ·gc.alloc.rate:                   963.447 MB/sec
                 ·gc.alloc.rate.norm:              186235178.795 B/op
                 ·gc.churn.PS_Eden_Space:          956.540 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     184899954.120 B/op
                 ·gc.churn.PS_Survivor_Space:      12.265 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2370744.386 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         563.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 5.497 ops/s
                 ·gc.alloc.rate:                   960.264 MB/sec
                 ·gc.alloc.rate.norm:              186235178.618 B/op
                 ·gc.churn.PS_Eden_Space:          943.937 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     183068659.588 B/op
                 ·gc.churn.PS_Survivor_Space:      7.020 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1361559.758 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         485.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 5.457 ops/s
                 ·gc.alloc.rate:                   953.278 MB/sec
                 ·gc.alloc.rate.norm:              186235178.829 B/op
                 ·gc.churn.PS_Eden_Space:          925.601 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     180828209.951 B/op
                 ·gc.churn.PS_Survivor_Space:      11.728 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2291162.146 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         681.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 39.80% complete, ETA 02:42:09
# Fork: 2 of 2
# Warmup Iteration   1: 4.894 ops/s
# Warmup Iteration   2: 5.292 ops/s
Iteration   1: 5.367 ops/s
                 ·gc.alloc.rate:                   931.584 MB/sec
                 ·gc.alloc.rate.norm:              185039330.864 B/op
                 ·gc.churn.PS_Eden_Space:          932.082 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     185138390.914 B/op
                 ·gc.churn.PS_Survivor_Space:      8.802 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1748233.185 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         613.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 5.343 ops/s
                 ·gc.alloc.rate:                   927.459 MB/sec
                 ·gc.alloc.rate.norm:              185039330.882 B/op
                 ·gc.churn.PS_Eden_Space:          890.335 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     177632682.137 B/op
                 ·gc.churn.PS_Survivor_Space:      13.549 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2703257.739 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         694.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 5.299 ops/s
                 ·gc.alloc.rate:                   919.800 MB/sec
                 ·gc.alloc.rate.norm:              185039330.717 B/op
                 ·gc.churn.PS_Eden_Space:          949.031 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     190919969.811 B/op
                 ·gc.churn.PS_Survivor_Space:      11.333 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2279951.296 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         806.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 5.256 ops/s
                 ·gc.alloc.rate:                   912.257 MB/sec
                 ·gc.alloc.rate.norm:              185039330.937 B/op
                 ·gc.churn.PS_Eden_Space:          879.741 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     178443743.595 B/op
                 ·gc.churn.PS_Survivor_Space:      7.224 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1465227.342 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         739.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  5.397 ±(99.9%) 0.181 ops/s [Average]
  (min, avg, max) = (5.256, 5.397, 5.515), stdev = 0.095
  CI (99.9%): [5.216, 5.578] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  939.875 ±(99.9%) 37.281 MB/sec [Average]
  (min, avg, max) = (912.257, 939.875, 963.447), stdev = 19.499
  CI (99.9%): [902.594, 977.156] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  185637254.785 ±(99.9%) 1222149.029 B/op [Average]
  (min, avg, max) = (185039330.717, 185637254.785, 186235178.829), stdev = 639207.573
  CI (99.9%): [184415105.756, 186859403.813] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  932.557 ±(99.9%) 65.283 MB/sec [Average]
  (min, avg, max) = (879.741, 932.557, 983.193), stdev = 34.145
  CI (99.9%): [867.274, 997.841] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  184186145.704 ±(99.9%) 10354182.554 B/op [Average]
  (min, avg, max) = (177632682.137, 184186145.704, 192557555.512), stdev = 5415437.684
  CI (99.9%): [173831963.149, 194540328.258] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  10.291 ±(99.9%) 4.570 MB/sec [Average]
  (min, avg, max) = (7.020, 10.291, 13.549), stdev = 2.390
  CI (99.9%): [5.721, 14.861] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  2032293.103 ±(99.9%) 898326.797 B/op [Average]
  (min, avg, max) = (1361559.758, 2032293.103, 2703257.739), stdev = 469842.285
  CI (99.9%): [1133966.306, 2930619.900] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  131.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (14.000, 16.375, 19.000), stdev = 1.598
  CI (99.9%): [131.000, 131.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  5362.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (485.000, 670.250, 806.000), stdev = 110.323
  CI (99.9%): [5362.000, 5362.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 44.2%  44.2% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readSeqOfInt
 16.1%  16.1% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  7.6%   7.6% scala.collection.immutable.HashMap.$plus
  4.1%   4.1% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  4.1%   4.1% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readDataObject
  3.9%   3.9% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readMap
  3.2%   3.2% scala.collection.mutable.MapBuilder.$plus$eq
  2.8%   2.8% java.lang.String.hashCode
  2.5%   2.5% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  1.9%   1.9% sun.misc.FloatingDecimal.parseDouble
  9.5%   9.5% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = pure-jackson, size = 100000)

# Run progress: 40.82% complete, ETA 02:39:26
# Fork: 1 of 2
# Warmup Iteration   1: 2.571 ops/s
# Warmup Iteration   2: 2.767 ops/s
Iteration   1: 2.723 ops/s
                 ·gc.alloc.rate:                   951.598 MB/sec
                 ·gc.alloc.rate.norm:              372544357.659 B/op
                 ·gc.churn.PS_Eden_Space:          962.950 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     376988647.024 B/op
                 ·gc.churn.PS_Survivor_Space:      20.413 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 7991395.512 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         1697.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2.743 ops/s
                 ·gc.alloc.rate:                   958.812 MB/sec
                 ·gc.alloc.rate.norm:              372544357.205 B/op
                 ·gc.churn.PS_Eden_Space:          998.619 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     388011020.337 B/op
                 ·gc.churn.PS_Survivor_Space:      23.601 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 9170301.687 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         1039.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2.666 ops/s
                 ·gc.alloc.rate:                   931.621 MB/sec
                 ·gc.alloc.rate.norm:              372544357.400 B/op
                 ·gc.churn.PS_Eden_Space:          917.744 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     366995046.400 B/op
                 ·gc.churn.PS_Survivor_Space:      13.558 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 5421874.800 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         1393.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2.819 ops/s
                 ·gc.alloc.rate:                   985.162 MB/sec
                 ·gc.alloc.rate.norm:              372544357.459 B/op
                 ·gc.churn.PS_Eden_Space:          977.436 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     369623040.000 B/op
                 ·gc.churn.PS_Survivor_Space:      20.853 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 7885521.694 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         831.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 41.84% complete, ETA 02:36:48
# Fork: 2 of 2
# Warmup Iteration   1: 2.498 ops/s
# Warmup Iteration   2: 2.610 ops/s
Iteration   1: 2.620 ops/s
                 ·gc.alloc.rate:                   915.556 MB/sec
                 ·gc.alloc.rate.norm:              372542941.873 B/op
                 ·gc.churn.PS_Eden_Space:          929.469 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     378204108.152 B/op
                 ·gc.churn.PS_Survivor_Space:      16.419 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6680938.937 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         1172.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2.630 ops/s
                 ·gc.alloc.rate:                   919.140 MB/sec
                 ·gc.alloc.rate.norm:              372542941.468 B/op
                 ·gc.churn.PS_Eden_Space:          879.500 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     356476020.658 B/op
                 ·gc.churn.PS_Survivor_Space:      16.831 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6821758.177 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         1074.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2.627 ops/s
                 ·gc.alloc.rate:                   918.169 MB/sec
                 ·gc.alloc.rate.norm:              372542941.468 B/op
                 ·gc.churn.PS_Eden_Space:          957.883 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     388656685.367 B/op
                 ·gc.churn.PS_Survivor_Space:      20.203 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 8197391.392 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         1423.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2.664 ops/s
                 ·gc.alloc.rate:                   931.072 MB/sec
                 ·gc.alloc.rate.norm:              372542941.728 B/op
                 ·gc.churn.PS_Eden_Space:          943.316 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     377442051.160 B/op
                 ·gc.churn.PS_Survivor_Space:      15.950 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 6382073.284 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         1016.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  2.687 ±(99.9%) 0.134 ops/s [Average]
  (min, avg, max) = (2.620, 2.687, 2.819), stdev = 0.070
  CI (99.9%): [2.553, 2.820] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  938.891 ±(99.9%) 46.707 MB/sec [Average]
  (min, avg, max) = (915.556, 938.891, 985.162), stdev = 24.429
  CI (99.9%): [892.184, 985.598] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  372543649.533 ±(99.9%) 1446.935 B/op [Average]
  (min, avg, max) = (372542941.468, 372543649.533, 372544357.659), stdev = 756.775
  CI (99.9%): [372542202.598, 372545096.467] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  945.865 ±(99.9%) 71.124 MB/sec [Average]
  (min, avg, max) = (879.500, 945.865, 998.619), stdev = 37.199
  CI (99.9%): [874.740, 1016.989] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  375299577.387 ±(99.9%) 20584830.797 B/op [Average]
  (min, avg, max) = (356476020.658, 375299577.387, 388656685.367), stdev = 10766264.534
  CI (99.9%): [354714746.590, 395884408.185] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  18.479 ±(99.9%) 6.306 MB/sec [Average]
  (min, avg, max) = (13.558, 18.479, 23.601), stdev = 3.298
  CI (99.9%): [12.172, 24.785] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  7318906.935 ±(99.9%) 2297013.493 B/op [Average]
  (min, avg, max) = (5421874.800, 7318906.935, 9170301.687), stdev = 1201382.472
  CI (99.9%): [5021893.442, 9615920.429] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  98.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (11.000, 12.250, 14.000), stdev = 1.282
  CI (99.9%): [98.000, 98.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  9645.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (831.000, 1205.625, 1697.000), stdev = 279.370
  CI (99.9%): [9645.000, 9645.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 44.3%  44.3% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readSeqOfInt
 12.8%  12.8% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readMap
 12.3%  12.3% json.bench.handwritten.HandwrittenBench$HandwrittenJacksonDataProcessor$.readDataObject
  8.2%   8.2% scala.collection.immutable.HashMap.$plus
  3.9%   3.9% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  3.9%   3.9% scala.collection.mutable.MapBuilder.$plus$eq
  3.0%   3.0% java.lang.String.hashCode
  2.1%   2.1% sun.misc.FloatingDecimal.parseDouble
  1.7%   1.7% java.math.BigDecimal.<init>
  1.2%   1.2% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  6.8%   6.8% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-jackson, size = 10)

# Run progress: 42.86% complete, ETA 02:34:08
# Fork: 1 of 2
# Warmup Iteration   1: 4041.028 ops/s
# Warmup Iteration   2: 4242.684 ops/s
Iteration   1: 4244.521 ops/s
                 ·gc.alloc.rate:                   1209.085 MB/sec
                 ·gc.alloc.rate.norm:              303680.004 B/op
                 ·gc.churn.PS_Eden_Space:          1212.403 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     304513.347 B/op
                 ·gc.churn.PS_Survivor_Space:      0.210 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 52.753 B/op
                 ·gc.count:                        372.000 counts
                 ·gc.time:                         279.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 4263.444 ops/s
                 ·gc.alloc.rate:                   1214.483 MB/sec
                 ·gc.alloc.rate.norm:              303680.003 B/op
                 ·gc.churn.PS_Eden_Space:          1215.859 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     304024.241 B/op
                 ·gc.churn.PS_Survivor_Space:      0.186 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 46.627 B/op
                 ·gc.count:                        340.000 counts
                 ·gc.time:                         265.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 4261.924 ops/s
                 ·gc.alloc.rate:                   1214.039 MB/sec
                 ·gc.alloc.rate.norm:              303680.004 B/op
                 ·gc.churn.PS_Eden_Space:          1212.646 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     303331.643 B/op
                 ·gc.churn.PS_Survivor_Space:      0.205 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 51.256 B/op
                 ·gc.count:                        342.000 counts
                 ·gc.time:                         266.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 4244.570 ops/s
                 ·gc.alloc.rate:                   1209.099 MB/sec
                 ·gc.alloc.rate.norm:              303680.003 B/op
                 ·gc.churn.PS_Eden_Space:          1211.850 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     304370.969 B/op
                 ·gc.churn.PS_Survivor_Space:      0.212 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 53.267 B/op
                 ·gc.count:                        370.000 counts
                 ·gc.time:                         281.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 43.88% complete, ETA 02:31:21
# Fork: 2 of 2
# Warmup Iteration   1: 4010.187 ops/s
# Warmup Iteration   2: 4177.869 ops/s
Iteration   1: 4165.813 ops/s
                 ·gc.alloc.rate:                   1184.698 MB/sec
                 ·gc.alloc.rate.norm:              303176.004 B/op
                 ·gc.churn.PS_Eden_Space:          1184.126 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     303029.535 B/op
                 ·gc.churn.PS_Survivor_Space:      0.199 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 50.866 B/op
                 ·gc.count:                        349.000 counts
                 ·gc.time:                         280.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 4178.467 ops/s
                 ·gc.alloc.rate:                   1188.299 MB/sec
                 ·gc.alloc.rate.norm:              303176.004 B/op
                 ·gc.churn.PS_Eden_Space:          1189.715 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     303537.139 B/op
                 ·gc.churn.PS_Survivor_Space:      0.160 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 40.778 B/op
                 ·gc.count:                        296.000 counts
                 ·gc.time:                         234.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 4169.325 ops/s
                 ·gc.alloc.rate:                   1185.688 MB/sec
                 ·gc.alloc.rate.norm:              303176.003 B/op
                 ·gc.churn.PS_Eden_Space:          1185.799 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     303204.466 B/op
                 ·gc.churn.PS_Survivor_Space:      0.193 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 49.251 B/op
                 ·gc.count:                        339.000 counts
                 ·gc.time:                         280.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 4167.263 ops/s
                 ·gc.alloc.rate:                   1185.108 MB/sec
                 ·gc.alloc.rate.norm:              303176.004 B/op
                 ·gc.churn.PS_Eden_Space:          1187.603 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     303814.367 B/op
                 ·gc.churn.PS_Survivor_Space:      0.199 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 50.848 B/op
                 ·gc.count:                        324.000 counts
                 ·gc.time:                         250.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  4211.916 ±(99.9%) 86.530 ops/s [Average]
  (min, avg, max) = (4165.813, 4211.916, 4263.444), stdev = 45.257
  CI (99.9%): [4125.386, 4298.446] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1198.812 ±(99.9%) 26.636 MB/sec [Average]
  (min, avg, max) = (1184.698, 1198.812, 1214.483), stdev = 13.931
  CI (99.9%): [1172.176, 1225.448] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  303428.004 ±(99.9%) 515.085 B/op [Average]
  (min, avg, max) = (303176.003, 303428.004, 303680.004), stdev = 269.399
  CI (99.9%): [302912.919, 303943.088] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1200.000 ±(99.9%) 27.221 MB/sec [Average]
  (min, avg, max) = (1184.126, 1200.000, 1215.859), stdev = 14.237
  CI (99.9%): [1172.780, 1227.221] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  303728.213 ±(99.9%) 1042.450 B/op [Average]
  (min, avg, max) = (303029.535, 303728.213, 304513.347), stdev = 545.221
  CI (99.9%): [302685.763, 304770.663] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  0.195 ±(99.9%) 0.032 MB/sec [Average]
  (min, avg, max) = (0.160, 0.195, 0.212), stdev = 0.017
  CI (99.9%): [0.163, 0.227] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  49.456 ±(99.9%) 7.780 B/op [Average]
  (min, avg, max) = (40.778, 49.456, 53.267), stdev = 4.069
  CI (99.9%): [41.676, 57.236] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  2732.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (296.000, 341.500, 372.000), stdev = 24.448
  CI (99.9%): [2732.000, 2732.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2135.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (234.000, 266.875, 281.000), stdev = 17.158
  CI (99.9%): [2135.000, 2135.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 53.4%  53.5% java.lang.Class.forName0
 20.3%  20.3% java.math.BigInteger.<init>
 12.0%  12.0% org.json4s.jackson.JValueDeserializer.deserialize
  4.7%   4.7% scala.collection.TraversableOnce$class.nonEmpty
  4.3%   4.3% scala.collection.AbstractTraversable.<init>
  0.7%   0.7% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  0.5%   0.5% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.findSymbol
  0.3%   0.3% scala.collection.TraversableLike$class.to
  0.3%   0.3% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber
  0.3%   0.3% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  3.1%   3.1% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-jackson, size = 100)

# Run progress: 44.90% complete, ETA 02:28:34
# Fork: 1 of 2
# Warmup Iteration   1: 496.925 ops/s
# Warmup Iteration   2: 515.361 ops/s
Iteration   1: 516.671 ops/s
                 ·gc.alloc.rate:                   1188.118 MB/sec
                 ·gc.alloc.rate.norm:              2451504.030 B/op
                 ·gc.churn.PS_Eden_Space:          1189.581 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2454524.231 B/op
                 ·gc.churn.PS_Survivor_Space:      1.337 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2758.676 B/op
                 ·gc.count:                        255.000 counts
                 ·gc.time:                         271.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 513.431 ops/s
                 ·gc.alloc.rate:                   1180.655 MB/sec
                 ·gc.alloc.rate.norm:              2451504.028 B/op
                 ·gc.churn.PS_Eden_Space:          1179.866 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2449865.356 B/op
                 ·gc.churn.PS_Survivor_Space:      1.440 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2990.899 B/op
                 ·gc.count:                        270.000 counts
                 ·gc.time:                         281.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 513.367 ops/s
                 ·gc.alloc.rate:                   1180.518 MB/sec
                 ·gc.alloc.rate.norm:              2451510.972 B/op
                 ·gc.churn.PS_Eden_Space:          1184.321 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2459408.386 B/op
                 ·gc.churn.PS_Survivor_Space:      1.442 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2995.542 B/op
                 ·gc.count:                        249.000 counts
                 ·gc.time:                         265.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 512.693 ops/s
                 ·gc.alloc.rate:                   1178.905 MB/sec
                 ·gc.alloc.rate.norm:              2451520.028 B/op
                 ·gc.churn.PS_Eden_Space:          1181.788 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2457516.914 B/op
                 ·gc.churn.PS_Survivor_Space:      1.511 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3142.370 B/op
                 ·gc.count:                        275.000 counts
                 ·gc.time:                         284.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 45.92% complete, ETA 02:25:47
# Fork: 2 of 2
# Warmup Iteration   1: 464.776 ops/s
# Warmup Iteration   2: 486.957 ops/s
Iteration   1: 485.850 ops/s
                 ·gc.alloc.rate:                   1116.420 MB/sec
                 ·gc.alloc.rate.norm:              2449760.032 B/op
                 ·gc.churn.PS_Eden_Space:          1116.681 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2450334.204 B/op
                 ·gc.churn.PS_Survivor_Space:      1.604 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3520.492 B/op
                 ·gc.count:                        262.000 counts
                 ·gc.time:                         269.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 488.065 ops/s
                 ·gc.alloc.rate:                   1121.535 MB/sec
                 ·gc.alloc.rate.norm:              2449760.032 B/op
                 ·gc.churn.PS_Eden_Space:          1124.090 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2455342.054 B/op
                 ·gc.churn.PS_Survivor_Space:      1.411 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3081.441 B/op
                 ·gc.count:                        278.000 counts
                 ·gc.time:                         280.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 486.542 ops/s
                 ·gc.alloc.rate:                   1118.038 MB/sec
                 ·gc.alloc.rate.norm:              2449763.356 B/op
                 ·gc.churn.PS_Eden_Space:          1118.050 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2449790.185 B/op
                 ·gc.churn.PS_Survivor_Space:      1.593 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3490.734 B/op
                 ·gc.count:                        297.000 counts
                 ·gc.time:                         284.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 485.934 ops/s
                 ·gc.alloc.rate:                   1116.620 MB/sec
                 ·gc.alloc.rate.norm:              2449776.030 B/op
                 ·gc.churn.PS_Eden_Space:          1116.218 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2448894.980 B/op
                 ·gc.churn.PS_Survivor_Space:      1.526 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3348.948 B/op
                 ·gc.count:                        272.000 counts
                 ·gc.time:                         267.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  500.319 ±(99.9%) 28.164 ops/s [Average]
  (min, avg, max) = (485.850, 500.319, 516.671), stdev = 14.731
  CI (99.9%): [472.155, 528.483] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1150.101 ±(99.9%) 65.572 MB/sec [Average]
  (min, avg, max) = (1116.420, 1150.101, 1188.118), stdev = 34.295
  CI (99.9%): [1084.529, 1215.673] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  2450637.313 ±(99.9%) 1783.330 B/op [Average]
  (min, avg, max) = (2449760.032, 2450637.313, 2451520.028), stdev = 932.716
  CI (99.9%): [2448853.984, 2452420.643] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1151.325 ±(99.9%) 66.925 MB/sec [Average]
  (min, avg, max) = (1116.218, 1151.325, 1189.581), stdev = 35.003
  CI (99.9%): [1084.400, 1218.250] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  2453209.539 ±(99.9%) 7682.434 B/op [Average]
  (min, avg, max) = (2448894.980, 2453209.539, 2459408.386), stdev = 4018.062
  CI (99.9%): [2445527.104, 2460891.973] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  1.483 ±(99.9%) 0.176 MB/sec [Average]
  (min, avg, max) = (1.337, 1.483, 1.604), stdev = 0.092
  CI (99.9%): [1.307, 1.660] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  3166.138 ±(99.9%) 509.935 B/op [Average]
  (min, avg, max) = (2758.676, 3166.138, 3520.492), stdev = 266.706
  CI (99.9%): [2656.203, 3676.073] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  2158.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (249.000, 269.750, 297.000), stdev = 14.888
  CI (99.9%): [2158.000, 2158.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2201.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (265.000, 275.125, 284.000), stdev = 7.918
  CI (99.9%): [2201.000, 2201.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 54.1%  54.1% java.lang.Class.forName0
 21.3%  21.3% java.math.BigInteger.<init>
 15.6%  15.6% org.json4s.jackson.JValueDeserializer.deserialize
  3.0%   3.0% scala.collection.generic.Growable$class.loop$1
  0.9%   0.9% scala.collection.mutable.ListBuffer.$plus$eq
  0.4%   0.4% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFloat
  0.4%   0.4% sun.misc.FloatingDecimal.parseDouble
  0.4%   0.4% scala.collection.mutable.LinkedList.tail
  0.3%   0.3% scala.collection.mutable.LinkedList.head
  0.3%   0.3% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  3.3%   3.3% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-jackson, size = 1000)

# Run progress: 46.94% complete, ETA 02:23:00
# Fork: 1 of 2
# Warmup Iteration   1: 47.166 ops/s
# Warmup Iteration   2: 51.423 ops/s
Iteration   1: 51.298 ops/s
                 ·gc.alloc.rate:                   1061.760 MB/sec
                 ·gc.alloc.rate.norm:              22065194.178 B/op
                 ·gc.churn.PS_Eden_Space:          1059.689 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     22022140.008 B/op
                 ·gc.churn.PS_Survivor_Space:      2.294 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 47672.224 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         258.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 51.407 ops/s
                 ·gc.alloc.rate:                   1063.945 MB/sec
                 ·gc.alloc.rate.norm:              22065200.301 B/op
                 ·gc.churn.PS_Eden_Space:          1054.775 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     21875007.876 B/op
                 ·gc.churn.PS_Survivor_Space:      1.829 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 37928.482 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         249.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 51.482 ops/s
                 ·gc.alloc.rate:                   1065.568 MB/sec
                 ·gc.alloc.rate.norm:              22065209.388 B/op
                 ·gc.churn.PS_Eden_Space:          1085.562 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     22479229.763 B/op
                 ·gc.churn.PS_Survivor_Space:      1.949 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 40360.844 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         256.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 51.573 ops/s
                 ·gc.alloc.rate:                   1067.439 MB/sec
                 ·gc.alloc.rate.norm:              22065168.279 B/op
                 ·gc.churn.PS_Eden_Space:          1034.898 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     21392508.362 B/op
                 ·gc.churn.PS_Survivor_Space:      1.536 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 31751.938 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         244.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 47.96% complete, ETA 02:20:14
# Fork: 2 of 2
# Warmup Iteration   1: 45.958 ops/s
# Warmup Iteration   2: 50.139 ops/s
Iteration   1: 49.863 ops/s
                 ·gc.alloc.rate:                   1036.537 MB/sec
                 ·gc.alloc.rate.norm:              22161193.497 B/op
                 ·gc.churn.PS_Eden_Space:          1038.248 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     22197779.166 B/op
                 ·gc.churn.PS_Survivor_Space:      3.682 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 78722.053 B/op
                 ·gc.count:                        66.000 counts
                 ·gc.time:                         247.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 49.871 ops/s
                 ·gc.alloc.rate:                   1036.707 MB/sec
                 ·gc.alloc.rate.norm:              22161200.310 B/op
                 ·gc.churn.PS_Eden_Space:          1026.862 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     21950751.295 B/op
                 ·gc.churn.PS_Survivor_Space:      3.334 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 71270.947 B/op
                 ·gc.count:                        69.000 counts
                 ·gc.time:                         252.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 49.919 ops/s
                 ·gc.alloc.rate:                   1037.705 MB/sec
                 ·gc.alloc.rate.norm:              22161213.677 B/op
                 ·gc.churn.PS_Eden_Space:          1045.798 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     22334038.814 B/op
                 ·gc.churn.PS_Survivor_Space:      3.557 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 75970.136 B/op
                 ·gc.count:                        68.000 counts
                 ·gc.time:                         259.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 50.205 ops/s
                 ·gc.alloc.rate:                   1043.638 MB/sec
                 ·gc.alloc.rate.norm:              22161168.287 B/op
                 ·gc.churn.PS_Eden_Space:          1042.401 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     22134903.591 B/op
                 ·gc.churn.PS_Survivor_Space:      3.977 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 84453.160 B/op
                 ·gc.count:                        75.000 counts
                 ·gc.time:                         261.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  50.702 ±(99.9%) 1.529 ops/s [Average]
  (min, avg, max) = (49.863, 50.702, 51.573), stdev = 0.800
  CI (99.9%): [49.173, 52.231] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1051.662 ±(99.9%) 27.104 MB/sec [Average]
  (min, avg, max) = (1036.537, 1051.662, 1067.439), stdev = 14.176
  CI (99.9%): [1024.558, 1078.767] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  22113193.490 ±(99.9%) 98112.330 B/op [Average]
  (min, avg, max) = (22065168.279, 22113193.490, 22161213.677), stdev = 51314.646
  CI (99.9%): [22015081.159, 22211305.820] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1048.529 ±(99.9%) 34.965 MB/sec [Average]
  (min, avg, max) = (1026.862, 1048.529, 1085.562), stdev = 18.287
  CI (99.9%): [1013.564, 1083.494] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  22048294.859 ±(99.9%) 633093.674 B/op [Average]
  (min, avg, max) = (21392508.362, 22048294.859, 22479229.763), stdev = 331120.233
  CI (99.9%): [21415201.185, 22681388.534] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  2.770 ±(99.9%) 1.848 MB/sec [Average]
  (min, avg, max) = (1.536, 2.770, 3.977), stdev = 0.966
  CI (99.9%): [0.922, 4.617] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  58516.223 ±(99.9%) 40467.045 B/op [Average]
  (min, avg, max) = (31751.938, 58516.223, 84453.160), stdev = 21165.047
  CI (99.9%): [18049.178, 98983.268] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  420.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (32.000, 52.500, 75.000), stdev = 18.455
  CI (99.9%): [420.000, 420.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2026.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (244.000, 253.250, 261.000), stdev = 6.182
  CI (99.9%): [2026.000, 2026.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 54.7%  54.7% java.lang.Class.forName0
 13.1%  13.1% java.math.BigInteger.<init>
 11.0%  11.0% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  6.1%   6.1% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2
  3.7%   3.7% org.json4s.jackson.JValueDeserializer.deserialize
  2.2%   2.2% scala.collection.AbstractTraversable.<init>
  1.4%   1.4% scala.collection.AbstractIterable.<init>
  1.4%   1.4% scala.collection.generic.Growable$class.loop$1
  1.0%   1.0% scala.collection.TraversableLike$class.to
  0.7%   0.7% scala.collection.mutable.LinkedList.isEmpty
  4.7%   4.7% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-jackson, size = 5000)

# Run progress: 48.98% complete, ETA 02:17:28
# Fork: 1 of 2
# Warmup Iteration   1: 7.687 ops/s
# Warmup Iteration   2: 8.636 ops/s
Iteration   1: 9.168 ops/s
                 ·gc.alloc.rate:                   982.604 MB/sec
                 ·gc.alloc.rate.norm:              114250121.681 B/op
                 ·gc.churn.PS_Eden_Space:          960.638 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     111696139.130 B/op
                 ·gc.churn.PS_Survivor_Space:      0.594 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 69097.623 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         196.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 9.212 ops/s
                 ·gc.alloc.rate:                   987.324 MB/sec
                 ·gc.alloc.rate.norm:              114250121.560 B/op
                 ·gc.churn.PS_Eden_Space:          1005.114 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     116308655.596 B/op
                 ·gc.churn.PS_Survivor_Space:      2.643 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 305795.119 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         121.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 9.133 ops/s
                 ·gc.alloc.rate:                   978.803 MB/sec
                 ·gc.alloc.rate.norm:              114250121.571 B/op
                 ·gc.churn.PS_Eden_Space:          1002.412 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     117005829.585 B/op
                 ·gc.churn.PS_Survivor_Space:      2.450 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 285975.156 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         235.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 9.142 ops/s
                 ·gc.alloc.rate:                   979.759 MB/sec
                 ·gc.alloc.rate.norm:              114250197.702 B/op
                 ·gc.churn.PS_Eden_Space:          1031.707 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     120307890.735 B/op
                 ·gc.churn.PS_Survivor_Space:      4.851 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 565635.200 B/op
                 ·gc.count:                        19.000 counts
                 ·gc.time:                         285.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 50.00% complete, ETA 02:14:42
# Fork: 2 of 2
# Warmup Iteration   1: 7.396 ops/s
# Warmup Iteration   2: 8.245 ops/s
Iteration   1: 8.724 ops/s
                 ·gc.alloc.rate:                   995.736 MB/sec
                 ·gc.alloc.rate.norm:              121682265.771 B/op
                 ·gc.churn.PS_Eden_Space:          1049.943 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     128306480.855 B/op
                 ·gc.churn.PS_Survivor_Space:      1.210 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 147830.962 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         155.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 8.740 ops/s
                 ·gc.alloc.rate:                   997.599 MB/sec
                 ·gc.alloc.rate.norm:              121682265.643 B/op
                 ·gc.churn.PS_Eden_Space:          984.544 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     120089860.867 B/op
                 ·gc.churn.PS_Survivor_Space:      1.963 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 239467.924 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         206.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 8.724 ops/s
                 ·gc.alloc.rate:                   995.809 MB/sec
                 ·gc.alloc.rate.norm:              121682265.771 B/op
                 ·gc.churn.PS_Eden_Space:          1054.244 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     128822764.458 B/op
                 ·gc.churn.PS_Survivor_Space:      3.462 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 422982.351 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         251.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 8.716 ops/s
                 ·gc.alloc.rate:                   994.856 MB/sec
                 ·gc.alloc.rate.norm:              121682362.168 B/op
                 ·gc.churn.PS_Eden_Space:          945.598 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     115657532.580 B/op
                 ·gc.churn.PS_Survivor_Space:      2.897 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 354319.511 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         229.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  8.945 ±(99.9%) 0.450 ops/s [Average]
  (min, avg, max) = (8.716, 8.945, 9.212), stdev = 0.235
  CI (99.9%): [8.495, 9.395] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  989.061 ±(99.9%) 15.038 MB/sec [Average]
  (min, avg, max) = (978.803, 989.061, 997.599), stdev = 7.865
  CI (99.9%): [974.023, 1004.099] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  117966215.233 ±(99.9%) 7595609.919 B/op [Average]
  (min, avg, max) = (114250121.560, 117966215.233, 121682362.168), stdev = 3972650.856
  CI (99.9%): [110370605.314, 125561825.153] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1004.275 ±(99.9%) 76.053 MB/sec [Average]
  (min, avg, max) = (945.598, 1004.275, 1054.244), stdev = 39.777
  CI (99.9%): [928.221, 1080.328] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  119774394.226 ±(99.9%) 11583673.301 B/op [Average]
  (min, avg, max) = (111696139.130, 119774394.226, 128822764.458), stdev = 6058485.118
  CI (99.9%): [108190720.924, 131358067.527] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  2.509 ±(99.9%) 2.526 MB/sec [Average]
  (min, avg, max) = (0.594, 2.509, 4.851), stdev = 1.321
  CI (99.9%): [≈ 0, 5.034] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  298887.981 ±(99.9%) 297076.167 B/op [Average]
  (min, avg, max) = (69097.623, 298887.981, 565635.200), stdev = 155376.580
  CI (99.9%): [1811.814, 595964.148] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  94.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (6.000, 11.750, 19.000), stdev = 4.528
  CI (99.9%): [94.000, 94.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  1678.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (121.000, 209.750, 285.000), stdev = 52.711
  CI (99.9%): [1678.000, 1678.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 49.2%  49.2% java.lang.Class.forName0
 44.5%  44.5% java.lang.String.intern
  1.7%   1.7% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  0.5%   0.5% scala.collection.TraversableOnce$class.nonEmpty
  0.4%   0.4% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  0.3%   0.3% scala.collection.LinearSeqOptimized$class.length
  0.3%   0.3% scala.collection.mutable.LinkedList.isEmpty
  0.2%   0.2% scala.collection.AbstractSeq.<init>
  0.2%   0.2% org.json4s.jackson.JValueDeserializer.deserialize
  0.2%   0.2% scala.collection.generic.Growable$class.loop$1
  2.5%   2.5% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-jackson, size = 10000)

# Run progress: 51.02% complete, ETA 02:11:56
# Fork: 1 of 2
# Warmup Iteration   1: 3.975 ops/s
# Warmup Iteration   2: 4.395 ops/s
Iteration   1: 4.423 ops/s
                 ·gc.alloc.rate:                   1011.240 MB/sec
                 ·gc.alloc.rate.norm:              243731459.489 B/op
                 ·gc.churn.PS_Eden_Space:          1087.044 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     262002087.459 B/op
                 ·gc.churn.PS_Survivor_Space:      6.480 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1561899.549 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         464.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 4.496 ops/s
                 ·gc.alloc.rate:                   1028.028 MB/sec
                 ·gc.alloc.rate.norm:              243731459.437 B/op
                 ·gc.churn.PS_Eden_Space:          970.648 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     230127479.467 B/op
                 ·gc.churn.PS_Survivor_Space:      1.860 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 441032.770 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         431.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 4.562 ops/s
                 ·gc.alloc.rate:                   1042.948 MB/sec
                 ·gc.alloc.rate.norm:              243731459.387 B/op
                 ·gc.churn.PS_Eden_Space:          1024.039 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     239312597.022 B/op
                 ·gc.churn.PS_Survivor_Space:      3.782 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 883778.803 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         242.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 4.585 ops/s
                 ·gc.alloc.rate:                   1048.247 MB/sec
                 ·gc.alloc.rate.norm:              243731459.362 B/op
                 ·gc.churn.PS_Eden_Space:          1021.751 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     237570849.391 B/op
                 ·gc.churn.PS_Survivor_Space:      4.515 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1049881.507 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         183.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 52.04% complete, ETA 02:09:11
# Fork: 2 of 2
# Warmup Iteration   1: 3.983 ops/s
# Warmup Iteration   2: 4.342 ops/s
Iteration   1: 4.484 ops/s
                 ·gc.alloc.rate:                   1024.771 MB/sec
                 ·gc.alloc.rate.norm:              243642667.674 B/op
                 ·gc.churn.PS_Eden_Space:          1019.510 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     242391935.052 B/op
                 ·gc.churn.PS_Survivor_Space:      3.472 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 825510.874 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         330.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 4.502 ops/s
                 ·gc.alloc.rate:                   1029.075 MB/sec
                 ·gc.alloc.rate.norm:              243642667.176 B/op
                 ·gc.churn.PS_Eden_Space:          1030.121 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     243890296.471 B/op
                 ·gc.churn.PS_Survivor_Space:      4.235 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1002556.235 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         386.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 4.506 ops/s
                 ·gc.alloc.rate:                   1029.845 MB/sec
                 ·gc.alloc.rate.norm:              243642667.176 B/op
                 ·gc.churn.PS_Eden_Space:          985.543 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     233161667.765 B/op
                 ·gc.churn.PS_Survivor_Space:      2.102 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 497302.353 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         440.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 4.560 ops/s
                 ·gc.alloc.rate:                   1041.815 MB/sec
                 ·gc.alloc.rate.norm:              243642667.153 B/op
                 ·gc.churn.PS_Eden_Space:          1021.336 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     238853366.657 B/op
                 ·gc.churn.PS_Survivor_Space:      4.102 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 959360.467 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         226.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  4.515 ±(99.9%) 0.100 ops/s [Average]
  (min, avg, max) = (4.423, 4.515, 4.585), stdev = 0.052
  CI (99.9%): [4.415, 4.614] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1031.996 ±(99.9%) 22.765 MB/sec [Average]
  (min, avg, max) = (1011.240, 1031.996, 1048.247), stdev = 11.907
  CI (99.9%): [1009.231, 1054.761] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  243687063.357 ±(99.9%) 90744.994 B/op [Average]
  (min, avg, max) = (243642667.153, 243687063.357, 243731459.489), stdev = 47461.386
  CI (99.9%): [243596318.363, 243777808.351] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1019.999 ±(99.9%) 65.606 MB/sec [Average]
  (min, avg, max) = (970.648, 1019.999, 1087.044), stdev = 34.313
  CI (99.9%): [954.393, 1085.605] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  240913784.910 ±(99.9%) 18426877.227 B/op [Average]
  (min, avg, max) = (230127479.467, 240913784.910, 262002087.459), stdev = 9637613.090
  CI (99.9%): [222486907.684, 259340662.137] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  3.819 ±(99.9%) 2.773 MB/sec [Average]
  (min, avg, max) = (1.860, 3.819, 6.480), stdev = 1.450
  CI (99.9%): [1.045, 6.592] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  902665.320 ±(99.9%) 667506.726 B/op [Average]
  (min, avg, max) = (441032.770, 902665.320, 1561899.549), stdev = 349118.924
  CI (99.9%): [235158.594, 1570172.046] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  53.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (6.000, 6.625, 8.000), stdev = 0.916
  CI (99.9%): [53.000, 53.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2702.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (183.000, 337.750, 464.000), stdev = 108.944
  CI (99.9%): [2702.000, 2702.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 50.6%  50.6% java.lang.Class.forName0
 42.4%  42.4% java.lang.String.intern
  1.7%   1.7% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  0.6%   0.6% scala.collection.TraversableOnce$class.nonEmpty
  0.5%   0.5% scala.collection.generic.Growable$class.loop$1
  0.5%   0.5% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  0.5%   0.5% scala.collection.LinearSeqOptimized$class.length
  0.4%   0.4% scala.collection.TraversableLike$$anonfun$filterImpl$1.apply
  0.3%   0.3% sun.misc.FloatingDecimal$BinaryToASCIIBuffer.access$100
  0.2%   0.2% scala.collection.mutable.AbstractBuffer.<init>
  2.3%   2.3% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-jackson, size = 50000)

# Run progress: 53.06% complete, ETA 02:06:26
# Fork: 1 of 2
# Warmup Iteration   1: 0.739 ops/s
# Warmup Iteration   2: 0.883 ops/s
Iteration   1: 0.924 ops/s
                 ·gc.alloc.rate:                   1059.713 MB/sec
                 ·gc.alloc.rate.norm:              1222888016.571 B/op
                 ·gc.churn.PS_Eden_Space:          1052.877 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1214999990.857 B/op
                 ·gc.churn.PS_Survivor_Space:      39.157 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 45185899.429 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         2141.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.925 ops/s
                 ·gc.alloc.rate:                   1061.019 MB/sec
                 ·gc.alloc.rate.norm:              1222888015.429 B/op
                 ·gc.churn.PS_Eden_Space:          1037.052 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1195264292.571 B/op
                 ·gc.churn.PS_Survivor_Space:      25.278 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 29134262.857 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         2138.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.942 ops/s
                 ·gc.alloc.rate:                   1081.431 MB/sec
                 ·gc.alloc.rate.norm:              1222888017.103 B/op
                 ·gc.churn.PS_Eden_Space:          1033.025 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1168149821.793 B/op
                 ·gc.churn.PS_Survivor_Space:      15.013 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 16977212.690 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         1636.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.944 ops/s
                 ·gc.alloc.rate:                   1083.809 MB/sec
                 ·gc.alloc.rate.norm:              1222888014.897 B/op
                 ·gc.churn.PS_Eden_Space:          1133.291 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1278720353.103 B/op
                 ·gc.churn.PS_Survivor_Space:      31.266 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 35278704.552 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         1536.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 54.08% complete, ETA 02:03:45
# Fork: 2 of 2
# Warmup Iteration   1: 0.732 ops/s
# Warmup Iteration   2: 0.874 ops/s
Iteration   1: 0.921 ops/s
                 ·gc.alloc.rate:                   1056.982 MB/sec
                 ·gc.alloc.rate.norm:              1222887561.714 B/op
                 ·gc.churn.PS_Eden_Space:          1059.341 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1225616822.857 B/op
                 ·gc.churn.PS_Survivor_Space:      23.620 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 27327340.571 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         2077.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.925 ops/s
                 ·gc.alloc.rate:                   1060.695 MB/sec
                 ·gc.alloc.rate.norm:              1222887559.429 B/op
                 ·gc.churn.PS_Eden_Space:          1047.503 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1207678683.429 B/op
                 ·gc.churn.PS_Survivor_Space:      39.867 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 45962969.143 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         1950.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.931 ops/s
                 ·gc.alloc.rate:                   1067.639 MB/sec
                 ·gc.alloc.rate.norm:              1222887560.571 B/op
                 ·gc.churn.PS_Eden_Space:          1068.256 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1223594569.143 B/op
                 ·gc.churn.PS_Survivor_Space:      24.808 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 28415706.286 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         1802.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.938 ops/s
                 ·gc.alloc.rate:                   1076.488 MB/sec
                 ·gc.alloc.rate.norm:              1222887558.897 B/op
                 ·gc.churn.PS_Eden_Space:          1026.043 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1165582618.483 B/op
                 ·gc.churn.PS_Survivor_Space:      15.291 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 17370428.690 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         1665.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  0.931 ±(99.9%) 0.018 ops/s [Average]
  (min, avg, max) = (0.921, 0.931, 0.944), stdev = 0.009
  CI (99.9%): [0.914, 0.949] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1068.472 ±(99.9%) 20.349 MB/sec [Average]
  (min, avg, max) = (1056.982, 1068.472, 1083.809), stdev = 10.643
  CI (99.9%): [1048.123, 1088.821] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  1222887788.076 ±(99.9%) 465.877 B/op [Average]
  (min, avg, max) = (1222887558.897, 1222887788.076, 1222888017.103), stdev = 243.663
  CI (99.9%): [1222887322.199, 1222888253.954] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1057.174 ±(99.9%) 64.598 MB/sec [Average]
  (min, avg, max) = (1026.043, 1057.174, 1133.291), stdev = 33.786
  CI (99.9%): [992.575, 1121.772] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  1209950894.030 ±(99.9%) 69024445.183 B/op [Average]
  (min, avg, max) = (1165582618.483, 1209950894.030, 1278720353.103), stdev = 36101119.483
  CI (99.9%): [1140926448.846, 1278975339.213] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  26.788 ±(99.9%) 18.155 MB/sec [Average]
  (min, avg, max) = (15.013, 26.788, 39.867), stdev = 9.496
  CI (99.9%): [8.632, 44.943] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  30706565.527 ±(99.9%) 21054068.384 B/op [Average]
  (min, avg, max) = (16977212.690, 30706565.527, 45962969.143), stdev = 11011684.865
  CI (99.9%): [9652497.143, 51760633.911] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  83.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (9.000, 10.375, 13.000), stdev = 1.506
  CI (99.9%): [83.000, 83.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  14945.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1536.000, 1868.125, 2141.000), stdev = 241.261
  CI (99.9%): [14945.000, 14945.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 55.3%  55.3% java.lang.Class.forName0
 10.9%  10.9% java.math.BigInteger.<init>
 10.5%  10.5% java.lang.String.intern
  7.8%   7.8% org.json4s.jackson.JValueDeserializer.deserialize
  4.7%   4.7% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2
  1.9%   1.9% scala.collection.generic.Growable$class.loop$1
  1.0%   1.0% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  0.8%   0.8% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  0.8%   0.8% scala.collection.TraversableLike$class.to
  0.7%   0.7% scala.collection.TraversableOnce$class.nonEmpty
  5.7%   5.7% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-jackson, size = 100000)

# Run progress: 55.10% complete, ETA 02:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 0.274 ops/s
# Warmup Iteration   2: 0.430 ops/s
Iteration   1: 0.447 ops/s
                 ·gc.alloc.rate:                   1039.522 MB/sec
                 ·gc.alloc.rate.norm:              2478186025.143 B/op
                 ·gc.churn.PS_Eden_Space:          1049.015 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2500816310.857 B/op
                 ·gc.churn.PS_Survivor_Space:      51.457 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 122671686.857 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3622.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.446 ops/s
                 ·gc.alloc.rate:                   1038.036 MB/sec
                 ·gc.alloc.rate.norm:              2478186022.857 B/op
                 ·gc.churn.PS_Eden_Space:          1039.091 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2480706121.143 B/op
                 ·gc.churn.PS_Survivor_Space:      51.488 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 122922130.286 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3692.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.445 ops/s
                 ·gc.alloc.rate:                   1034.258 MB/sec
                 ·gc.alloc.rate.norm:              2478186025.143 B/op
                 ·gc.churn.PS_Eden_Space:          1037.154 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2485125120.000 B/op
                 ·gc.churn.PS_Survivor_Space:      50.232 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 120361545.143 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3762.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.446 ops/s
                 ·gc.alloc.rate:                   1037.079 MB/sec
                 ·gc.alloc.rate.norm:              2478186022.857 B/op
                 ·gc.churn.PS_Eden_Space:          1039.622 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2484263789.714 B/op
                 ·gc.churn.PS_Survivor_Space:      50.094 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 119703844.571 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3734.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 56.12% complete, ETA 01:58:27
# Fork: 2 of 2
# Warmup Iteration   1: 0.230 ops/s
# Warmup Iteration   2: 0.410 ops/s
Iteration   1: 0.461 ops/s
                 ·gc.alloc.rate:                   1058.113 MB/sec
                 ·gc.alloc.rate.norm:              2446183929.143 B/op
                 ·gc.churn.PS_Eden_Space:          1030.168 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2381578240.000 B/op
                 ·gc.churn.PS_Survivor_Space:      38.023 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 87902496.000 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         2551.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.448 ops/s
                 ·gc.alloc.rate:                   1028.719 MB/sec
                 ·gc.alloc.rate.norm:              2446183926.857 B/op
                 ·gc.churn.PS_Eden_Space:          1075.822 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2558188397.714 B/op
                 ·gc.churn.PS_Survivor_Space:      26.665 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 63406080.000 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         3695.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.450 ops/s
                 ·gc.alloc.rate:                   1032.477 MB/sec
                 ·gc.alloc.rate.norm:              2446183929.143 B/op
                 ·gc.churn.PS_Eden_Space:          1039.888 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2463741659.429 B/op
                 ·gc.churn.PS_Survivor_Space:      52.422 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 124200082.286 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3564.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.462 ops/s
                 ·gc.alloc.rate:                   1059.282 MB/sec
                 ·gc.alloc.rate.norm:              2446183926.857 B/op
                 ·gc.churn.PS_Eden_Space:          1008.456 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2328812397.714 B/op
                 ·gc.churn.PS_Survivor_Space:      80.544 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 185998185.143 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         2676.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  0.450 ±(99.9%) 0.013 ops/s [Average]
  (min, avg, max) = (0.445, 0.450, 0.462), stdev = 0.007
  CI (99.9%): [0.437, 0.464] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1040.936 ±(99.9%) 21.947 MB/sec [Average]
  (min, avg, max) = (1028.719, 1040.936, 1059.282), stdev = 11.479
  CI (99.9%): [1018.989, 1062.883] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  2462184976.000 ±(99.9%) 32705941.571 B/op [Average]
  (min, avg, max) = (2446183926.857, 2462184976.000, 2478186025.143), stdev = 17105839.842
  CI (99.9%): [2429479034.429, 2494890917.571] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1039.902 ±(99.9%) 35.880 MB/sec [Average]
  (min, avg, max) = (1008.456, 1039.902, 1075.822), stdev = 18.766
  CI (99.9%): [1004.022, 1075.782] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  2460404004.571 ±(99.9%) 137739075.992 B/op [Average]
  (min, avg, max) = (2328812397.714, 2460404004.571, 2558188397.714), stdev = 72040200.057
  CI (99.9%): [2322664928.579, 2598143080.563] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  50.116 ±(99.9%) 29.186 MB/sec [Average]
  (min, avg, max) = (26.665, 50.116, 80.544), stdev = 15.265
  CI (99.9%): [20.930, 79.301] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  118395756.286 ±(99.9%) 67023737.063 B/op [Average]
  (min, avg, max) = (63406080.000, 118395756.286, 185998185.143), stdev = 35054710.450
  CI (99.9%): [51372019.223, 185419493.349] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  97.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (11.000, 12.125, 13.000), stdev = 0.641
  CI (99.9%): [97.000, 97.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  27296.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2551.000, 3412.000, 3762.000), stdev = 497.837
  CI (99.9%): [27296.000, 27296.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 56.2%  56.2% java.lang.Class.forName0
 12.7%  12.7% java.math.BigInteger.<init>
  6.2%   6.2% org.json4s.jackson.JValueDeserializer.deserialize
  5.6%   5.6% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2
  5.3%   5.3% java.lang.String.intern
  2.8%   2.8% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  2.7%   2.7% scala.collection.generic.Growable$class.loop$1
  2.2%   2.2% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  0.6%   0.6% scala.collection.TraversableOnce$class.nonEmpty
  0.5%   0.5% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  5.3%   5.3% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-native, size = 10)

# Run progress: 57.14% complete, ETA 01:55:49
# Fork: 1 of 2
# Warmup Iteration   1: 4425.337 ops/s
# Warmup Iteration   2: 4610.716 ops/s
Iteration   1: 4594.661 ops/s
                 ·gc.alloc.rate:                   1643.281 MB/sec
                 ·gc.alloc.rate.norm:              381280.003 B/op
                 ·gc.churn.PS_Eden_Space:          1646.467 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     382019.239 B/op
                 ·gc.churn.PS_Survivor_Space:      0.257 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 59.669 B/op
                 ·gc.count:                        371.000 counts
                 ·gc.time:                         270.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 4593.985 ops/s
                 ·gc.alloc.rate:                   1643.038 MB/sec
                 ·gc.alloc.rate.norm:              381280.003 B/op
                 ·gc.churn.PS_Eden_Space:          1645.545 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     381861.645 B/op
                 ·gc.churn.PS_Survivor_Space:      0.220 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 51.118 B/op
                 ·gc.count:                        404.000 counts
                 ·gc.time:                         282.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 4605.250 ops/s
                 ·gc.alloc.rate:                   1647.053 MB/sec
                 ·gc.alloc.rate.norm:              381280.003 B/op
                 ·gc.churn.PS_Eden_Space:          1647.039 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     381276.560 B/op
                 ·gc.churn.PS_Survivor_Space:      0.235 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 54.313 B/op
                 ·gc.count:                        395.000 counts
                 ·gc.time:                         281.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 4595.239 ops/s
                 ·gc.alloc.rate:                   1643.463 MB/sec
                 ·gc.alloc.rate.norm:              381280.003 B/op
                 ·gc.churn.PS_Eden_Space:          1644.250 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     381462.512 B/op
                 ·gc.churn.PS_Survivor_Space:      0.204 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 47.301 B/op
                 ·gc.count:                        358.000 counts
                 ·gc.time:                         264.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 58.16% complete, ETA 01:53:03
# Fork: 2 of 2
# Warmup Iteration   1: 4091.122 ops/s
# Warmup Iteration   2: 4312.561 ops/s
Iteration   1: 4322.919 ops/s
                 ·gc.alloc.rate:                   1688.925 MB/sec
                 ·gc.alloc.rate.norm:              416504.004 B/op
                 ·gc.churn.PS_Eden_Space:          1692.789 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     417456.774 B/op
                 ·gc.churn.PS_Survivor_Space:      0.253 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 62.409 B/op
                 ·gc.count:                        407.000 counts
                 ·gc.time:                         286.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 4326.816 ops/s
                 ·gc.alloc.rate:                   1690.440 MB/sec
                 ·gc.alloc.rate.norm:              416504.003 B/op
                 ·gc.churn.PS_Eden_Space:          1692.435 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     416995.683 B/op
                 ·gc.churn.PS_Survivor_Space:      0.225 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 55.536 B/op
                 ·gc.count:                        383.000 counts
                 ·gc.time:                         275.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 4330.416 ops/s
                 ·gc.alloc.rate:                   1691.830 MB/sec
                 ·gc.alloc.rate.norm:              416504.003 B/op
                 ·gc.churn.PS_Eden_Space:          1691.714 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     416475.494 B/op
                 ·gc.churn.PS_Survivor_Space:      0.206 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 50.698 B/op
                 ·gc.count:                        360.000 counts
                 ·gc.time:                         269.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 4326.296 ops/s
                 ·gc.alloc.rate:                   1690.233 MB/sec
                 ·gc.alloc.rate.norm:              416504.003 B/op
                 ·gc.churn.PS_Eden_Space:          1690.453 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     416558.307 B/op
                 ·gc.churn.PS_Survivor_Space:      0.196 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 48.222 B/op
                 ·gc.count:                        330.000 counts
                 ·gc.time:                         246.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  4461.948 ±(99.9%) 276.733 ops/s [Average]
  (min, avg, max) = (4322.919, 4461.948, 4605.250), stdev = 144.737
  CI (99.9%): [4185.215, 4738.680] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1667.283 ±(99.9%) 47.247 MB/sec [Average]
  (min, avg, max) = (1643.038, 1667.283, 1691.830), stdev = 24.711
  CI (99.9%): [1620.036, 1714.530] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  398892.003 ±(99.9%) 35998.707 B/op [Average]
  (min, avg, max) = (381280.003, 398892.003, 416504.004), stdev = 18828.020
  CI (99.9%): [362893.296, 434890.711] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1668.836 ±(99.9%) 47.077 MB/sec [Average]
  (min, avg, max) = (1644.250, 1668.836, 1692.789), stdev = 24.622
  CI (99.9%): [1621.759, 1715.914] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  399263.277 ±(99.9%) 35998.146 B/op [Average]
  (min, avg, max) = (381276.560, 399263.277, 417456.774), stdev = 18827.726
  CI (99.9%): [363265.131, 435261.422] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  0.225 ±(99.9%) 0.043 MB/sec [Average]
  (min, avg, max) = (0.196, 0.225, 0.257), stdev = 0.023
  CI (99.9%): [0.181, 0.268] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  53.658 ±(99.9%) 10.267 B/op [Average]
  (min, avg, max) = (47.301, 53.658, 62.409), stdev = 5.370
  CI (99.9%): [43.391, 63.925] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  3008.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (330.000, 376.000, 407.000), stdev = 26.393
  CI (99.9%): [3008.000, 3008.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2173.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (246.000, 271.625, 286.000), stdev = 12.750
  CI (99.9%): [2173.000, 2173.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 51.2%  51.2% java.lang.Class.forName0
 18.1%  18.1% java.math.BigInteger.<init>
  8.1%   8.1% org.json4s.native.JsonParser$$anonfun$1.apply
  7.0%   7.0% org.json4s.native.JsonParser$Parser.parseValue$1
  3.9%   3.9% org.json4s.native.JsonParser$Parser.nextToken
  3.9%   3.9% scala.collection.immutable.List.map
  2.1%   2.1% org.json4s.ParserUtil$.unquote
  1.3%   1.3% scala.collection.immutable.List.reverse
  0.8%   0.8% org.json4s.native.JsonParser$$anonfun$1$$anonfun$org$json4s$native$JsonParser$$anonfun$$reverse$1$1.apply
  0.4%   0.4% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  3.2%   3.2% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-native, size = 100)

# Run progress: 59.18% complete, ETA 01:50:16
# Fork: 1 of 2
# Warmup Iteration   1: 497.603 ops/s
# Warmup Iteration   2: 523.563 ops/s
Iteration   1: 524.247 ops/s
                 ·gc.alloc.rate:                   1537.942 MB/sec
                 ·gc.alloc.rate.norm:              3127448.030 B/op
                 ·gc.churn.PS_Eden_Space:          1541.489 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3134660.883 B/op
                 ·gc.churn.PS_Survivor_Space:      1.456 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2960.537 B/op
                 ·gc.count:                        264.000 counts
                 ·gc.time:                         271.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 523.647 ops/s
                 ·gc.alloc.rate:                   1536.175 MB/sec
                 ·gc.alloc.rate.norm:              3127448.027 B/op
                 ·gc.churn.PS_Eden_Space:          1537.811 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3130776.948 B/op
                 ·gc.churn.PS_Survivor_Space:      1.646 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3351.889 B/op
                 ·gc.count:                        286.000 counts
                 ·gc.time:                         281.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 523.088 ops/s
                 ·gc.alloc.rate:                   1534.526 MB/sec
                 ·gc.alloc.rate.norm:              3127456.349 B/op
                 ·gc.churn.PS_Eden_Space:          1537.770 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3134068.244 B/op
                 ·gc.churn.PS_Survivor_Space:      1.500 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3056.927 B/op
                 ·gc.count:                        304.000 counts
                 ·gc.time:                         279.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 522.587 ops/s
                 ·gc.alloc.rate:                   1533.074 MB/sec
                 ·gc.alloc.rate.norm:              3127464.028 B/op
                 ·gc.churn.PS_Eden_Space:          1532.814 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3126934.155 B/op
                 ·gc.churn.PS_Survivor_Space:      1.660 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3385.901 B/op
                 ·gc.count:                        306.000 counts
                 ·gc.time:                         281.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 60.20% complete, ETA 01:47:29
# Fork: 2 of 2
# Warmup Iteration   1: 457.508 ops/s
# Warmup Iteration   2: 483.523 ops/s
Iteration   1: 483.387 ops/s
                 ·gc.alloc.rate:                   1486.774 MB/sec
                 ·gc.alloc.rate.norm:              3278960.032 B/op
                 ·gc.churn.PS_Eden_Space:          1486.950 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3279348.772 B/op
                 ·gc.churn.PS_Survivor_Space:      1.666 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3674.029 B/op
                 ·gc.count:                        306.000 counts
                 ·gc.time:                         282.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 481.331 ops/s
                 ·gc.alloc.rate:                   1480.444 MB/sec
                 ·gc.alloc.rate.norm:              3278960.032 B/op
                 ·gc.churn.PS_Eden_Space:          1479.058 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3275892.278 B/op
                 ·gc.churn.PS_Survivor_Space:      1.650 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3653.496 B/op
                 ·gc.count:                        294.000 counts
                 ·gc.time:                         281.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 482.960 ops/s
                 ·gc.alloc.rate:                   1485.465 MB/sec
                 ·gc.alloc.rate.norm:              3278962.710 B/op
                 ·gc.churn.PS_Eden_Space:          1489.464 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3287791.267 B/op
                 ·gc.churn.PS_Survivor_Space:      1.530 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3376.536 B/op
                 ·gc.count:                        299.000 counts
                 ·gc.time:                         284.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 481.460 ops/s
                 ·gc.alloc.rate:                   1480.734 MB/sec
                 ·gc.alloc.rate.norm:              3278976.510 B/op
                 ·gc.churn.PS_Eden_Space:          1477.637 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3272117.561 B/op
                 ·gc.churn.PS_Survivor_Space:      1.691 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3745.498 B/op
                 ·gc.count:                        291.000 counts
                 ·gc.time:                         279.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  502.838 ±(99.9%) 42.042 ops/s [Average]
  (min, avg, max) = (481.331, 502.838, 524.247), stdev = 21.989
  CI (99.9%): [460.797, 544.880] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1509.392 ±(99.9%) 53.439 MB/sec [Average]
  (min, avg, max) = (1480.444, 1509.392, 1537.942), stdev = 27.950
  CI (99.9%): [1455.952, 1562.831] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  3203209.465 ±(99.9%) 154843.000 B/op [Average]
  (min, avg, max) = (3127448.027, 3203209.465, 3278976.510), stdev = 80985.883
  CI (99.9%): [3048366.465, 3358052.464] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1510.374 ±(99.9%) 56.039 MB/sec [Average]
  (min, avg, max) = (1477.637, 1510.374, 1541.489), stdev = 29.309
  CI (99.9%): [1454.336, 1566.413] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  3205198.764 ±(99.9%) 150712.967 B/op [Average]
  (min, avg, max) = (3126934.155, 3205198.764, 3287791.267), stdev = 78825.796
  CI (99.9%): [3054485.796, 3355911.731] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  1.600 ±(99.9%) 0.172 MB/sec [Average]
  (min, avg, max) = (1.456, 1.600, 1.691), stdev = 0.090
  CI (99.9%): [1.428, 1.772] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  3400.602 ±(99.9%) 546.842 B/op [Average]
  (min, avg, max) = (2960.537, 3400.602, 3745.498), stdev = 286.009
  CI (99.9%): [2853.759, 3947.444] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  2350.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (264.000, 293.750, 306.000), stdev = 14.069
  CI (99.9%): [2350.000, 2350.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2238.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (271.000, 279.750, 284.000), stdev = 3.882
  CI (99.9%): [2238.000, 2238.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 50.0%  50.0% java.lang.Class.forName0
 15.8%  15.8% java.math.BigInteger.<init>
  6.9%   6.9% org.json4s.native.JsonParser$Parser.parseValue$1
  6.7%   6.7% org.json4s.native.JsonParser$$anonfun$1.apply
  3.7%   3.7% org.json4s.native.JsonParser$$anonfun$1$$anonfun$org$json4s$native$JsonParser$$anonfun$$reverse$1$2.apply
  3.0%   3.0% org.json4s.native.JsonParser$Parser.nextToken
  2.2%   2.2% org.json4s.ParserUtil$.unquote
  1.9%   1.9% scala.collection.immutable.List.<init>
  1.6%   1.6% scala.collection.AbstractTraversable.<init>
  1.1%   1.1% scala.collection.AbstractIterable.<init>
  7.1%   7.1% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-native, size = 1000)

# Run progress: 61.22% complete, ETA 01:44:43
# Fork: 1 of 2
# Warmup Iteration   1: 33.230 ops/s
# Warmup Iteration   2: 41.270 ops/s
Iteration   1: 40.923 ops/s
                 ·gc.alloc.rate:                   1274.446 MB/sec
                 ·gc.alloc.rate.norm:              33199600.378 B/op
                 ·gc.churn.PS_Eden_Space:          1331.383 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     34682846.645 B/op
                 ·gc.churn.PS_Survivor_Space:      1.297 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 33781.993 B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         192.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 40.980 ops/s
                 ·gc.alloc.rate:                   1276.166 MB/sec
                 ·gc.alloc.rate.norm:              33199600.351 B/op
                 ·gc.churn.PS_Eden_Space:          1271.536 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     33079162.797 B/op
                 ·gc.churn.PS_Survivor_Space:      2.224 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 57863.493 B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         265.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 40.899 ops/s
                 ·gc.alloc.rate:                   1273.691 MB/sec
                 ·gc.alloc.rate.norm:              33199600.378 B/op
                 ·gc.churn.PS_Eden_Space:          1274.321 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     33216016.274 B/op
                 ·gc.churn.PS_Survivor_Space:      1.592 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 41500.792 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         270.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 40.944 ops/s
                 ·gc.alloc.rate:                   1274.969 MB/sec
                 ·gc.alloc.rate.norm:              33199573.722 B/op
                 ·gc.churn.PS_Eden_Space:          1282.847 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     33404696.371 B/op
                 ·gc.churn.PS_Survivor_Space:      1.578 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 41086.646 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         259.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 62.24% complete, ETA 01:41:56
# Fork: 2 of 2
# Warmup Iteration   1: 38.077 ops/s
# Warmup Iteration   2: 43.555 ops/s
Iteration   1: 43.474 ops/s
                 ·gc.alloc.rate:                   1295.689 MB/sec
                 ·gc.alloc.rate.norm:              31772544.405 B/op
                 ·gc.churn.PS_Eden_Space:          1325.840 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     32511882.299 B/op
                 ·gc.churn.PS_Survivor_Space:      2.204 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 54035.813 B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         249.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 43.596 ops/s
                 ·gc.alloc.rate:                   1299.257 MB/sec
                 ·gc.alloc.rate.norm:              31772544.330 B/op
                 ·gc.churn.PS_Eden_Space:          1281.153 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     31329815.486 B/op
                 ·gc.churn.PS_Survivor_Space:      1.629 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 39832.661 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         274.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 43.527 ops/s
                 ·gc.alloc.rate:                   1297.259 MB/sec
                 ·gc.alloc.rate.norm:              31772540.172 B/op
                 ·gc.churn.PS_Eden_Space:          1320.348 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     32338051.724 B/op
                 ·gc.churn.PS_Survivor_Space:      1.757 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 43029.954 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         225.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 43.646 ops/s
                 ·gc.alloc.rate:                   1300.802 MB/sec
                 ·gc.alloc.rate.norm:              31772512.330 B/op
                 ·gc.churn.PS_Eden_Space:          1263.612 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     30864154.186 B/op
                 ·gc.churn.PS_Survivor_Space:      1.740 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 42498.345 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         189.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  42.249 ±(99.9%) 2.684 ops/s [Average]
  (min, avg, max) = (40.899, 42.249, 43.646), stdev = 1.404
  CI (99.9%): [39.565, 44.933] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1286.535 ±(99.9%) 24.148 MB/sec [Average]
  (min, avg, max) = (1273.691, 1286.535, 1300.802), stdev = 12.630
  CI (99.9%): [1262.387, 1310.683] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  32486064.508 ±(99.9%) 1458444.741 B/op [Average]
  (min, avg, max) = (31772512.330, 32486064.508, 33199600.378), stdev = 762794.800
  CI (99.9%): [31027619.768, 33944509.249] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1293.880 ±(99.9%) 52.162 MB/sec [Average]
  (min, avg, max) = (1263.612, 1293.880, 1331.383), stdev = 27.282
  CI (99.9%): [1241.718, 1346.043] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  32678328.223 ±(99.9%) 2313488.635 B/op [Average]
  (min, avg, max) = (30864154.186, 32678328.223, 34682846.645), stdev = 1209999.289
  CI (99.9%): [30364839.588, 34991816.858] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  1.753 ±(99.9%) 0.607 MB/sec [Average]
  (min, avg, max) = (1.297, 1.753, 2.224), stdev = 0.317
  CI (99.9%): [1.146, 2.359] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  44203.712 ±(99.9%) 15025.150 B/op [Average]
  (min, avg, max) = (33781.993, 44203.712, 57863.493), stdev = 7858.444
  CI (99.9%): [29178.562, 59228.862] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  279.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (28.000, 34.875, 39.000), stdev = 3.871
  CI (99.9%): [279.000, 279.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  1923.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (189.000, 240.375, 274.000), stdev = 34.334
  CI (99.9%): [1923.000, 1923.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 45.0%  45.0% java.lang.Class.forName0
 13.2%  13.2% java.math.BigInteger.<init>
  6.9%   6.9% org.json4s.native.JsonParser$$anonfun$1$$anonfun$org$json4s$native$JsonParser$$anonfun$$reverse$1$2.apply
  5.6%   5.6% org.json4s.native.JsonParser$$anonfun$1.apply
  5.5%   5.5% org.json4s.native.JsonParser$Parser.parseValue$1
  2.6%   2.6% scala.collection.immutable.List.<init>
  2.5%   2.5% org.json4s.native.JsonParser$Parser.nextToken
  1.9%   1.9% scala.collection.AbstractTraversable.<init>
  1.9%   1.9% org.json4s.ParserUtil$.unquote
  1.8%   1.8% scala.collection.generic.Growable$class.loop$1
 13.0%  13.0% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-native, size = 5000)

# Run progress: 63.27% complete, ETA 01:39:10
# Fork: 1 of 2
# Warmup Iteration   1: 6.137 ops/s
# Warmup Iteration   2: 6.821 ops/s
Iteration   1: 6.769 ops/s
                 ·gc.alloc.rate:                   1273.318 MB/sec
                 ·gc.alloc.rate.norm:              200532786.118 B/op
                 ·gc.churn.PS_Eden_Space:          1288.329 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     202896885.961 B/op
                 ·gc.churn.PS_Survivor_Space:      2.818 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 443813.647 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         184.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 6.782 ops/s
                 ·gc.alloc.rate:                   1275.817 MB/sec
                 ·gc.alloc.rate.norm:              200532786.275 B/op
                 ·gc.churn.PS_Eden_Space:          1220.173 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     191786606.431 B/op
                 ·gc.churn.PS_Survivor_Space:      6.742 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1059659.294 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         258.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 6.786 ops/s
                 ·gc.alloc.rate:                   1276.603 MB/sec
                 ·gc.alloc.rate.norm:              200532786.275 B/op
                 ·gc.churn.PS_Eden_Space:          1299.604 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     204145925.020 B/op
                 ·gc.churn.PS_Survivor_Space:      4.532 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 711900.863 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         258.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 6.759 ops/s
                 ·gc.alloc.rate:                   1271.324 MB/sec
                 ·gc.alloc.rate.norm:              200532786.286 B/op
                 ·gc.churn.PS_Eden_Space:          1296.234 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     204461989.202 B/op
                 ·gc.churn.PS_Survivor_Space:      3.172 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 500398.030 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         300.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 64.29% complete, ETA 01:36:24
# Fork: 2 of 2
# Warmup Iteration   1: 6.789 ops/s
# Warmup Iteration   2: 7.334 ops/s
Iteration   1: 7.406 ops/s
                 ·gc.alloc.rate:                   1405.329 MB/sec
                 ·gc.alloc.rate.norm:              202292730.081 B/op
                 ·gc.churn.PS_Eden_Space:          1529.199 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     220123374.780 B/op
                 ·gc.churn.PS_Survivor_Space:      3.326 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 478736.072 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         209.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 7.376 ops/s
                 ·gc.alloc.rate:                   1399.708 MB/sec
                 ·gc.alloc.rate.norm:              202292729.946 B/op
                 ·gc.churn.PS_Eden_Space:          1352.203 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     195427171.171 B/op
                 ·gc.churn.PS_Survivor_Space:      3.320 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 479859.315 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         265.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 7.387 ops/s
                 ·gc.alloc.rate:                   1401.824 MB/sec
                 ·gc.alloc.rate.norm:              202292730.090 B/op
                 ·gc.churn.PS_Eden_Space:          1459.282 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     210584290.018 B/op
                 ·gc.churn.PS_Survivor_Space:      3.020 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 435873.441 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         232.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 7.361 ops/s
                 ·gc.alloc.rate:                   1396.744 MB/sec
                 ·gc.alloc.rate.norm:              202292729.955 B/op
                 ·gc.churn.PS_Eden_Space:          1404.733 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     203449839.783 B/op
                 ·gc.churn.PS_Survivor_Space:      5.015 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 726382.045 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         299.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  7.078 ±(99.9%) 0.622 ops/s [Average]
  (min, avg, max) = (6.759, 7.078, 7.406), stdev = 0.326
  CI (99.9%): [6.456, 7.701] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1337.583 ±(99.9%) 129.535 MB/sec [Average]
  (min, avg, max) = (1271.324, 1337.583, 1405.329), stdev = 67.749
  CI (99.9%): [1208.048, 1467.118] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  201412758.128 ±(99.9%) 1798651.514 B/op [Average]
  (min, avg, max) = (200532786.118, 201412758.128, 202292730.090), stdev = 940729.521
  CI (99.9%): [199614106.614, 203211409.642] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1356.220 ±(99.9%) 195.031 MB/sec [Average]
  (min, avg, max) = (1220.173, 1356.220, 1529.199), stdev = 102.005
  CI (99.9%): [1161.189, 1551.250] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  204109510.296 ±(99.9%) 16599688.832 B/op [Average]
  (min, avg, max) = (191786606.431, 204109510.296, 220123374.780), stdev = 8681958.229
  CI (99.9%): [187509821.464, 220709199.128] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  3.993 ±(99.9%) 2.584 MB/sec [Average]
  (min, avg, max) = (2.818, 3.993, 6.742), stdev = 1.352
  CI (99.9%): [1.409, 6.578] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  604577.838 ±(99.9%) 415138.471 B/op [Average]
  (min, avg, max) = (435873.441, 604577.838, 1059659.294), stdev = 217125.447
  CI (99.9%): [189439.367, 1019716.309] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  123.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (11.000, 15.375, 18.000), stdev = 2.560
  CI (99.9%): [123.000, 123.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2005.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (184.000, 250.625, 300.000), stdev = 40.729
  CI (99.9%): [2005.000, 2005.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 38.8%  38.8% java.lang.Class.forName0
 10.9%  10.9% java.math.BigInteger.<init>
  7.5%   7.5% scala.collection.AbstractTraversable.<init>
  5.3%   5.3% scala.collection.generic.Growable$class.loop$1
  4.9%   4.9% org.json4s.native.JsonParser$$anonfun$1.apply
  4.8%   4.8% scala.collection.AbstractIterable.<init>
  4.5%   4.5% scala.collection.immutable.List.map
  4.3%   4.3% org.json4s.native.JsonParser$Parser.parseValue$1
  2.9%   2.9% org.json4s.native.JsonParser$$anonfun$1$$anonfun$org$json4s$native$JsonParser$$anonfun$$reverse$1$2.apply
  2.9%   2.9% scala.collection.LinearSeqOptimized$class.length
 13.3%  13.3% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-native, size = 10000)

# Run progress: 65.31% complete, ETA 01:33:38
# Fork: 1 of 2
# Warmup Iteration   1: 2.833 ops/s
# Warmup Iteration   2: 3.049 ops/s
Iteration   1: 3.057 ops/s
                 ·gc.alloc.rate:                   1409.189 MB/sec
                 ·gc.alloc.rate.norm:              491333572.696 B/op
                 ·gc.churn.PS_Eden_Space:          1360.167 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     474241291.130 B/op
                 ·gc.churn.PS_Survivor_Space:      2.471 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 861584.696 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         286.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 3.060 ops/s
                 ·gc.alloc.rate:                   1410.275 MB/sec
                 ·gc.alloc.rate.norm:              491333573.043 B/op
                 ·gc.churn.PS_Eden_Space:          1489.341 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     518879855.304 B/op
                 ·gc.churn.PS_Survivor_Space:      3.554 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1238060.522 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         359.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 3.070 ops/s
                 ·gc.alloc.rate:                   1415.076 MB/sec
                 ·gc.alloc.rate.norm:              491333572.645 B/op
                 ·gc.churn.PS_Eden_Space:          1401.057 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     486465976.430 B/op
                 ·gc.churn.PS_Survivor_Space:      4.006 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1391054.452 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         284.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 3.038 ops/s
                 ·gc.alloc.rate:                   1400.284 MB/sec
                 ·gc.alloc.rate.norm:              491333573.043 B/op
                 ·gc.churn.PS_Eden_Space:          1381.342 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     484687159.652 B/op
                 ·gc.churn.PS_Survivor_Space:      4.697 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1648016.696 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         230.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 66.33% complete, ETA 01:30:53
# Fork: 2 of 2
# Warmup Iteration   1: 2.758 ops/s
# Warmup Iteration   2: 2.997 ops/s
Iteration   1: 2.998 ops/s
                 ·gc.alloc.rate:                   1371.676 MB/sec
                 ·gc.alloc.rate.norm:              487813605.156 B/op
                 ·gc.churn.PS_Eden_Space:          1343.292 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     477719574.756 B/op
                 ·gc.churn.PS_Survivor_Space:      4.899 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1742165.333 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         257.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2.992 ops/s
                 ·gc.alloc.rate:                   1369.100 MB/sec
                 ·gc.alloc.rate.norm:              487813604.800 B/op
                 ·gc.churn.PS_Eden_Space:          1324.682 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     471987359.289 B/op
                 ·gc.churn.PS_Survivor_Space:      3.433 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1223338.667 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         335.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 3.001 ops/s
                 ·gc.alloc.rate:                   1373.216 MB/sec
                 ·gc.alloc.rate.norm:              487813605.099 B/op
                 ·gc.churn.PS_Eden_Space:          1314.632 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     467002334.242 B/op
                 ·gc.churn.PS_Survivor_Space:      5.205 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1849051.429 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         307.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2.998 ops/s
                 ·gc.alloc.rate:                   1371.867 MB/sec
                 ·gc.alloc.rate.norm:              487813604.800 B/op
                 ·gc.churn.PS_Eden_Space:          1347.313 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     479082723.556 B/op
                 ·gc.churn.PS_Survivor_Space:      2.853 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1014351.644 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         385.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  3.027 ±(99.9%) 0.063 ops/s [Average]
  (min, avg, max) = (2.992, 3.027, 3.070), stdev = 0.033
  CI (99.9%): [2.964, 3.090] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1390.085 ±(99.9%) 38.896 MB/sec [Average]
  (min, avg, max) = (1369.100, 1390.085, 1415.076), stdev = 20.343
  CI (99.9%): [1351.190, 1428.981] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  489573588.910 ±(99.9%) 3597385.129 B/op [Average]
  (min, avg, max) = (487813604.800, 489573588.910, 491333573.043), stdev = 1881501.981
  CI (99.9%): [485976203.781, 493170974.039] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1370.228 ±(99.9%) 106.648 MB/sec [Average]
  (min, avg, max) = (1314.632, 1370.228, 1489.341), stdev = 55.779
  CI (99.9%): [1263.580, 1476.876] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  482508284.295 ±(99.9%) 30637965.357 B/op [Average]
  (min, avg, max) = (467002334.242, 482508284.295, 518879855.304), stdev = 16024248.295
  CI (99.9%): [451870318.938, 513146249.652] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  3.890 ±(99.9%) 1.888 MB/sec [Average]
  (min, avg, max) = (2.471, 3.890, 5.205), stdev = 0.987
  CI (99.9%): [2.002, 5.777] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  1370952.930 ±(99.9%) 673902.413 B/op [Average]
  (min, avg, max) = (861584.696, 1370952.930, 1849051.429), stdev = 352463.993
  CI (99.9%): [697050.517, 2044855.343] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  68.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (8.000, 8.500, 10.000), stdev = 0.756
  CI (99.9%): [68.000, 68.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2443.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (230.000, 305.375, 385.000), stdev = 52.030
  CI (99.9%): [2443.000, 2443.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 33.1%  33.1% java.lang.Class.forName0
 16.3%  16.3% scala.collection.AbstractIterable.<init>
  9.5%   9.5% java.math.BigInteger.<init>
  9.1%   9.1% scala.collection.generic.Growable$class.loop$1
  4.9%   4.9% scala.collection.LinearSeqOptimized$class.length
  4.0%   4.0% org.json4s.native.JsonParser$$anonfun$1.apply
  3.8%   3.8% scala.collection.immutable.List.map
  3.5%   3.5% org.json4s.native.JsonParser$Parser.parseValue$1
  2.6%   2.6% org.json4s.native.JsonParser$$anonfun$1$$anonfun$org$json4s$native$JsonParser$$anonfun$$reverse$1$2.apply
  2.4%   2.4% scala.collection.immutable.List.apply
 10.9%  10.9% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-native, size = 50000)

# Run progress: 67.35% complete, ETA 01:28:08
# Fork: 1 of 2
# Warmup Iteration   1: 0.177 ops/s
# Warmup Iteration   2: 0.201 ops/s
Iteration   1: 0.204 ops/s
                 ·gc.alloc.rate:                   1123.377 MB/sec
                 ·gc.alloc.rate.norm:              5851736442.286 B/op
                 ·gc.churn.PS_Eden_Space:          1099.291 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5726273536.000 B/op
                 ·gc.churn.PS_Survivor_Space:      42.777 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 222827081.143 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         2432.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.205 ops/s
                 ·gc.alloc.rate:                   1130.046 MB/sec
                 ·gc.alloc.rate.norm:              5851736437.714 B/op
                 ·gc.churn.PS_Eden_Space:          1149.874 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5954413714.286 B/op
                 ·gc.churn.PS_Survivor_Space:      39.332 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 203671844.571 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         2201.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.207 ops/s
                 ·gc.alloc.rate:                   1138.178 MB/sec
                 ·gc.alloc.rate.norm:              5851736442.286 B/op
                 ·gc.churn.PS_Eden_Space:          1130.863 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5814129225.143 B/op
                 ·gc.churn.PS_Survivor_Space:      34.374 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 176727186.286 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         1907.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.208 ops/s
                 ·gc.alloc.rate:                   1141.574 MB/sec
                 ·gc.alloc.rate.norm:              5851736437.714 B/op
                 ·gc.churn.PS_Eden_Space:          1158.084 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5936363227.429 B/op
                 ·gc.churn.PS_Survivor_Space:      33.109 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 169719515.429 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         1814.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 68.37% complete, ETA 01:25:34
# Fork: 2 of 2
# Warmup Iteration   1: 0.177 ops/s
# Warmup Iteration   2: 0.198 ops/s
Iteration   1: 0.202 ops/s
                 ·gc.alloc.rate:                   1109.797 MB/sec
                 ·gc.alloc.rate.norm:              5851736442.286 B/op
                 ·gc.churn.PS_Eden_Space:          1092.991 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5763123492.571 B/op
                 ·gc.churn.PS_Survivor_Space:      44.124 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 232657481.143 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         2674.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.205 ops/s
                 ·gc.alloc.rate:                   1126.546 MB/sec
                 ·gc.alloc.rate.norm:              5851736442.286 B/op
                 ·gc.churn.PS_Eden_Space:          1119.277 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5813979428.571 B/op
                 ·gc.churn.PS_Survivor_Space:      39.837 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 206929920.000 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         2137.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.205 ops/s
                 ·gc.alloc.rate:                   1129.458 MB/sec
                 ·gc.alloc.rate.norm:              5851736437.714 B/op
                 ·gc.churn.PS_Eden_Space:          1129.197 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5850379995.429 B/op
                 ·gc.churn.PS_Survivor_Space:      34.144 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 176900388.571 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         2027.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.207 ops/s
                 ·gc.alloc.rate:                   1140.407 MB/sec
                 ·gc.alloc.rate.norm:              5851736437.714 B/op
                 ·gc.churn.PS_Eden_Space:          1185.815 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     6084736731.429 B/op
                 ·gc.churn.PS_Survivor_Space:      31.797 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 163156553.143 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         1680.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  0.205 ±(99.9%) 0.004 ops/s [Average]
  (min, avg, max) = (0.202, 0.205, 0.208), stdev = 0.002
  CI (99.9%): [0.202, 0.209] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1129.923 ±(99.9%) 20.097 MB/sec [Average]
  (min, avg, max) = (1109.797, 1129.923, 1141.574), stdev = 10.511
  CI (99.9%): [1109.826, 1150.020] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  5851736440.000 ±(99.9%) 4.672 B/op [Average]
  (min, avg, max) = (5851736437.714, 5851736440.000, 5851736442.286), stdev = 2.444
  CI (99.9%): [5851736435.328, 5851736444.672] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1133.174 ±(99.9%) 58.920 MB/sec [Average]
  (min, avg, max) = (1092.991, 1133.174, 1185.815), stdev = 30.816
  CI (99.9%): [1074.254, 1192.094] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  5867924918.857 ±(99.9%) 224294268.742 B/op [Average]
  (min, avg, max) = (5726273536.000, 5867924918.857, 6084736731.429), stdev = 117310239.490
  CI (99.9%): [5643630650.115, 6092219187.599] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  37.437 ±(99.9%) 8.949 MB/sec [Average]
  (min, avg, max) = (31.797, 37.437, 44.124), stdev = 4.681
  CI (99.9%): [28.488, 46.386] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  194073746.286 ±(99.9%) 49636144.607 B/op [Average]
  (min, avg, max) = (163156553.143, 194073746.286, 232657481.143), stdev = 25960663.390
  CI (99.9%): [144437601.679, 243709890.893] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  115.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (12.000, 14.375, 18.000), stdev = 2.264
  CI (99.9%): [115.000, 115.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  16872.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1680.000, 2109.000, 2674.000), stdev = 327.631
  CI (99.9%): [16872.000, 16872.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 40.9%  40.9% scala.collection.AbstractTraversable.<init>
 16.3%  16.3% scala.collection.generic.Growable$class.loop$1
 11.7%  11.7% java.lang.Class.forName0
  7.7%   7.7% scala.collection.LinearSeqOptimized$class.length
  6.6%   6.6% scala.collection.AbstractSeq.<init>
  4.3%   4.3% scala.collection.immutable.List.apply
  3.3%   3.3% java.math.BigInteger.<init>
  1.5%   1.5% scala.collection.mutable.ListBuffer.underlying
  1.5%   1.5% org.json4s.native.JsonParser$$anonfun$1.apply
  1.4%   1.4% org.json4s.native.JsonParser$Parser.parseValue$1
  4.7%   4.7% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = json4s-native, size = 100000)

# Run progress: 69.39% complete, ETA 01:22:57
# Fork: 1 of 2
# Warmup Iteration   1: 0.053 ops/s
# Warmup Iteration   2: 0.055 ops/s
Iteration   1: 0.055 ops/s
                 ·gc.alloc.rate:                   1051.533 MB/sec
                 ·gc.alloc.rate.norm:              20206258800.000 B/op
                 ·gc.churn.PS_Eden_Space:          1090.743 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     20959723520.000 B/op
                 ·gc.churn.PS_Survivor_Space:      36.411 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 699678720.000 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         2929.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.055 ops/s
                 ·gc.alloc.rate:                   1049.139 MB/sec
                 ·gc.alloc.rate.norm:              20206258816.000 B/op
                 ·gc.churn.PS_Eden_Space:          1084.626 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     20889731072.000 B/op
                 ·gc.churn.PS_Survivor_Space:      31.547 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 607584256.000 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3315.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.054 ops/s
                 ·gc.alloc.rate:                   1032.775 MB/sec
                 ·gc.alloc.rate.norm:              20206258800.000 B/op
                 ·gc.churn.PS_Eden_Space:          1044.461 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     20434911232.000 B/op
                 ·gc.churn.PS_Survivor_Space:      33.663 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 658620416.000 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3700.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.054 ops/s
                 ·gc.alloc.rate:                   1035.925 MB/sec
                 ·gc.alloc.rate.norm:              20206258800.000 B/op
                 ·gc.churn.PS_Eden_Space:          1028.725 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     20065812480.000 B/op
                 ·gc.churn.PS_Survivor_Space:      34.892 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 680591360.000 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3551.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 70.41% complete, ETA 01:20:37
# Fork: 2 of 2
# Warmup Iteration   1: 0.054 ops/s
# Warmup Iteration   2: 0.056 ops/s
Iteration   1: 0.057 ops/s
                 ·gc.alloc.rate:                   1085.036 MB/sec
                 ·gc.alloc.rate.norm:              20203058792.000 B/op
                 ·gc.churn.PS_Eden_Space:          1125.589 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     20958150656.000 B/op
                 ·gc.churn.PS_Survivor_Space:      37.119 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 691142656.000 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         2990.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.056 ops/s
                 ·gc.alloc.rate:                   1070.431 MB/sec
                 ·gc.alloc.rate.norm:              20203058792.000 B/op
                 ·gc.churn.PS_Eden_Space:          1110.967 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     20968112128.000 B/op
                 ·gc.churn.PS_Survivor_Space:      30.728 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 579960832.000 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3387.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.057 ops/s
                 ·gc.alloc.rate:                   1090.007 MB/sec
                 ·gc.alloc.rate.norm:              20203058792.000 B/op
                 ·gc.churn.PS_Eden_Space:          1016.397 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     18838716416.000 B/op
                 ·gc.churn.PS_Survivor_Space:      39.040 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 723599360.000 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         2705.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.057 ops/s
                 ·gc.alloc.rate:                   1083.227 MB/sec
                 ·gc.alloc.rate.norm:              20203058808.000 B/op
                 ·gc.churn.PS_Eden_Space:          1115.996 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     20814233600.000 B/op
                 ·gc.churn.PS_Survivor_Space:      37.310 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 695861248.000 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         2940.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  0.056 ±(99.9%) 0.002 ops/s [Average]
  (min, avg, max) = (0.054, 0.056, 0.057), stdev = 0.001
  CI (99.9%): [0.054, 0.058] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1062.259 ±(99.9%) 43.631 MB/sec [Average]
  (min, avg, max) = (1032.775, 1062.259, 1090.007), stdev = 22.820
  CI (99.9%): [1018.628, 1105.890] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  20204658800.000 ±(99.9%) 3270388.123 B/op [Average]
  (min, avg, max) = (20203058792.000, 20204658800.000, 20206258816.000), stdev = 1710476.224
  CI (99.9%): [20201388411.877, 20207929188.123] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1077.188 ±(99.9%) 80.290 MB/sec [Average]
  (min, avg, max) = (1016.397, 1077.188, 1125.589), stdev = 41.993
  CI (99.9%): [996.898, 1157.478] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  20491173888.000 ±(99.9%) 1416670052.404 B/op [Average]
  (min, avg, max) = (18838716416.000, 20491173888.000, 20968112128.000), stdev = 740945830.038
  CI (99.9%): [19074503835.596, 21907843940.404] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  35.089 ±(99.9%) 5.600 MB/sec [Average]
  (min, avg, max) = (30.728, 35.089, 39.040), stdev = 2.929
  CI (99.9%): [29.489, 40.689] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  667129856.000 ±(99.9%) 94356317.290 B/op [Average]
  (min, avg, max) = (579960832.000, 667129856.000, 723599360.000), stdev = 49350178.409
  CI (99.9%): [572773538.710, 761486173.290] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  95.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (11.000, 11.875, 12.000), stdev = 0.354
  CI (99.9%): [95.000, 95.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  25517.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2705.000, 3189.625, 3700.000), stdev = 348.609
  CI (99.9%): [25517.000, 25517.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 56.2%  56.2% scala.collection.AbstractTraversable.<init>
 17.9%  17.9% scala.collection.generic.Growable$class.loop$1
  7.9%   7.9% scala.collection.LinearSeqOptimized$class.length
  6.8%   6.8% java.lang.Class.forName0
  4.5%   4.5% scala.collection.immutable.List.apply
  2.0%   2.0% java.math.BigInteger.<init>
  0.9%   0.9% org.json4s.native.JsonParser$$anonfun$1.apply
  0.8%   0.8% org.json4s.native.JsonParser$Parser.parseValue$1
  0.4%   0.4% org.json4s.native.JsonParser$$anonfun$1$$anonfun$org$json4s$native$JsonParser$$anonfun$$reverse$1$2.apply
  0.4%   0.4% scala.collection.immutable.List.<init>
  2.1%   2.1% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = play-json, size = 10)

# Run progress: 71.43% complete, ETA 01:18:12
# Fork: 1 of 2
# Warmup Iteration   1: 6858.828 ops/s
# Warmup Iteration   2: 7024.062 ops/s
Iteration   1: 7041.312 ops/s
                 ·gc.alloc.rate:                   3274.272 MB/sec
                 ·gc.alloc.rate.norm:              495768.002 B/op
                 ·gc.churn.PS_Eden_Space:          3275.534 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     495959.109 B/op
                 ·gc.churn.PS_Survivor_Space:      0.237 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 35.833 B/op
                 ·gc.count:                        353.000 counts
                 ·gc.time:                         271.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 7052.175 ops/s
                 ·gc.alloc.rate:                   3279.468 MB/sec
                 ·gc.alloc.rate.norm:              495768.004 B/op
                 ·gc.churn.PS_Eden_Space:          3277.202 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     495425.359 B/op
                 ·gc.churn.PS_Survivor_Space:      0.225 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 34.074 B/op
                 ·gc.count:                        339.000 counts
                 ·gc.time:                         262.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 7056.852 ops/s
                 ·gc.alloc.rate:                   3281.731 MB/sec
                 ·gc.alloc.rate.norm:              495768.002 B/op
                 ·gc.churn.PS_Eden_Space:          3287.745 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     496676.430 B/op
                 ·gc.churn.PS_Survivor_Space:      0.252 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 38.074 B/op
                 ·gc.count:                        369.000 counts
                 ·gc.time:                         276.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 7063.715 ops/s
                 ·gc.alloc.rate:                   3284.800 MB/sec
                 ·gc.alloc.rate.norm:              495768.002 B/op
                 ·gc.churn.PS_Eden_Space:          3287.907 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     496236.973 B/op
                 ·gc.churn.PS_Survivor_Space:      0.211 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 31.854 B/op
                 ·gc.count:                        282.000 counts
                 ·gc.time:                         247.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 72.45% complete, ETA 01:15:23
# Fork: 2 of 2
# Warmup Iteration   1: 6912.183 ops/s
# Warmup Iteration   2: 7121.779 ops/s
Iteration   1: 7102.967 ops/s
                 ·gc.alloc.rate:                   3303.172 MB/sec
                 ·gc.alloc.rate.norm:              495768.002 B/op
                 ·gc.churn.PS_Eden_Space:          3313.960 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     497387.053 B/op
                 ·gc.churn.PS_Survivor_Space:      0.257 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 38.596 B/op
                 ·gc.count:                        376.000 counts
                 ·gc.time:                         279.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 7115.700 ops/s
                 ·gc.alloc.rate:                   3309.068 MB/sec
                 ·gc.alloc.rate.norm:              495768.002 B/op
                 ·gc.churn.PS_Eden_Space:          3304.484 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     495081.205 B/op
                 ·gc.churn.PS_Survivor_Space:      0.264 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 39.603 B/op
                 ·gc.count:                        384.000 counts
                 ·gc.time:                         284.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 7114.171 ops/s
                 ·gc.alloc.rate:                   3308.391 MB/sec
                 ·gc.alloc.rate.norm:              495768.004 B/op
                 ·gc.churn.PS_Eden_Space:          3315.228 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     496792.542 B/op
                 ·gc.churn.PS_Survivor_Space:      0.231 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 34.544 B/op
                 ·gc.count:                        385.000 counts
                 ·gc.time:                         287.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 7103.384 ops/s
                 ·gc.alloc.rate:                   3303.296 MB/sec
                 ·gc.alloc.rate.norm:              495768.002 B/op
                 ·gc.churn.PS_Eden_Space:          3298.858 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     495101.979 B/op
                 ·gc.churn.PS_Survivor_Space:      0.256 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 38.442 B/op
                 ·gc.count:                        375.000 counts
                 ·gc.time:                         282.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  7081.284 ±(99.9%) 58.599 ops/s [Average]
  (min, avg, max) = (7041.312, 7081.284, 7115.700), stdev = 30.648
  CI (99.9%): [7022.686, 7139.883] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  3293.025 ±(99.9%) 27.353 MB/sec [Average]
  (min, avg, max) = (3274.272, 3293.025, 3309.068), stdev = 14.306
  CI (99.9%): [3265.672, 3320.377] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  495768.003 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (495768.002, 495768.003, 495768.004), stdev = 0.001
  CI (99.9%): [495768.001, 495768.004] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  3295.115 ±(99.9%) 29.550 MB/sec [Average]
  (min, avg, max) = (3275.534, 3295.115, 3315.228), stdev = 15.455
  CI (99.9%): [3265.565, 3324.665] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  496082.581 ±(99.9%) 1614.896 B/op [Average]
  (min, avg, max) = (495081.205, 496082.581, 497387.053), stdev = 844.622
  CI (99.9%): [494467.685, 497697.477] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  0.242 ±(99.9%) 0.036 MB/sec [Average]
  (min, avg, max) = (0.211, 0.242, 0.264), stdev = 0.019
  CI (99.9%): [0.206, 0.277] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  36.377 ±(99.9%) 5.206 B/op [Average]
  (min, avg, max) = (31.854, 36.377, 39.603), stdev = 2.723
  CI (99.9%): [31.172, 41.583] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  2863.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (282.000, 357.875, 385.000), stdev = 34.436
  CI (99.9%): [2863.000, 2863.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2188.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (247.000, 273.500, 287.000), stdev = 13.320
  CI (99.9%): [2188.000, 2188.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 33.3%  33.3% play.api.libs.json.jackson.JsValueDeserializer.deserialize
 18.8%  18.8% scala.collection.immutable.Vector.initFrom
  9.9%   9.9% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  7.4%   7.4% scala.collection.immutable.Vector.gotoPosWritable1
  5.0%   5.0% scala.collection.immutable.HashMap.$plus
  2.5%   2.5% scala.collection.immutable.Vector.$colon$plus
  1.6%   1.6% play.api.libs.json.JsLookup$.$bslash$extension
  1.6%   1.6% play.api.libs.json.Reads$$anon$8.reads
  1.4%   1.4% play.api.libs.json.jackson.KeyRead.addValue
  1.4%   1.4% play.api.libs.json.DefaultReads$$anon$26$$anonfun$reads$9.apply
 16.9%  16.9% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = play-json, size = 100)

# Run progress: 73.47% complete, ETA 01:12:34
# Fork: 1 of 2
# Warmup Iteration   1: 743.116 ops/s
# Warmup Iteration   2: 765.838 ops/s
Iteration   1: 768.706 ops/s
                 ·gc.alloc.rate:                   2897.432 MB/sec
                 ·gc.alloc.rate.norm:              4018280.020 B/op
                 ·gc.churn.PS_Eden_Space:          2903.363 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4026505.466 B/op
                 ·gc.churn.PS_Survivor_Space:      1.479 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2051.730 B/op
                 ·gc.count:                        305.000 counts
                 ·gc.time:                         285.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 768.351 ops/s
                 ·gc.alloc.rate:                   2896.103 MB/sec
                 ·gc.alloc.rate.norm:              4018290.520 B/op
                 ·gc.churn.PS_Eden_Space:          2898.163 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4021148.621 B/op
                 ·gc.churn.PS_Survivor_Space:      1.235 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1712.960 B/op
                 ·gc.count:                        285.000 counts
                 ·gc.time:                         276.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 767.133 ops/s
                 ·gc.alloc.rate:                   2891.524 MB/sec
                 ·gc.alloc.rate.norm:              4018296.019 B/op
                 ·gc.churn.PS_Eden_Space:          2898.529 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4028030.777 B/op
                 ·gc.churn.PS_Survivor_Space:      1.599 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2222.500 B/op
                 ·gc.count:                        301.000 counts
                 ·gc.time:                         285.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 769.195 ops/s
                 ·gc.alloc.rate:                   2899.123 MB/sec
                 ·gc.alloc.rate.norm:              4018287.143 B/op
                 ·gc.churn.PS_Eden_Space:          2895.854 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4013755.543 B/op
                 ·gc.churn.PS_Survivor_Space:      1.309 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1814.686 B/op
                 ·gc.count:                        299.000 counts
                 ·gc.time:                         287.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 74.49% complete, ETA 01:09:45
# Fork: 2 of 2
# Warmup Iteration   1: 722.724 ops/s
# Warmup Iteration   2: 748.313 ops/s
Iteration   1: 747.691 ops/s
                 ·gc.alloc.rate:                   2818.226 MB/sec
                 ·gc.alloc.rate.norm:              4018280.022 B/op
                 ·gc.churn.PS_Eden_Space:          2818.701 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4018956.995 B/op
                 ·gc.churn.PS_Survivor_Space:      1.354 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1931.224 B/op
                 ·gc.count:                        278.000 counts
                 ·gc.time:                         286.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 749.353 ops/s
                 ·gc.alloc.rate:                   2824.490 MB/sec
                 ·gc.alloc.rate.norm:              4018289.416 B/op
                 ·gc.churn.PS_Eden_Space:          2823.856 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4017387.990 B/op
                 ·gc.churn.PS_Survivor_Space:      1.279 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1819.068 B/op
                 ·gc.count:                        264.000 counts
                 ·gc.time:                         278.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 746.646 ops/s
                 ·gc.alloc.rate:                   2814.287 MB/sec
                 ·gc.alloc.rate.norm:              4018296.021 B/op
                 ·gc.churn.PS_Eden_Space:          2813.367 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4016982.308 B/op
                 ·gc.churn.PS_Survivor_Space:      1.191 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1699.840 B/op
                 ·gc.count:                        280.000 counts
                 ·gc.time:                         290.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 750.175 ops/s
                 ·gc.alloc.rate:                   2827.579 MB/sec
                 ·gc.alloc.rate.norm:              4018289.152 B/op
                 ·gc.churn.PS_Eden_Space:          2827.378 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4018003.828 B/op
                 ·gc.churn.PS_Survivor_Space:      1.208 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1716.585 B/op
                 ·gc.count:                        287.000 counts
                 ·gc.time:                         287.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  758.406 ±(99.9%) 20.444 ops/s [Average]
  (min, avg, max) = (746.646, 758.406, 769.195), stdev = 10.693
  CI (99.9%): [737.962, 778.850] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2858.595 ±(99.9%) 77.023 MB/sec [Average]
  (min, avg, max) = (2814.287, 2858.595, 2899.123), stdev = 40.285
  CI (99.9%): [2781.572, 2935.619] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  4018288.539 ±(99.9%) 11.743 B/op [Average]
  (min, avg, max) = (4018280.020, 4018288.539, 4018296.021), stdev = 6.142
  CI (99.9%): [4018276.796, 4018300.282] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2859.901 ±(99.9%) 80.334 MB/sec [Average]
  (min, avg, max) = (2813.367, 2859.901, 2903.363), stdev = 42.016
  CI (99.9%): [2779.567, 2940.235] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  4020096.441 ±(99.9%) 9368.240 B/op [Average]
  (min, avg, max) = (4013755.543, 4020096.441, 4028030.777), stdev = 4899.770
  CI (99.9%): [4010728.201, 4029464.681] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  1.332 ±(99.9%) 0.272 MB/sec [Average]
  (min, avg, max) = (1.191, 1.332, 1.599), stdev = 0.142
  CI (99.9%): [1.059, 1.604] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  1871.074 ±(99.9%) 356.841 B/op [Average]
  (min, avg, max) = (1699.840, 1871.074, 2222.500), stdev = 186.635
  CI (99.9%): [1514.234, 2227.915] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  2299.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (264.000, 287.375, 305.000), stdev = 13.763
  CI (99.9%): [2299.000, 2299.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2274.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (276.000, 284.250, 290.000), stdev = 4.773
  CI (99.9%): [2274.000, 2274.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 33.2%  33.2% play.api.libs.json.jackson.JsValueDeserializer.deserialize
 15.1%  15.1% scala.collection.immutable.Vector.initFrom
 14.4%  14.4% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  6.1%   6.1% scala.collection.immutable.Vector.gotoPosWritable1
  5.2%   5.2% scala.collection.immutable.HashMap.$plus
  2.1%   2.1% scala.collection.immutable.Vector.$colon$plus
  2.1%   2.1% scala.Option.map
  1.6%   1.6% play.api.libs.json.jackson.KeyRead.addValue
  1.4%   1.4% play.api.libs.json.DefaultReads$$anon$26$$anonfun$reads$9.apply
  1.1%   1.1% scala.collection.AbstractTraversable.<init>
 17.8%  17.8% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = play-json, size = 1000)

# Run progress: 75.51% complete, ETA 01:06:57
# Fork: 1 of 2
# Warmup Iteration   1: 63.606 ops/s
# Warmup Iteration   2: 70.590 ops/s
Iteration   1: 70.364 ops/s
                 ·gc.alloc.rate:                   2555.083 MB/sec
                 ·gc.alloc.rate.norm:              38712088.220 B/op
                 ·gc.churn.PS_Eden_Space:          2527.595 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     38295624.762 B/op
                 ·gc.churn.PS_Survivor_Space:      1.376 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 20846.719 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         259.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 70.495 ops/s
                 ·gc.alloc.rate:                   2559.858 MB/sec
                 ·gc.alloc.rate.norm:              38712081.574 B/op
                 ·gc.churn.PS_Eden_Space:          2588.000 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     39137665.392 B/op
                 ·gc.churn.PS_Survivor_Space:      3.616 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 54690.799 B/op
                 ·gc.count:                        69.000 counts
                 ·gc.time:                         271.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 70.648 ops/s
                 ·gc.alloc.rate:                   2565.435 MB/sec
                 ·gc.alloc.rate.norm:              38712056.377 B/op
                 ·gc.churn.PS_Eden_Space:          2548.009 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     38449105.630 B/op
                 ·gc.churn.PS_Survivor_Space:      2.999 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 45256.936 B/op
                 ·gc.count:                        66.000 counts
                 ·gc.time:                         265.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 70.607 ops/s
                 ·gc.alloc.rate:                   2563.863 MB/sec
                 ·gc.alloc.rate.norm:              38712056.204 B/op
                 ·gc.churn.PS_Eden_Space:          2563.332 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     38704033.767 B/op
                 ·gc.churn.PS_Survivor_Space:      2.489 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 37577.272 B/op
                 ·gc.count:                        61.000 counts
                 ·gc.time:                         260.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 76.53% complete, ETA 01:04:08
# Fork: 2 of 2
# Warmup Iteration   1: 63.980 ops/s
# Warmup Iteration   2: 70.756 ops/s
Iteration   1: 70.120 ops/s
                 ·gc.alloc.rate:                   2548.361 MB/sec
                 ·gc.alloc.rate.norm:              38744088.205 B/op
                 ·gc.churn.PS_Eden_Space:          2535.406 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     38547128.943 B/op
                 ·gc.churn.PS_Survivor_Space:      2.360 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 35882.829 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         228.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 70.379 ops/s
                 ·gc.alloc.rate:                   2557.781 MB/sec
                 ·gc.alloc.rate.norm:              38744081.595 B/op
                 ·gc.churn.PS_Eden_Space:          2553.199 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     38674680.242 B/op
                 ·gc.churn.PS_Survivor_Space:      2.016 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 30533.818 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         253.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 70.167 ops/s
                 ·gc.alloc.rate:                   2549.997 MB/sec
                 ·gc.alloc.rate.norm:              38744056.205 B/op
                 ·gc.churn.PS_Eden_Space:          2543.769 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     38649435.897 B/op
                 ·gc.churn.PS_Survivor_Space:      2.859 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 43441.717 B/op
                 ·gc.count:                        61.000 counts
                 ·gc.time:                         266.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 70.242 ops/s
                 ·gc.alloc.rate:                   2552.713 MB/sec
                 ·gc.alloc.rate.norm:              38744056.205 B/op
                 ·gc.churn.PS_Eden_Space:          2571.674 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     39031848.805 B/op
                 ·gc.churn.PS_Survivor_Space:      2.728 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 41410.793 B/op
                 ·gc.count:                        71.000 counts
                 ·gc.time:                         279.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  70.378 ±(99.9%) 0.374 ops/s [Average]
  (min, avg, max) = (70.120, 70.378, 70.648), stdev = 0.196
  CI (99.9%): [70.003, 70.752] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2556.636 ±(99.9%) 11.912 MB/sec [Average]
  (min, avg, max) = (2548.361, 2556.636, 2565.435), stdev = 6.230
  CI (99.9%): [2544.724, 2568.548] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  38728070.573 ±(99.9%) 32703.771 B/op [Average]
  (min, avg, max) = (38712056.204, 38728070.573, 38744088.205), stdev = 17104.705
  CI (99.9%): [38695366.802, 38760774.344] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2553.873 ±(99.9%) 37.824 MB/sec [Average]
  (min, avg, max) = (2527.595, 2553.873, 2588.000), stdev = 19.783
  CI (99.9%): [2516.049, 2591.697] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  38686190.430 ±(99.9%) 537494.846 B/op [Average]
  (min, avg, max) = (38295624.762, 38686190.430, 39137665.392), stdev = 281120.198
  CI (99.9%): [38148695.583, 39223685.276] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  2.555 ±(99.9%) 1.287 MB/sec [Average]
  (min, avg, max) = (1.376, 2.555, 3.616), stdev = 0.673
  CI (99.9%): [1.269, 3.842] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  38705.110 ±(99.9%) 19433.397 B/op [Average]
  (min, avg, max) = (20846.719, 38705.110, 54690.799), stdev = 10164.042
  CI (99.9%): [19271.714, 58138.507] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  482.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (47.000, 60.250, 71.000), stdev = 8.430
  CI (99.9%): [482.000, 482.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2081.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (228.000, 260.125, 279.000), stdev = 15.198
  CI (99.9%): [2081.000, 2081.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 17.3%  17.3% scala.collection.immutable.Vector.initFrom
 11.2%  11.2% play.api.libs.json.jackson.JsValueDeserializer.deserialize
 10.8%  10.8% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  9.5%   9.5% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  6.4%   6.4% scala.collection.immutable.HashMap.$plus
  4.9%   4.9% scala.collection.immutable.Vector.gotoPosWritable1
  4.0%   4.0% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
  3.9%   3.9% scala.collection.AbstractIterable.<init>
  3.4%   3.4% play.api.libs.json.jackson.JsValueDeserializer$$anonfun$1.apply
  3.1%   3.1% scala.Option.map
 25.5%  25.5% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = play-json, size = 5000)

# Run progress: 77.55% complete, ETA 01:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 10.999 ops/s
# Warmup Iteration   2: 12.395 ops/s
Iteration   1: 12.387 ops/s
                 ·gc.alloc.rate:                   2298.904 MB/sec
                 ·gc.alloc.rate.norm:              197843873.161 B/op
                 ·gc.churn.PS_Eden_Space:          2259.143 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     194422057.290 B/op
                 ·gc.churn.PS_Survivor_Space:      3.304 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 284341.548 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         276.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 12.295 ops/s
                 ·gc.alloc.rate:                   2281.648 MB/sec
                 ·gc.alloc.rate.norm:              197843873.257 B/op
                 ·gc.churn.PS_Eden_Space:          2353.061 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     204036123.751 B/op
                 ·gc.churn.PS_Survivor_Space:      4.049 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 351123.469 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         337.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 12.360 ops/s
                 ·gc.alloc.rate:                   2293.797 MB/sec
                 ·gc.alloc.rate.norm:              197843943.547 B/op
                 ·gc.churn.PS_Eden_Space:          2218.321 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     191334030.146 B/op
                 ·gc.churn.PS_Survivor_Space:      3.615 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 311781.520 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         337.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 12.369 ops/s
                 ·gc.alloc.rate:                   2295.583 MB/sec
                 ·gc.alloc.rate.norm:              197843873.161 B/op
                 ·gc.churn.PS_Eden_Space:          2309.943 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     199081455.484 B/op
                 ·gc.churn.PS_Survivor_Space:      3.884 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 334726.839 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         279.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 78.57% complete, ETA 00:58:31
# Fork: 2 of 2
# Warmup Iteration   1: 10.828 ops/s
# Warmup Iteration   2: 12.223 ops/s
Iteration   1: 12.131 ops/s
                 ·gc.alloc.rate:                   2244.887 MB/sec
                 ·gc.alloc.rate.norm:              197286273.275 B/op
                 ·gc.churn.PS_Eden_Space:          2272.521 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     199714838.505 B/op
                 ·gc.churn.PS_Survivor_Space:      3.794 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 333441.275 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         371.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 12.234 ops/s
                 ·gc.alloc.rate:                   2264.052 MB/sec
                 ·gc.alloc.rate.norm:              197286273.174 B/op
                 ·gc.churn.PS_Eden_Space:          2293.906 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     199887649.391 B/op
                 ·gc.churn.PS_Survivor_Space:      2.865 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 249677.739 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         242.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 12.051 ops/s
                 ·gc.alloc.rate:                   2230.090 MB/sec
                 ·gc.alloc.rate.norm:              197286345.238 B/op
                 ·gc.churn.PS_Eden_Space:          2103.696 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     186104860.287 B/op
                 ·gc.churn.PS_Survivor_Space:      2.969 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 262686.807 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         335.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 12.234 ops/s
                 ·gc.alloc.rate:                   2264.076 MB/sec
                 ·gc.alloc.rate.norm:              197286273.261 B/op
                 ·gc.churn.PS_Eden_Space:          2329.164 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     202957868.522 B/op
                 ·gc.churn.PS_Survivor_Space:      3.487 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 303816.304 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         336.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  12.258 ±(99.9%) 0.230 ops/s [Average]
  (min, avg, max) = (12.051, 12.258, 12.387), stdev = 0.120
  CI (99.9%): [12.028, 12.487] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2271.630 ±(99.9%) 48.286 MB/sec [Average]
  (min, avg, max) = (2230.090, 2271.630, 2298.904), stdev = 25.255
  CI (99.9%): [2223.343, 2319.916] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  197565091.009 ±(99.9%) 569863.244 B/op [Average]
  (min, avg, max) = (197286273.174, 197565091.009, 197843943.547), stdev = 298049.496
  CI (99.9%): [196995227.765, 198134954.254] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2267.469 ±(99.9%) 149.796 MB/sec [Average]
  (min, avg, max) = (2103.696, 2267.469, 2353.061), stdev = 78.346
  CI (99.9%): [2117.673, 2417.265] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  197192360.422 ±(99.9%) 11701752.624 B/op [Average]
  (min, avg, max) = (186104860.287, 197192360.422, 204036123.751), stdev = 6120242.886
  CI (99.9%): [185490607.799, 208894113.046] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  3.496 ±(99.9%) 0.815 MB/sec [Average]
  (min, avg, max) = (2.865, 3.496, 4.049), stdev = 0.426
  CI (99.9%): [2.681, 4.311] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  303949.438 ±(99.9%) 69074.441 B/op [Average]
  (min, avg, max) = (249677.739, 303949.438, 351123.469), stdev = 36127.268
  CI (99.9%): [234874.996, 373023.879] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  118.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (13.000, 14.750, 16.000), stdev = 1.165
  CI (99.9%): [118.000, 118.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2513.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (242.000, 314.125, 371.000), stdev = 43.235
  CI (99.9%): [2513.000, 2513.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 42.9%  42.9% java.lang.String.intern
 14.6%  14.6% scala.collection.immutable.Vector.initFrom
  9.3%   9.3% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  5.8%   5.8% scala.collection.immutable.HashMap.$plus
  4.3%   4.3% scala.collection.immutable.Vector.gotoPosWritable1
  2.7%   2.7% play.api.libs.json.DefaultReads$$anon$26$$anonfun$reads$9.apply
  2.4%   2.4% scala.collection.AbstractIterable.<init>
  2.4%   2.4% scala.collection.immutable.Vector.$colon$plus
  2.2%   2.2% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  1.4%   1.4% scala.collection.mutable.MapBuilder.$plus$eq
 12.0%  12.0% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = play-json, size = 10000)

# Run progress: 79.59% complete, ETA 00:55:43
# Fork: 1 of 2
# Warmup Iteration   1: 5.281 ops/s
# Warmup Iteration   2: 6.018 ops/s
Iteration   1: 6.006 ops/s
                 ·gc.alloc.rate:                   2239.516 MB/sec
                 ·gc.alloc.rate.norm:              397458362.387 B/op
                 ·gc.churn.PS_Eden_Space:          2215.237 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     393149377.768 B/op
                 ·gc.churn.PS_Survivor_Space:      6.930 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1229976.221 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         422.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 6.003 ops/s
                 ·gc.alloc.rate:                   2238.101 MB/sec
                 ·gc.alloc.rate.norm:              397458362.740 B/op
                 ·gc.churn.PS_Eden_Space:          2212.532 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     392917648.265 B/op
                 ·gc.churn.PS_Survivor_Space:      8.536 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1515836.199 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         366.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 6.004 ops/s
                 ·gc.alloc.rate:                   2238.716 MB/sec
                 ·gc.alloc.rate.norm:              397458362.387 B/op
                 ·gc.churn.PS_Eden_Space:          2213.531 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     392987167.116 B/op
                 ·gc.churn.PS_Survivor_Space:      6.587 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1169509.569 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         434.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 6.020 ops/s
                 ·gc.alloc.rate:                   2244.332 MB/sec
                 ·gc.alloc.rate.norm:              397458362.387 B/op
                 ·gc.churn.PS_Eden_Space:          2217.662 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     392735161.282 B/op
                 ·gc.churn.PS_Survivor_Space:      6.806 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1205354.785 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         423.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 80.61% complete, ETA 00:52:56
# Fork: 2 of 2
# Warmup Iteration   1: 5.276 ops/s
# Warmup Iteration   2: 5.951 ops/s
Iteration   1: 5.952 ops/s
                 ·gc.alloc.rate:                   2219.251 MB/sec
                 ·gc.alloc.rate.norm:              397453154.592 B/op
                 ·gc.churn.PS_Eden_Space:          2218.227 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     397269712.804 B/op
                 ·gc.churn.PS_Survivor_Space:      7.068 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1265869.229 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         454.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 5.978 ops/s
                 ·gc.alloc.rate:                   2228.916 MB/sec
                 ·gc.alloc.rate.norm:              397453154.400 B/op
                 ·gc.churn.PS_Eden_Space:          2218.205 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     395543256.178 B/op
                 ·gc.churn.PS_Survivor_Space:      6.529 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1164173.778 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         420.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 5.962 ops/s
                 ·gc.alloc.rate:                   2222.824 MB/sec
                 ·gc.alloc.rate.norm:              397453154.413 B/op
                 ·gc.churn.PS_Eden_Space:          2223.649 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     397600687.911 B/op
                 ·gc.churn.PS_Survivor_Space:      6.292 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1125095.240 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         440.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 5.968 ops/s
                 ·gc.alloc.rate:                   2225.198 MB/sec
                 ·gc.alloc.rate.norm:              397453154.578 B/op
                 ·gc.churn.PS_Eden_Space:          2212.174 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     395126738.489 B/op
                 ·gc.churn.PS_Survivor_Space:      6.174 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1102824.800 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         445.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  5.987 ±(99.9%) 0.047 ops/s [Average]
  (min, avg, max) = (5.952, 5.987, 6.020), stdev = 0.025
  CI (99.9%): [5.940, 6.034] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2232.107 ±(99.9%) 17.602 MB/sec [Average]
  (min, avg, max) = (2219.251, 2232.107, 2244.332), stdev = 9.206
  CI (99.9%): [2214.504, 2249.709] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  397455758.485 ±(99.9%) 5322.522 B/op [Average]
  (min, avg, max) = (397453154.400, 397455758.485, 397458362.740), stdev = 2783.782
  CI (99.9%): [397450435.963, 397461081.008] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2216.402 ±(99.9%) 7.339 MB/sec [Average]
  (min, avg, max) = (2212.174, 2216.402, 2223.649), stdev = 3.839
  CI (99.9%): [2209.063, 2223.741] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  394666218.727 ±(99.9%) 3842823.252 B/op [Average]
  (min, avg, max) = (392735161.282, 394666218.727, 397600687.911), stdev = 2009870.865
  CI (99.9%): [390823395.475, 398509041.978] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  6.865 ±(99.9%) 1.415 MB/sec [Average]
  (min, avg, max) = (6.174, 6.865, 8.536), stdev = 0.740
  CI (99.9%): [5.450, 8.281] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  1222329.978 ±(99.9%) 248553.006 B/op [Average]
  (min, avg, max) = (1102824.800, 1222329.978, 1515836.199), stdev = 129998.028
  CI (99.9%): [973776.971, 1470882.984] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  104.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (13.000, 13.000, 13.000), stdev = 0.001
  CI (99.9%): [104.000, 104.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  3404.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (366.000, 425.500, 454.000), stdev = 26.897
  CI (99.9%): [3404.000, 3404.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 43.2%  43.2% java.lang.String.intern
 14.5%  14.5% scala.collection.immutable.Vector.initFrom
  9.3%   9.3% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  5.4%   5.4% scala.collection.immutable.HashMap.$plus
  4.2%   4.2% scala.collection.immutable.Vector.gotoPosWritable1
  2.9%   2.9% com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash
  2.4%   2.4% play.api.libs.json.DefaultReads$$anon$26$$anonfun$reads$9.apply
  2.3%   2.3% scala.collection.immutable.Vector.$colon$plus
  1.8%   1.8% play.api.libs.json.JsDefined.<init>
  1.5%   1.5% scala.collection.mutable.MapBuilder.$plus$eq
 12.3%  12.3% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = play-json, size = 50000)

# Run progress: 81.63% complete, ETA 00:50:08
# Fork: 1 of 2
# Warmup Iteration   1: 0.870 ops/s
# Warmup Iteration   2: 1.248 ops/s
Iteration   1: 1.265 ops/s
                 ·gc.alloc.rate:                   2366.956 MB/sec
                 ·gc.alloc.rate.norm:              1994049684.211 B/op
                 ·gc.churn.PS_Eden_Space:          2334.395 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1966618085.053 B/op
                 ·gc.churn.PS_Survivor_Space:      36.353 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 30626006.737 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         2859.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 1.284 ops/s
                 ·gc.alloc.rate:                   2402.545 MB/sec
                 ·gc.alloc.rate.norm:              1994049695.385 B/op
                 ·gc.churn.PS_Eden_Space:          2430.460 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2017218244.923 B/op
                 ·gc.churn.PS_Survivor_Space:      50.815 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 42174934.974 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         2557.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 1.267 ops/s
                 ·gc.alloc.rate:                   2371.322 MB/sec
                 ·gc.alloc.rate.norm:              1994049683.077 B/op
                 ·gc.churn.PS_Eden_Space:          2393.790 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2012943281.231 B/op
                 ·gc.churn.PS_Survivor_Space:      35.978 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 30254104.615 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         2961.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 1.270 ops/s
                 ·gc.alloc.rate:                   2376.647 MB/sec
                 ·gc.alloc.rate.norm:              1994049683.077 B/op
                 ·gc.churn.PS_Eden_Space:          2269.415 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1904079583.179 B/op
                 ·gc.churn.PS_Survivor_Space:      36.111 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 30297795.282 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         2827.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 82.65% complete, ETA 00:47:21
# Fork: 2 of 2
# Warmup Iteration   1: 0.875 ops/s
# Warmup Iteration   2: 1.267 ops/s
Iteration   1: 1.262 ops/s
                 ·gc.alloc.rate:                   2374.751 MB/sec
                 ·gc.alloc.rate.norm:              2004846467.897 B/op
                 ·gc.churn.PS_Eden_Space:          2418.386 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2041685018.256 B/op
                 ·gc.churn.PS_Survivor_Space:      31.931 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 26957141.333 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         3366.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 1.297 ops/s
                 ·gc.alloc.rate:                   2438.399 MB/sec
                 ·gc.alloc.rate.norm:              2004846478.564 B/op
                 ·gc.churn.PS_Eden_Space:          2345.207 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1928223717.744 B/op
                 ·gc.churn.PS_Survivor_Space:      45.961 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 37789064.205 B/op
                 ·gc.count:                        17.000 counts
                 ·gc.time:                         2636.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 1.289 ops/s
                 ·gc.alloc.rate:                   2424.434 MB/sec
                 ·gc.alloc.rate.norm:              2004846467.897 B/op
                 ·gc.churn.PS_Eden_Space:          2449.962 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2025956378.256 B/op
                 ·gc.churn.PS_Survivor_Space:      37.835 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 31286716.718 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         2876.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 1.277 ops/s
                 ·gc.alloc.rate:                   2401.417 MB/sec
                 ·gc.alloc.rate.norm:              2004846467.897 B/op
                 ·gc.churn.PS_Eden_Space:          2412.500 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     2014099403.487 B/op
                 ·gc.churn.PS_Survivor_Space:      38.218 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 31906788.923 B/op
                 ·gc.count:                        18.000 counts
                 ·gc.time:                         2908.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  1.276 ±(99.9%) 0.024 ops/s [Average]
  (min, avg, max) = (1.262, 1.276, 1.297), stdev = 0.012
  CI (99.9%): [1.253, 1.300] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2394.559 ±(99.9%) 50.794 MB/sec [Average]
  (min, avg, max) = (2366.956, 2394.559, 2438.399), stdev = 26.566
  CI (99.9%): [2343.765, 2445.353] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  1999448078.501 ±(99.9%) 11034245.720 B/op [Average]
  (min, avg, max) = (1994049683.077, 1999448078.501, 2004846478.564), stdev = 5771123.869
  CI (99.9%): [1988413832.781, 2010482324.220] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2381.764 ±(99.9%) 115.751 MB/sec [Average]
  (min, avg, max) = (2269.415, 2381.764, 2449.962), stdev = 60.540
  CI (99.9%): [2266.014, 2497.515] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  1988852964.016 ±(99.9%) 95727120.371 B/op [Average]
  (min, avg, max) = (1904079583.179, 1988852964.016, 2041685018.256), stdev = 50067134.927
  CI (99.9%): [1893125843.645, 2084580084.387] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  39.150 ±(99.9%) 11.748 MB/sec [Average]
  (min, avg, max) = (31.931, 39.150, 50.815), stdev = 6.145
  CI (99.9%): [27.402, 50.898] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  32661569.099 ±(99.9%) 9347823.403 B/op [Average]
  (min, avg, max) = (26957141.333, 32661569.099, 42174934.974), stdev = 4889092.389
  CI (99.9%): [23313745.696, 42009392.501] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  141.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (17.000, 17.625, 18.000), stdev = 0.518
  CI (99.9%): [141.000, 141.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  22990.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2557.000, 2873.750, 3366.000), stdev = 242.121
  CI (99.9%): [22990.000, 22990.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 16.2%  16.2% scala.collection.immutable.Vector.initFrom
 13.0%  13.0% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
 10.7%  10.7% java.lang.String.intern
  8.7%   8.7% play.api.libs.json.jackson.JsValueDeserializer.deserialize
  7.2%   7.2% com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken
  7.0%   7.0% scala.collection.immutable.HashMap.$plus
  5.4%   5.4% scala.Option.map
  5.1%   5.1% scala.collection.immutable.Vector.gotoPosWritable1
  2.3%   2.3% play.api.libs.json.DefaultReads$$anon$26$$anonfun$reads$9.apply
  2.3%   2.3% scala.collection.immutable.Vector.$colon$plus
 22.3%  22.3% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = play-json, size = 100000)

# Run progress: 83.67% complete, ETA 00:44:35
# Fork: 1 of 2
# Warmup Iteration   1: 0.368 ops/s
# Warmup Iteration   2: 0.539 ops/s
Iteration   1: 0.565 ops/s
                 ·gc.alloc.rate:                   2129.688 MB/sec
                 ·gc.alloc.rate.norm:              4017101361.412 B/op
                 ·gc.churn.PS_Eden_Space:          2128.442 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4014750780.235 B/op
                 ·gc.churn.PS_Survivor_Space:      136.416 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 257313609.412 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         7095.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.567 ops/s
                 ·gc.alloc.rate:                   2135.185 MB/sec
                 ·gc.alloc.rate.norm:              4017101363.294 B/op
                 ·gc.churn.PS_Eden_Space:          2123.969 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3995999774.118 B/op
                 ·gc.churn.PS_Survivor_Space:      137.813 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 259278724.706 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         7044.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.555 ops/s
                 ·gc.alloc.rate:                   2093.517 MB/sec
                 ·gc.alloc.rate.norm:              4017101361.412 B/op
                 ·gc.churn.PS_Eden_Space:          2092.517 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4015182546.824 B/op
                 ·gc.churn.PS_Survivor_Space:      124.912 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 239684427.294 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         7660.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.554 ops/s
                 ·gc.alloc.rate:                   2088.708 MB/sec
                 ·gc.alloc.rate.norm:              4017101363.294 B/op
                 ·gc.churn.PS_Eden_Space:          2151.003 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4136909884.235 B/op
                 ·gc.churn.PS_Survivor_Space:      121.031 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 232772306.824 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         7601.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 84.69% complete, ETA 00:41:48
# Fork: 2 of 2
# Warmup Iteration   1: 0.370 ops/s
# Warmup Iteration   2: 0.528 ops/s
Iteration   1: 0.564 ops/s
                 ·gc.alloc.rate:                   2108.674 MB/sec
                 ·gc.alloc.rate.norm:              3988299467.294 B/op
                 ·gc.churn.PS_Eden_Space:          2074.100 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3922907858.824 B/op
                 ·gc.churn.PS_Survivor_Space:      112.554 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 212882130.824 B/op
                 ·gc.count:                        22.000 counts
                 ·gc.time:                         7376.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.559 ops/s
                 ·gc.alloc.rate:                   2092.240 MB/sec
                 ·gc.alloc.rate.norm:              3988299467.294 B/op
                 ·gc.churn.PS_Eden_Space:          2165.784 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4128490435.765 B/op
                 ·gc.churn.PS_Survivor_Space:      121.725 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 232035990.588 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         7496.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.559 ops/s
                 ·gc.alloc.rate:                   2091.899 MB/sec
                 ·gc.alloc.rate.norm:              3988299467.294 B/op
                 ·gc.churn.PS_Eden_Space:          2068.406 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3943509293.176 B/op
                 ·gc.churn.PS_Survivor_Space:      107.827 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 205576794.353 B/op
                 ·gc.count:                        22.000 counts
                 ·gc.time:                         7539.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.576 ops/s
                 ·gc.alloc.rate:                   2155.066 MB/sec
                 ·gc.alloc.rate.norm:              3988299484.444 B/op
                 ·gc.churn.PS_Eden_Space:          2175.756 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4026590094.222 B/op
                 ·gc.churn.PS_Survivor_Space:      138.357 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 256052791.111 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         7068.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  0.562 ±(99.9%) 0.013 ops/s [Average]
  (min, avg, max) = (0.554, 0.562, 0.576), stdev = 0.007
  CI (99.9%): [0.549, 0.576] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  2111.872 ±(99.9%) 47.907 MB/sec [Average]
  (min, avg, max) = (2088.708, 2111.872, 2155.066), stdev = 25.056
  CI (99.9%): [2063.965, 2159.779] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  4002700416.967 ±(99.9%) 29435351.882 B/op [Average]
  (min, avg, max) = (3988299467.294, 4002700416.967, 4017101363.294), stdev = 15395258.194
  CI (99.9%): [3973265065.086, 4032135768.849] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  2122.497 ±(99.9%) 78.258 MB/sec [Average]
  (min, avg, max) = (2068.406, 2122.497, 2175.756), stdev = 40.931
  CI (99.9%): [2044.239, 2200.755] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  4023042583.425 ±(99.9%) 146882850.147 B/op [Average]
  (min, avg, max) = (3922907858.824, 4023042583.425, 4136909884.235), stdev = 76822570.743
  CI (99.9%): [3876159733.278, 4169925433.572] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  125.079 ±(99.9%) 22.264 MB/sec [Average]
  (min, avg, max) = (107.827, 125.079, 138.357), stdev = 11.645
  CI (99.9%): [102.815, 147.344] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  236949596.889 ±(99.9%) 38854470.764 B/op [Average]
  (min, avg, max) = (205576794.353, 236949596.889, 259278724.706), stdev = 20321639.497
  CI (99.9%): [198095126.125, 275804067.653] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  183.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (22.000, 22.875, 24.000), stdev = 0.641
  CI (99.9%): [183.000, 183.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  58879.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (7044.000, 7359.875, 7660.000), stdev = 254.732
  CI (99.9%): [58879.000, 58879.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 16.9%  16.9% play.api.libs.json.jackson.JsValueDeserializer.deserialize
 15.3%  15.3% scala.collection.immutable.Vector.initFrom
 11.7%  11.7% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  6.7%   6.7% scala.collection.immutable.HashMap.$plus
  6.0%   6.0% scala.Option.map
  5.7%   5.7% scala.collection.immutable.Vector.gotoPosWritable1
  5.6%   5.6% java.lang.String.intern
  2.1%   2.1% play.api.libs.json.DefaultReads$$anon$26$$anonfun$reads$9.apply
  2.0%   2.0% scala.collection.immutable.Vector.$colon$plus
  1.9%   1.9% com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName
 26.0%  26.0% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = spray-json, size = 10)

# Run progress: 85.71% complete, ETA 00:39:02
# Fork: 1 of 2
# Warmup Iteration   1: 10917.505 ops/s
# Warmup Iteration   2: 10973.971 ops/s
Iteration   1: 11013.793 ops/s
                 ·gc.alloc.rate:                   1609.668 MB/sec
                 ·gc.alloc.rate.norm:              155816.002 B/op
                 ·gc.churn.PS_Eden_Space:          1610.732 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     155918.937 B/op
                 ·gc.churn.PS_Survivor_Space:      0.153 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 14.777 B/op
                 ·gc.count:                        343.000 counts
                 ·gc.time:                         246.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 10977.299 ops/s
                 ·gc.alloc.rate:                   1604.431 MB/sec
                 ·gc.alloc.rate.norm:              155816.001 B/op
                 ·gc.churn.PS_Eden_Space:          1606.393 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     156006.577 B/op
                 ·gc.churn.PS_Survivor_Space:      0.171 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 16.617 B/op
                 ·gc.count:                        408.000 counts
                 ·gc.time:                         263.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 10997.531 ops/s
                 ·gc.alloc.rate:                   1607.349 MB/sec
                 ·gc.alloc.rate.norm:              155816.001 B/op
                 ·gc.churn.PS_Eden_Space:          1608.773 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     155954.100 B/op
                 ·gc.churn.PS_Survivor_Space:      0.177 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 17.182 B/op
                 ·gc.count:                        416.000 counts
                 ·gc.time:                         276.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 10967.277 ops/s
                 ·gc.alloc.rate:                   1602.934 MB/sec
                 ·gc.alloc.rate.norm:              155816.001 B/op
                 ·gc.churn.PS_Eden_Space:          1605.330 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     156048.908 B/op
                 ·gc.churn.PS_Survivor_Space:      0.186 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 18.126 B/op
                 ·gc.count:                        411.000 counts
                 ·gc.time:                         273.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 86.73% complete, ETA 00:36:14
# Fork: 2 of 2
# Warmup Iteration   1: 10733.135 ops/s
# Warmup Iteration   2: 10805.006 ops/s
Iteration   1: 10799.610 ops/s
                 ·gc.alloc.rate:                   1578.458 MB/sec
                 ·gc.alloc.rate.norm:              155816.001 B/op
                 ·gc.churn.PS_Eden_Space:          1581.054 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     156072.251 B/op
                 ·gc.churn.PS_Survivor_Space:      0.174 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 17.194 B/op
                 ·gc.count:                        419.000 counts
                 ·gc.time:                         275.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 10828.569 ops/s
                 ·gc.alloc.rate:                   1582.694 MB/sec
                 ·gc.alloc.rate.norm:              155816.001 B/op
                 ·gc.churn.PS_Eden_Space:          1582.587 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     155805.504 B/op
                 ·gc.churn.PS_Survivor_Space:      0.193 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 18.963 B/op
                 ·gc.count:                        424.000 counts
                 ·gc.time:                         280.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 10826.582 ops/s
                 ·gc.alloc.rate:                   1582.338 MB/sec
                 ·gc.alloc.rate.norm:              155816.001 B/op
                 ·gc.churn.PS_Eden_Space:          1583.997 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     155979.388 B/op
                 ·gc.churn.PS_Survivor_Space:      0.180 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 17.756 B/op
                 ·gc.count:                        426.000 counts
                 ·gc.time:                         280.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 10845.882 ops/s
                 ·gc.alloc.rate:                   1585.203 MB/sec
                 ·gc.alloc.rate.norm:              155816.001 B/op
                 ·gc.churn.PS_Eden_Space:          1587.229 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     156015.076 B/op
                 ·gc.churn.PS_Survivor_Space:      0.133 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 13.092 B/op
                 ·gc.count:                        326.000 counts
                 ·gc.time:                         242.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  10907.068 ±(99.9%) 171.108 ops/s [Average]
  (min, avg, max) = (10799.610, 10907.068, 11013.793), stdev = 89.493
  CI (99.9%): [10735.960, 11078.175] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1594.134 ±(99.9%) 24.981 MB/sec [Average]
  (min, avg, max) = (1578.458, 1594.134, 1609.668), stdev = 13.065
  CI (99.9%): [1569.154, 1619.115] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  155816.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (155816.001, 155816.001, 155816.002), stdev = 0.001
  CI (99.9%): [155816.001, 155816.002] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1595.762 ±(99.9%) 25.024 MB/sec [Average]
  (min, avg, max) = (1581.054, 1595.762, 1610.732), stdev = 13.088
  CI (99.9%): [1570.738, 1620.786] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  155975.093 ±(99.9%) 161.351 B/op [Average]
  (min, avg, max) = (155805.504, 155975.093, 156072.251), stdev = 84.390
  CI (99.9%): [155813.742, 156136.443] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  0.171 ±(99.9%) 0.037 MB/sec [Average]
  (min, avg, max) = (0.133, 0.171, 0.193), stdev = 0.019
  CI (99.9%): [0.134, 0.208] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  16.713 ±(99.9%) 3.647 B/op [Average]
  (min, avg, max) = (13.092, 16.713, 18.963), stdev = 1.907
  CI (99.9%): [13.066, 20.360] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  3173.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (326.000, 396.625, 426.000), stdev = 39.075
  CI (99.9%): [3173.000, 3173.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2135.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (242.000, 266.875, 280.000), stdev = 15.123
  CI (99.9%): [2135.000, 2135.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 27.3%  27.3% java.math.BigDecimal.<init>
 10.2%  10.2% spray.json.JsonParser.string
 10.1%  10.1% spray.json.JsonParser.values$1
  8.8%   8.8% scala.collection.immutable.HashMap.$plus
  8.0%   8.0% spray.json.JsonParser.zeroOrMoreDigits
  7.1%   7.1% scala.collection.TraversableLike$$anonfun$map$1.apply
  6.2%   6.2% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  4.2%   4.2% spray.json.JsonParser.members$1
  3.0%   3.0% java.lang.String.hashCode
  2.8%   2.8% spray.json.JsValue.convertTo
 12.3%  12.3% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = spray-json, size = 100)

# Run progress: 87.76% complete, ETA 00:33:26
# Fork: 1 of 2
# Warmup Iteration   1: 1165.470 ops/s
# Warmup Iteration   2: 1171.324 ops/s
Iteration   1: 1170.816 ops/s
                 ·gc.alloc.rate:                   1411.674 MB/sec
                 ·gc.alloc.rate.norm:              1285385.777 B/op
                 ·gc.churn.PS_Eden_Space:          1415.031 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1288442.424 B/op
                 ·gc.churn.PS_Survivor_Space:      1.510 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1375.090 B/op
                 ·gc.count:                        322.000 counts
                 ·gc.time:                         277.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 1173.200 ops/s
                 ·gc.alloc.rate:                   1414.554 MB/sec
                 ·gc.alloc.rate.norm:              1285388.613 B/op
                 ·gc.churn.PS_Eden_Space:          1416.161 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1286849.451 B/op
                 ·gc.churn.PS_Survivor_Space:      1.570 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1426.274 B/op
                 ·gc.count:                        320.000 counts
                 ·gc.time:                         276.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 1173.763 ops/s
                 ·gc.alloc.rate:                   1415.192 MB/sec
                 ·gc.alloc.rate.norm:              1285376.012 B/op
                 ·gc.churn.PS_Eden_Space:          1412.262 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1282714.497 B/op
                 ·gc.churn.PS_Survivor_Space:      1.725 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1567.028 B/op
                 ·gc.count:                        352.000 counts
                 ·gc.time:                         276.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 1171.858 ops/s
                 ·gc.alloc.rate:                   1412.887 MB/sec
                 ·gc.alloc.rate.norm:              1285376.012 B/op
                 ·gc.churn.PS_Eden_Space:          1416.018 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1288224.095 B/op
                 ·gc.churn.PS_Survivor_Space:      1.723 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1567.704 B/op
                 ·gc.count:                        372.000 counts
                 ·gc.time:                         291.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 88.78% complete, ETA 00:30:39
# Fork: 2 of 2
# Warmup Iteration   1: 1263.615 ops/s
# Warmup Iteration   2: 1267.477 ops/s
Iteration   1: 1271.338 ops/s
                 ·gc.alloc.rate:                   1532.880 MB/sec
                 ·gc.alloc.rate.norm:              1285387.524 B/op
                 ·gc.churn.PS_Eden_Space:          1533.723 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1286093.954 B/op
                 ·gc.churn.PS_Survivor_Space:      1.555 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1304.156 B/op
                 ·gc.count:                        333.000 counts
                 ·gc.time:                         268.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 1268.859 ops/s
                 ·gc.alloc.rate:                   1529.882 MB/sec
                 ·gc.alloc.rate.norm:              1285384.761 B/op
                 ·gc.churn.PS_Eden_Space:          1533.365 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1288311.107 B/op
                 ·gc.churn.PS_Survivor_Space:      1.755 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1474.586 B/op
                 ·gc.count:                        382.000 counts
                 ·gc.time:                         290.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 1269.438 ops/s
                 ·gc.alloc.rate:                   1530.525 MB/sec
                 ·gc.alloc.rate.norm:              1285376.011 B/op
                 ·gc.churn.PS_Eden_Space:          1530.327 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1285210.442 B/op
                 ·gc.churn.PS_Survivor_Space:      1.681 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1411.939 B/op
                 ·gc.count:                        349.000 counts
                 ·gc.time:                         277.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 1268.767 ops/s
                 ·gc.alloc.rate:                   1529.764 MB/sec
                 ·gc.alloc.rate.norm:              1285376.011 B/op
                 ·gc.churn.PS_Eden_Space:          1533.731 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1288709.372 B/op
                 ·gc.churn.PS_Survivor_Space:      1.709 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1435.924 B/op
                 ·gc.count:                        372.000 counts
                 ·gc.time:                         291.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  1221.005 ±(99.9%) 99.354 ops/s [Average]
  (min, avg, max) = (1170.816, 1221.005, 1271.338), stdev = 51.964
  CI (99.9%): [1121.651, 1320.359] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1472.170 ±(99.9%) 119.794 MB/sec [Average]
  (min, avg, max) = (1411.674, 1472.170, 1532.880), stdev = 62.654
  CI (99.9%): [1352.376, 1591.963] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  1285381.340 ±(99.9%) 11.104 B/op [Average]
  (min, avg, max) = (1285376.011, 1285381.340, 1285388.613), stdev = 5.807
  CI (99.9%): [1285370.237, 1285392.444] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1473.827 ±(99.9%) 120.551 MB/sec [Average]
  (min, avg, max) = (1412.262, 1473.827, 1533.731), stdev = 63.050
  CI (99.9%): [1353.276, 1594.378] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  1286819.418 ±(99.9%) 3982.545 B/op [Average]
  (min, avg, max) = (1282714.497, 1286819.418, 1288709.372), stdev = 2082.948
  CI (99.9%): [1282836.873, 1290801.963] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  1.654 ±(99.9%) 0.179 MB/sec [Average]
  (min, avg, max) = (1.510, 1.654, 1.755), stdev = 0.094
  CI (99.9%): [1.475, 1.833] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  1445.338 ±(99.9%) 172.641 B/op [Average]
  (min, avg, max) = (1304.156, 1445.338, 1567.704), stdev = 90.295
  CI (99.9%): [1272.697, 1617.979] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  2802.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (320.000, 350.250, 382.000), stdev = 23.813
  CI (99.9%): [2802.000, 2802.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2246.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (268.000, 280.750, 291.000), stdev = 8.714
  CI (99.9%): [2246.000, 2246.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 22.6%  22.6% java.math.BigDecimal.<init>
 10.5%  10.5% spray.json.JsonParser.string
 10.3%  10.3% scala.collection.immutable.HashMap.$plus
  9.6%   9.6% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  8.0%   8.0% spray.json.JsonParser.values$1
  7.8%   7.9% spray.json.JsonParser.zeroOrMoreDigits
  6.7%   6.7% scala.collection.TraversableLike$$anonfun$map$1.apply
  5.2%   5.2% spray.json.JsonParser.members$1
  3.1%   3.1% java.lang.String.hashCode
  2.7%   2.7% spray.json.JsValue.convertTo
 13.4%  13.4% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = spray-json, size = 1000)

# Run progress: 89.80% complete, ETA 00:27:51
# Fork: 1 of 2
# Warmup Iteration   1: 109.148 ops/s
# Warmup Iteration   2: 110.487 ops/s
Iteration   1: 109.840 ops/s
                 ·gc.alloc.rate:                   1292.652 MB/sec
                 ·gc.alloc.rate.norm:              12546084.973 B/op
                 ·gc.churn.PS_Eden_Space:          1308.935 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     12704121.786 B/op
                 ·gc.churn.PS_Survivor_Space:      3.624 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 35173.903 B/op
                 ·gc.count:                        79.000 counts
                 ·gc.time:                         235.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 110.011 ops/s
                 ·gc.alloc.rate:                   1294.677 MB/sec
                 ·gc.alloc.rate.norm:              12546080.141 B/op
                 ·gc.churn.PS_Eden_Space:          1286.759 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     12469350.679 B/op
                 ·gc.churn.PS_Survivor_Space:      4.196 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 40659.718 B/op
                 ·gc.count:                        98.000 counts
                 ·gc.time:                         243.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 108.942 ops/s
                 ·gc.alloc.rate:                   1282.070 MB/sec
                 ·gc.alloc.rate.norm:              12546080.132 B/op
                 ·gc.churn.PS_Eden_Space:          1294.242 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     12665187.847 B/op
                 ·gc.churn.PS_Survivor_Space:      4.297 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 42050.095 B/op
                 ·gc.count:                        94.000 counts
                 ·gc.time:                         244.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 109.717 ops/s
                 ·gc.alloc.rate:                   1291.151 MB/sec
                 ·gc.alloc.rate.norm:              12546080.131 B/op
                 ·gc.churn.PS_Eden_Space:          1293.105 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     12565074.741 B/op
                 ·gc.churn.PS_Survivor_Space:      4.477 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 43498.226 B/op
                 ·gc.count:                        103.000 counts
                 ·gc.time:                         262.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 90.82% complete, ETA 00:25:03
# Fork: 2 of 2
# Warmup Iteration   1: 101.929 ops/s
# Warmup Iteration   2: 103.970 ops/s
Iteration   1: 102.831 ops/s
                 ·gc.alloc.rate:                   1212.479 MB/sec
                 ·gc.alloc.rate.norm:              12570110.735 B/op
                 ·gc.churn.PS_Eden_Space:          1213.173 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     12577303.733 B/op
                 ·gc.churn.PS_Survivor_Space:      3.887 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 40298.798 B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         271.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 103.340 ops/s
                 ·gc.alloc.rate:                   1218.464 MB/sec
                 ·gc.alloc.rate.norm:              12570104.139 B/op
                 ·gc.churn.PS_Eden_Space:          1218.853 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     12574120.328 B/op
                 ·gc.churn.PS_Survivor_Space:      3.313 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 34173.400 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         213.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 103.158 ops/s
                 ·gc.alloc.rate:                   1216.320 MB/sec
                 ·gc.alloc.rate.norm:              12570104.140 B/op
                 ·gc.churn.PS_Eden_Space:          1218.756 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     12595278.082 B/op
                 ·gc.churn.PS_Survivor_Space:      4.740 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 48987.895 B/op
                 ·gc.count:                        95.000 counts
                 ·gc.time:                         253.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 103.144 ops/s
                 ·gc.alloc.rate:                   1216.167 MB/sec
                 ·gc.alloc.rate.norm:              12570104.150 B/op
                 ·gc.churn.PS_Eden_Space:          1218.127 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     12590365.529 B/op
                 ·gc.churn.PS_Survivor_Space:      4.642 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 47982.092 B/op
                 ·gc.count:                        107.000 counts
                 ·gc.time:                         258.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  106.373 ±(99.9%) 6.684 ops/s [Average]
  (min, avg, max) = (102.831, 106.373, 110.011), stdev = 3.496
  CI (99.9%): [99.689, 113.057] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1252.997 ±(99.9%) 76.296 MB/sec [Average]
  (min, avg, max) = (1212.479, 1252.997, 1294.677), stdev = 39.905
  CI (99.9%): [1176.701, 1329.294] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  12558093.568 ±(99.9%) 24552.834 B/op [Average]
  (min, avg, max) = (12546080.131, 12558093.568, 12570110.735), stdev = 12841.607
  CI (99.9%): [12533540.733, 12582646.402] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1256.494 ±(99.9%) 81.186 MB/sec [Average]
  (min, avg, max) = (1213.173, 1256.494, 1308.935), stdev = 42.462
  CI (99.9%): [1175.308, 1337.680] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  12592600.341 ±(99.9%) 133724.626 B/op [Average]
  (min, avg, max) = (12469350.679, 12592600.341, 12704121.786), stdev = 69940.565
  CI (99.9%): [12458875.715, 12726324.966] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  4.147 ±(99.9%) 0.961 MB/sec [Average]
  (min, avg, max) = (3.313, 4.147, 4.740), stdev = 0.503
  CI (99.9%): [3.186, 5.108] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  41603.016 ±(99.9%) 10172.413 B/op [Average]
  (min, avg, max) = (34173.400, 41603.016, 48987.895), stdev = 5320.369
  CI (99.9%): [31430.603, 51775.429] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  752.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (79.000, 94.000, 107.000), stdev = 9.366
  CI (99.9%): [752.000, 752.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  1979.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (213.000, 247.375, 271.000), stdev = 18.055
  CI (99.9%): [1979.000, 1979.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 19.7%  19.7% java.math.BigDecimal.<init>
 11.2%  11.2% scala.collection.TraversableLike$$anonfun$map$1.apply
 10.9%  10.9% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  9.3%   9.3% spray.json.JsonParser.string
  8.9%   8.9% scala.collection.immutable.HashMap.$plus
  6.6%   6.6% spray.json.JsonParser.zeroOrMoreDigits
  4.0%   4.0% spray.json.JsonParser.values$1
  3.8%   3.8% spray.json.JsValue.convertTo
  3.4%   3.4% spray.json.JsNumber$.apply
  3.4%   3.4% spray.json.JsonParser.members$1
 18.8%  18.8% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = spray-json, size = 5000)

# Run progress: 91.84% complete, ETA 00:22:16
# Fork: 1 of 2
# Warmup Iteration   1: 19.304 ops/s
# Warmup Iteration   2: 22.505 ops/s
Iteration   1: 22.370 ops/s
                 ·gc.alloc.rate:                   1324.227 MB/sec
                 ·gc.alloc.rate.norm:              63106592.643 B/op
                 ·gc.churn.PS_Eden_Space:          1277.697 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     60889185.524 B/op
                 ·gc.churn.PS_Survivor_Space:      2.639 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 125756.952 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         117.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 22.393 ops/s
                 ·gc.alloc.rate:                   1325.545 MB/sec
                 ·gc.alloc.rate.norm:              63106592.690 B/op
                 ·gc.churn.PS_Eden_Space:          1345.568 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     64059879.619 B/op
                 ·gc.churn.PS_Survivor_Space:      5.953 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 283404.190 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         236.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 22.343 ops/s
                 ·gc.alloc.rate:                   1322.580 MB/sec
                 ·gc.alloc.rate.norm:              63106592.692 B/op
                 ·gc.churn.PS_Eden_Space:          1355.892 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     64696045.306 B/op
                 ·gc.churn.PS_Survivor_Space:      6.086 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 290370.385 B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         290.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 22.397 ops/s
                 ·gc.alloc.rate:                   1325.727 MB/sec
                 ·gc.alloc.rate.norm:              63106592.643 B/op
                 ·gc.churn.PS_Eden_Space:          1281.488 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     61000752.762 B/op
                 ·gc.churn.PS_Survivor_Space:      5.098 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 242688.000 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         256.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 92.86% complete, ETA 00:19:29
# Fork: 2 of 2
# Warmup Iteration   1: 19.355 ops/s
# Warmup Iteration   2: 22.247 ops/s
Iteration   1: 22.369 ops/s
                 ·gc.alloc.rate:                   1324.195 MB/sec
                 ·gc.alloc.rate.norm:              63106592.917 B/op
                 ·gc.churn.PS_Eden_Space:          1307.019 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     62288067.048 B/op
                 ·gc.churn.PS_Survivor_Space:      4.111 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 195925.333 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         150.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 22.292 ops/s
                 ·gc.alloc.rate:                   1319.619 MB/sec
                 ·gc.alloc.rate.norm:              63106592.694 B/op
                 ·gc.churn.PS_Eden_Space:          1339.169 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     64041504.909 B/op
                 ·gc.churn.PS_Survivor_Space:      6.762 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 323369.710 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         245.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 22.327 ops/s
                 ·gc.alloc.rate:                   1321.639 MB/sec
                 ·gc.alloc.rate.norm:              63106592.693 B/op
                 ·gc.churn.PS_Eden_Space:          1296.968 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     61928585.552 B/op
                 ·gc.churn.PS_Survivor_Space:      5.692 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 271778.770 B/op
                 ·gc.count:                        26.000 counts
                 ·gc.time:                         257.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 22.332 ops/s
                 ·gc.alloc.rate:                   1321.963 MB/sec
                 ·gc.alloc.rate.norm:              63106592.693 B/op
                 ·gc.churn.PS_Eden_Space:          1332.824 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     63625087.618 B/op
                 ·gc.churn.PS_Survivor_Space:      5.250 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 250601.839 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         227.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  22.353 ±(99.9%) 0.068 ops/s [Average]
  (min, avg, max) = (22.292, 22.353, 22.397), stdev = 0.036
  CI (99.9%): [22.284, 22.421] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1323.187 ±(99.9%) 4.030 MB/sec [Average]
  (min, avg, max) = (1319.619, 1323.187, 1325.727), stdev = 2.108
  CI (99.9%): [1319.157, 1327.217] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  63106592.708 ±(99.9%) 0.167 B/op [Average]
  (min, avg, max) = (63106592.643, 63106592.708, 63106592.917), stdev = 0.087
  CI (99.9%): [63106592.541, 63106592.875] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1317.078 ±(99.9%) 57.710 MB/sec [Average]
  (min, avg, max) = (1277.697, 1317.078, 1355.892), stdev = 30.184
  CI (99.9%): [1259.368, 1374.788] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  62816138.542 ±(99.9%) 2827825.997 B/op [Average]
  (min, avg, max) = (60889185.524, 62816138.542, 64696045.306), stdev = 1479007.675
  CI (99.9%): [59988312.545, 65643964.539] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  5.199 ±(99.9%) 2.481 MB/sec [Average]
  (min, avg, max) = (2.639, 5.199, 6.762), stdev = 1.298
  CI (99.9%): [2.717, 7.680] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  247986.897 ±(99.9%) 118711.619 B/op [Average]
  (min, avg, max) = (125756.952, 247986.897, 323369.710), stdev = 62088.472
  CI (99.9%): [129275.279, 366698.516] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  161.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (10.000, 20.125, 29.000), stdev = 6.707
  CI (99.9%): [161.000, 161.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  1778.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (117.000, 222.250, 290.000), stdev = 58.509
  CI (99.9%): [1778.000, 1778.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 20.7%  20.7% java.math.BigDecimal.<init>
 14.4%  14.4% spray.json.JsValue.convertTo
  9.5%   9.5% scala.collection.immutable.HashMap.$plus
  8.2%   8.2% spray.json.JsonParser.string
  7.1%   7.1% spray.json.JsonParser.zeroOrMoreDigits
  5.8%   5.8% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  4.9%   4.9% spray.json.JsonParser.members$1
  4.0%   4.0% spray.json.JsonParser.value
  3.9%   3.9% spray.json.JsonParser.values$1
  2.8%   2.8% java.lang.String.hashCode
 18.6%  18.6% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = spray-json, size = 10000)

# Run progress: 93.88% complete, ETA 00:16:42
# Fork: 1 of 2
# Warmup Iteration   1: 9.098 ops/s
# Warmup Iteration   2: 9.730 ops/s
Iteration   1: 10.152 ops/s
                 ·gc.alloc.rate:                   1207.833 MB/sec
                 ·gc.alloc.rate.norm:              126827393.521 B/op
                 ·gc.churn.PS_Eden_Space:          1152.816 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     121050363.803 B/op
                 ·gc.churn.PS_Survivor_Space:      4.310 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 452520.708 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         208.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 10.145 ops/s
                 ·gc.alloc.rate:                   1206.990 MB/sec
                 ·gc.alloc.rate.norm:              126827393.416 B/op
                 ·gc.churn.PS_Eden_Space:          1300.895 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     136694773.928 B/op
                 ·gc.churn.PS_Survivor_Space:      5.956 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 625815.082 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         271.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 10.114 ops/s
                 ·gc.alloc.rate:                   1203.283 MB/sec
                 ·gc.alloc.rate.norm:              126827393.526 B/op
                 ·gc.churn.PS_Eden_Space:          1175.420 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     123890634.105 B/op
                 ·gc.churn.PS_Survivor_Space:      5.775 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 608687.158 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         293.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 9.827 ops/s
                 ·gc.alloc.rate:                   1169.150 MB/sec
                 ·gc.alloc.rate.norm:              126827393.464 B/op
                 ·gc.churn.PS_Eden_Space:          1178.379 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     127828523.390 B/op
                 ·gc.churn.PS_Survivor_Space:      2.391 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 259367.051 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         334.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 94.90% complete, ETA 00:13:54
# Fork: 2 of 2
# Warmup Iteration   1: 9.372 ops/s
# Warmup Iteration   2: 10.576 ops/s
Iteration   1: 10.741 ops/s
                 ·gc.alloc.rate:                   1277.902 MB/sec
                 ·gc.alloc.rate.norm:              126827393.536 B/op
                 ·gc.churn.PS_Eden_Space:          1379.205 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     136881370.749 B/op
                 ·gc.churn.PS_Survivor_Space:      3.335 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 331027.814 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         211.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 10.769 ops/s
                 ·gc.alloc.rate:                   1281.256 MB/sec
                 ·gc.alloc.rate.norm:              126827393.333 B/op
                 ·gc.churn.PS_Eden_Space:          1306.024 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     129279064.494 B/op
                 ·gc.churn.PS_Survivor_Space:      7.285 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 721098.272 B/op
                 ·gc.count:                        15.000 counts
                 ·gc.time:                         223.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 10.744 ops/s
                 ·gc.alloc.rate:                   1278.151 MB/sec
                 ·gc.alloc.rate.norm:              126827393.437 B/op
                 ·gc.churn.PS_Eden_Space:          1199.223 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     118995520.991 B/op
                 ·gc.churn.PS_Survivor_Space:      5.119 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 507954.724 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         329.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 10.801 ops/s
                 ·gc.alloc.rate:                   1284.923 MB/sec
                 ·gc.alloc.rate.norm:              126827393.329 B/op
                 ·gc.churn.PS_Eden_Space:          1333.140 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     131586608.837 B/op
                 ·gc.churn.PS_Survivor_Space:      7.255 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 716056.418 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         222.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  10.412 ±(99.9%) 0.746 ops/s [Average]
  (min, avg, max) = (9.827, 10.412, 10.801), stdev = 0.390
  CI (99.9%): [9.666, 11.158] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1238.686 ±(99.9%) 88.774 MB/sec [Average]
  (min, avg, max) = (1169.150, 1238.686, 1284.923), stdev = 46.431
  CI (99.9%): [1149.912, 1327.461] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  126827393.445 ±(99.9%) 0.158 B/op [Average]
  (min, avg, max) = (126827393.329, 126827393.445, 126827393.536), stdev = 0.083
  CI (99.9%): [126827393.287, 126827393.603] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1253.138 ±(99.9%) 164.746 MB/sec [Average]
  (min, avg, max) = (1152.816, 1253.138, 1379.205), stdev = 86.165
  CI (99.9%): [1088.392, 1417.884] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  128275857.537 ±(99.9%) 12819061.109 B/op [Average]
  (min, avg, max) = (118995520.991, 128275857.537, 136881370.749), stdev = 6704616.828
  CI (99.9%): [115456796.428, 141094918.646] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  5.178 ±(99.9%) 3.361 MB/sec [Average]
  (min, avg, max) = (2.391, 5.178, 7.285), stdev = 1.758
  CI (99.9%): [1.817, 8.539] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  527815.903 ±(99.9%) 327828.076 B/op [Average]
  (min, avg, max) = (259367.051, 527815.903, 721098.272), stdev = 171460.423
  CI (99.9%): [199987.828, 855643.979] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  91.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (7.000, 11.375, 15.000), stdev = 2.875
  CI (99.9%): [91.000, 91.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  2091.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (208.000, 261.375, 334.000), stdev = 52.576
  CI (99.9%): [2091.000, 2091.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 19.4%  19.4% java.math.BigDecimal.<init>
 13.7%  13.7% spray.json.JsValue.convertTo
  9.1%   9.1% scala.collection.immutable.HashMap.$plus
  8.4%   8.4% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  7.9%   7.9% spray.json.JsonParser.zeroOrMoreDigits
  7.2%   7.2% spray.json.JsonParser.string
  4.3%   4.3% scala.collection.MapLike$class.contains
  4.0%   4.0% spray.json.JsonParser.members$1
  3.7%   3.7% spray.json.JsonParser.value
  3.0%   3.0% spray.json.JsonParser.values$1
 19.3%  19.3% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = spray-json, size = 50000)

# Run progress: 95.92% complete, ETA 00:11:07
# Fork: 1 of 2
# Warmup Iteration   1: 1.720 ops/s
# Warmup Iteration   2: 1.993 ops/s
Iteration   1: 2.056 ops/s
                 ·gc.alloc.rate:                   1221.048 MB/sec
                 ·gc.alloc.rate.norm:              633146999.484 B/op
                 ·gc.churn.PS_Eden_Space:          1264.588 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     655723619.097 B/op
                 ·gc.churn.PS_Survivor_Space:      19.773 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 10252684.387 B/op
                 ·gc.count:                        16.000 counts
                 ·gc.time:                         1276.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 2.040 ops/s
                 ·gc.alloc.rate:                   1212.075 MB/sec
                 ·gc.alloc.rate.norm:              633146998.968 B/op
                 ·gc.churn.PS_Eden_Space:          1146.687 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     598990583.742 B/op
                 ·gc.churn.PS_Survivor_Space:      33.640 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 17572632.774 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         1540.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2.061 ops/s
                 ·gc.alloc.rate:                   1224.252 MB/sec
                 ·gc.alloc.rate.norm:              633146999.484 B/op
                 ·gc.churn.PS_Eden_Space:          1236.594 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     639529884.903 B/op
                 ·gc.churn.PS_Survivor_Space:      29.309 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 15157842.581 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         1250.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2.033 ops/s
                 ·gc.alloc.rate:                   1207.991 MB/sec
                 ·gc.alloc.rate.norm:              633146998.968 B/op
                 ·gc.churn.PS_Eden_Space:          1267.619 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     664399739.871 B/op
                 ·gc.churn.PS_Survivor_Space:      22.995 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 12052281.806 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         1636.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 96.94% complete, ETA 00:08:20
# Fork: 2 of 2
# Warmup Iteration   1: 1.647 ops/s
# Warmup Iteration   2: 1.876 ops/s
Iteration   1: 1.991 ops/s
                 ·gc.alloc.rate:                   1182.756 MB/sec
                 ·gc.alloc.rate.norm:              633146999.607 B/op
                 ·gc.churn.PS_Eden_Space:          1240.997 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     664324465.311 B/op
                 ·gc.churn.PS_Survivor_Space:      38.738 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 20736772.197 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         1644.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 1.993 ops/s
                 ·gc.alloc.rate:                   1183.870 MB/sec
                 ·gc.alloc.rate.norm:              633146999.733 B/op
                 ·gc.churn.PS_Eden_Space:          1186.224 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     634405956.267 B/op
                 ·gc.churn.PS_Survivor_Space:      30.119 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 16108202.667 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         1581.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 2.016 ops/s
                 ·gc.alloc.rate:                   1197.225 MB/sec
                 ·gc.alloc.rate.norm:              633146999.082 B/op
                 ·gc.churn.PS_Eden_Space:          1091.317 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     577137949.377 B/op
                 ·gc.churn.PS_Survivor_Space:      20.981 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 11095459.672 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         1227.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 2.038 ops/s
                 ·gc.alloc.rate:                   1210.532 MB/sec
                 ·gc.alloc.rate.norm:              633146998.968 B/op
                 ·gc.churn.PS_Eden_Space:          1196.818 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     625974503.226 B/op
                 ·gc.churn.PS_Survivor_Space:      15.849 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 8289775.484 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         988.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  2.029 ±(99.9%) 0.051 ops/s [Average]
  (min, avg, max) = (1.991, 2.029, 2.061), stdev = 0.026
  CI (99.9%): [1.978, 2.079] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1204.969 ±(99.9%) 29.966 MB/sec [Average]
  (min, avg, max) = (1182.756, 1204.969, 1224.252), stdev = 15.673
  CI (99.9%): [1175.002, 1234.935] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  633146999.287 ±(99.9%) 0.616 B/op [Average]
  (min, avg, max) = (633146998.968, 633146999.287, 633146999.733), stdev = 0.322
  CI (99.9%): [633146998.671, 633146999.903] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1203.855 ±(99.9%) 117.638 MB/sec [Average]
  (min, avg, max) = (1091.317, 1203.855, 1267.619), stdev = 61.527
  CI (99.9%): [1086.217, 1321.494] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  632560837.724 ±(99.9%) 59824481.305 B/op [Average]
  (min, avg, max) = (577137949.377, 632560837.724, 664399739.871), stdev = 31289360.484
  CI (99.9%): [572736356.419, 692385319.029] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  26.425 ±(99.9%) 14.865 MB/sec [Average]
  (min, avg, max) = (15.849, 26.425, 38.738), stdev = 7.775
  CI (99.9%): [11.560, 41.291] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  13908206.446 ±(99.9%) 8006344.602 B/op [Average]
  (min, avg, max) = (8289775.484, 13908206.446, 20736772.197), stdev = 4187473.037
  CI (99.9%): [5901861.844, 21914551.048] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  95.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (9.000, 11.875, 16.000), stdev = 2.416
  CI (99.9%): [95.000, 95.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  11142.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (988.000, 1392.750, 1644.000), stdev = 240.452
  CI (99.9%): [11142.000, 11142.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 20.3%  20.4% java.math.BigDecimal.<init>
 11.1%  11.1% scala.collection.TraversableLike$$anonfun$map$1.apply
 10.0%  10.0% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  8.7%   8.7% scala.collection.immutable.HashMap.$plus
  7.8%   7.8% spray.json.JsonParser.string
  6.2%   6.2% spray.json.JsonParser.zeroOrMoreDigits
  5.2%   5.2% scala.collection.immutable.HashMap$HashTrieMap.get0
  4.4%   4.4% spray.json.JsonParser.members$1
  3.9%   3.9% spray.json.JsValue.convertTo
  3.5%   3.5% spray.json.JsonParser.values$1
 18.9%  18.9% <other>



# JMH 1.18 (released 188 days ago, please consider updating!)
# VM version: JDK 1.8.0_121, VM 25.121-b13
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx16G
# Warmup: 2 iterations, 20 s each
# Measurement: 4 iterations, 30 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: json.bench.JmhReaderBench.bench
# Parameters: (processorName = spray-json, size = 100000)

# Run progress: 97.96% complete, ETA 00:05:33
# Fork: 1 of 2
# Warmup Iteration   1: 0.746 ops/s
# Warmup Iteration   2: 0.812 ops/s
Iteration   1: 0.886 ops/s
                 ·gc.alloc.rate:                   1053.993 MB/sec
                 ·gc.alloc.rate.norm:              1268563185.185 B/op
                 ·gc.churn.PS_Eden_Space:          1007.173 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1212212110.222 B/op
                 ·gc.churn.PS_Old_Gen:             16.304 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        19622870.815 B/op
                 ·gc.churn.PS_Survivor_Space:      70.213 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 84506244.741 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         4675.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.938 ops/s
                 ·gc.alloc.rate:                   1116.203 MB/sec
                 ·gc.alloc.rate.norm:              1268563184.000 B/op
                 ·gc.churn.PS_Eden_Space:          1169.999 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1329702841.379 B/op
                 ·gc.churn.PS_Survivor_Space:      61.373 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 69750642.759 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         3262.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.965 ops/s
                 ·gc.alloc.rate:                   1148.610 MB/sec
                 ·gc.alloc.rate.norm:              1268563185.103 B/op
                 ·gc.churn.PS_Eden_Space:          1094.817 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1209152759.172 B/op
                 ·gc.churn.PS_Survivor_Space:      79.071 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 87328979.862 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         2484.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.969 ops/s
                 ·gc.alloc.rate:                   1153.550 MB/sec
                 ·gc.alloc.rate.norm:              1268563182.400 B/op
                 ·gc.churn.PS_Eden_Space:          1228.181 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1350635793.067 B/op
                 ·gc.churn.PS_Survivor_Space:      64.400 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 70820386.133 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         2370.000 ms
                 ·stack:                           <delayed till summary>


# Run progress: 98.98% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 0.745 ops/s
# Warmup Iteration   2: 0.848 ops/s
Iteration   1: 0.844 ops/s
                 ·gc.alloc.rate:                   1002.673 MB/sec
                 ·gc.alloc.rate.norm:              1266163161.846 B/op
                 ·gc.churn.PS_Eden_Space:          1015.538 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1282408448.000 B/op
                 ·gc.churn.PS_Old_Gen:             2.412 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        3045827.077 B/op
                 ·gc.churn.PS_Survivor_Space:      69.142 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 87311596.308 B/op
                 ·gc.count:                        14.000 counts
                 ·gc.time:                         6371.000 ms
                 ·stack:                           <delayed till summary>

Iteration   2: 0.953 ops/s
                 ·gc.alloc.rate:                   1132.475 MB/sec
                 ·gc.alloc.rate.norm:              1266163158.897 B/op
                 ·gc.churn.PS_Eden_Space:          1107.842 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1238621360.552 B/op
                 ·gc.churn.PS_Survivor_Space:      70.542 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 78869186.207 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         3248.000 ms
                 ·stack:                           <delayed till summary>

Iteration   3: 0.980 ops/s
                 ·gc.alloc.rate:                   1163.790 MB/sec
                 ·gc.alloc.rate.norm:              1266163160.533 B/op
                 ·gc.churn.PS_Eden_Space:          1182.625 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1286655180.800 B/op
                 ·gc.churn.PS_Survivor_Space:      88.043 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 95787417.600 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         2501.000 ms
                 ·stack:                           <delayed till summary>

Iteration   4: 0.994 ops/s
                 ·gc.alloc.rate:                   1181.007 MB/sec
                 ·gc.alloc.rate.norm:              1266163158.400 B/op
                 ·gc.churn.PS_Eden_Space:          1151.120 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1234121523.200 B/op
                 ·gc.churn.PS_Survivor_Space:      67.152 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 71993480.533 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         2115.000 ms
                 ·stack:                           <delayed till summary>



Result "json.bench.JmhReaderBench.bench":
  0.941 ±(99.9%) 0.098 ops/s [Average]
  (min, avg, max) = (0.844, 0.941, 0.994), stdev = 0.051
  CI (99.9%): [0.843, 1.039] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate":
  1119.038 ±(99.9%) 116.231 MB/sec [Average]
  (min, avg, max) = (1002.673, 1119.038, 1181.007), stdev = 60.791
  CI (99.9%): [1002.807, 1235.268] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.alloc.rate.norm":
  1267363172.046 ±(99.9%) 2452809.747 B/op [Average]
  (min, avg, max) = (1266163158.400, 1267363172.046, 1268563185.185), stdev = 1282866.925
  CI (99.9%): [1264910362.299, 1269815981.793] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space":
  1119.662 ±(99.9%) 150.752 MB/sec [Average]
  (min, avg, max) = (1007.173, 1119.662, 1228.181), stdev = 78.846
  CI (99.9%): [968.910, 1270.414] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm":
  1267938752.049 ±(99.9%) 101629674.784 B/op [Average]
  (min, avg, max) = (1209152759.172, 1267938752.049, 1350635793.067), stdev = 53154285.016
  CI (99.9%): [1166309077.265, 1369568426.833] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Old_Gen":
  2.339 ±(99.9%) 10.908 MB/sec [Average]
  (min, avg, max) = (≈ 0, 2.339, 16.304), stdev = 5.705
  CI (99.9%): [≈ 0, 13.248] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Old_Gen.norm":
  2833587.236 ±(99.9%) 13129743.831 B/op [Average]
  (min, avg, max) = (≈ 0, 2833587.236, 19622870.815), stdev = 6867109.899
  CI (99.9%): [≈ 0, 15963331.067] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space":
  71.242 ±(99.9%) 16.327 MB/sec [Average]
  (min, avg, max) = (61.373, 71.242, 88.043), stdev = 8.540
  CI (99.9%): [54.914, 87.569] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm":
  80795991.768 ±(99.9%) 18085984.447 B/op [Average]
  (min, avg, max) = (69750642.759, 80795991.768, 95787417.600), stdev = 9459319.575
  CI (99.9%): [62710007.321, 98881976.215] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.count":
  98.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (11.000, 12.250, 14.000), stdev = 1.035
  CI (99.9%): [98.000, 98.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·gc.time":
  27026.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (2115.000, 3378.250, 6371.000), stdev = 1456.523
  CI (99.9%): [27026.000, 27026.000] (assumes normal distribution)

Secondary result "json.bench.JmhReaderBench.bench:·stack":
Stack profiler:

....[Thread state distributions]....................................................................
100.0%         RUNNABLE

....[Thread state: RUNNABLE]........................................................................
 19.7%  19.7% java.math.BigDecimal.<init>
 11.1%  11.1% scala.collection.generic.Growable$$anonfun$$plus$plus$eq$1.apply
  9.1%   9.1% scala.collection.immutable.HashMap.$plus
  8.9%   8.9% spray.json.JsonParser.string
  8.2%   8.2% spray.json.JsValue.convertTo
  6.8%   6.8% scala.collection.TraversableLike$$anonfun$map$1.apply
  6.3%   6.3% spray.json.JsonParser.zeroOrMoreDigits
  4.9%   5.0% scala.collection.immutable.HashMap$HashTrieMap.get0
  3.5%   3.5% spray.json.JsonParser.values$1
  3.4%   3.4% spray.json.JsonParser.members$1
 18.0%  18.0% <other>



# Run complete. Total time: 04:32:51

Benchmark                                              (processorName)  (size)   Mode  Cnt            Score            Error   Units
JmhReaderBench.bench                                    tethys-jackson      10  thrpt    8        21371.442 ±        109.762   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     tethys-jackson      10  thrpt    8         1263.226 ±          6.505  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                tethys-jackson      10  thrpt    8        63016.001 ±          0.001    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            tethys-jackson      10  thrpt    8         1264.425 ±          7.042  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       tethys-jackson      10  thrpt    8        63075.803 ±        131.898    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        tethys-jackson      10  thrpt    8            0.086 ±          0.022  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   tethys-jackson      10  thrpt    8            4.294 ±          1.085    B/op
JmhReaderBench.bench:·gc.count                          tethys-jackson      10  thrpt    8         3368.000                   counts
JmhReaderBench.bench:·gc.time                           tethys-jackson      10  thrpt    8         2215.000                       ms
JmhReaderBench.bench:·stack                             tethys-jackson      10  thrpt                   NaN                      ---
JmhReaderBench.bench                                    tethys-jackson     100  thrpt    8         2413.596 ±         65.293   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     tethys-jackson     100  thrpt    8         1172.669 ±         31.749  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                tethys-jackson     100  thrpt    8       517984.744 ±          2.632    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            tethys-jackson     100  thrpt    8         1173.854 ±         31.643  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       tethys-jackson     100  thrpt    8       518509.022 ±        859.131    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        tethys-jackson     100  thrpt    8            0.252 ±          0.029  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   tethys-jackson     100  thrpt    8          111.399 ±         13.193    B/op
JmhReaderBench.bench:·gc.count                          tethys-jackson     100  thrpt    8         2992.000                   counts
JmhReaderBench.bench:·gc.time                           tethys-jackson     100  thrpt    8         2067.000                       ms
JmhReaderBench.bench:·stack                             tethys-jackson     100  thrpt                   NaN                      ---
JmhReaderBench.bench                                    tethys-jackson    1000  thrpt    8          236.134 ±          2.190   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     tethys-jackson    1000  thrpt    8         1106.832 ±         10.237  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                tethys-jackson    1000  thrpt    8      4997144.064 ±          0.005    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            tethys-jackson    1000  thrpt    8         1109.249 ±         13.388  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       tethys-jackson    1000  thrpt    8      5008072.309 ±      46224.003    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        tethys-jackson    1000  thrpt    8            2.009 ±          0.763  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   tethys-jackson    1000  thrpt    8         9064.926 ±       3409.462    B/op
JmhReaderBench.bench:·gc.count                          tethys-jackson    1000  thrpt    8         1833.000                   counts
JmhReaderBench.bench:·gc.time                           tethys-jackson    1000  thrpt    8         2078.000                       ms
JmhReaderBench.bench:·stack                             tethys-jackson    1000  thrpt                   NaN                      ---
JmhReaderBench.bench                                    tethys-jackson    5000  thrpt    8           40.265 ±          1.193   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     tethys-jackson    5000  thrpt    8         1028.311 ±         30.344  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                tethys-jackson    5000  thrpt    8     27226904.178 ±       1865.559    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            tethys-jackson    5000  thrpt    8         1030.466 ±         49.658  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       tethys-jackson    5000  thrpt    8     27284188.303 ±    1074197.126    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        tethys-jackson    5000  thrpt    8            1.817 ±          0.481  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   tethys-jackson    5000  thrpt    8        48145.620 ±      13265.365    B/op
JmhReaderBench.bench:·gc.count                          tethys-jackson    5000  thrpt    8          279.000                   counts
JmhReaderBench.bench:·gc.time                           tethys-jackson    5000  thrpt    8         2013.000                       ms
JmhReaderBench.bench:·stack                             tethys-jackson    5000  thrpt                   NaN                      ---
JmhReaderBench.bench                                    tethys-jackson   10000  thrpt    8           19.741 ±          0.815   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     tethys-jackson   10000  thrpt    8         1013.098 ±         41.830  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                tethys-jackson   10000  thrpt    8     54710304.886 ±        419.746    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            tethys-jackson   10000  thrpt    8         1018.596 ±         66.733  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       tethys-jackson   10000  thrpt    8     55003566.091 ±    2509648.386    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        tethys-jackson   10000  thrpt    8            2.136 ±          2.499  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   tethys-jackson   10000  thrpt    8       115493.134 ±     134195.977    B/op
JmhReaderBench.bench:·gc.count                          tethys-jackson   10000  thrpt    8          167.000                   counts
JmhReaderBench.bench:·gc.time                           tethys-jackson   10000  thrpt    8         1206.000                       ms
JmhReaderBench.bench:·stack                             tethys-jackson   10000  thrpt                   NaN                      ---
JmhReaderBench.bench                                    tethys-jackson   50000  thrpt    8            4.630 ±          0.106   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     tethys-jackson   50000  thrpt    8         1220.976 ±         33.125  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                tethys-jackson   50000  thrpt    8    281090123.183 ±    1232818.765    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            tethys-jackson   50000  thrpt    8         1214.342 ±         40.924  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       tethys-jackson   50000  thrpt    8    279570217.691 ±    6975182.534    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        tethys-jackson   50000  thrpt    8           11.890 ±          8.568  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   tethys-jackson   50000  thrpt    8      2737994.564 ±    1976369.594    B/op
JmhReaderBench.bench:·gc.count                          tethys-jackson   50000  thrpt    8          180.000                   counts
JmhReaderBench.bench:·gc.time                           tethys-jackson   50000  thrpt    8         5420.000                       ms
JmhReaderBench.bench:·stack                             tethys-jackson   50000  thrpt                   NaN                      ---
JmhReaderBench.bench                                    tethys-jackson  100000  thrpt    8            2.327 ±          0.069   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     tethys-jackson  100000  thrpt    8         1235.383 ±         36.832  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                tethys-jackson  100000  thrpt    8    565834770.434 ±       1594.240    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            tethys-jackson  100000  thrpt    8         1230.937 ±         77.458  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       tethys-jackson  100000  thrpt    8    563770399.694 ±   29067497.940    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        tethys-jackson  100000  thrpt    8           13.504 ±         13.374  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   tethys-jackson  100000  thrpt    8      6197406.024 ±    6177519.770    B/op
JmhReaderBench.bench:·gc.count                          tethys-jackson  100000  thrpt    8          114.000                   counts
JmhReaderBench.bench:·gc.time                           tethys-jackson  100000  thrpt    8         6094.000                       ms
JmhReaderBench.bench:·stack                             tethys-jackson  100000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        circe-jawn      10  thrpt    8        13157.975 ±         63.108   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         circe-jawn      10  thrpt    8         2641.474 ±         12.679  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    circe-jawn      10  thrpt    8       214016.001 ±          0.001    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                circe-jawn      10  thrpt    8         2643.725 ±         10.011  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           circe-jawn      10  thrpt    8       214198.669 ±        464.826    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            circe-jawn      10  thrpt    8            0.080 ±          0.019  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       circe-jawn      10  thrpt    8            6.455 ±          1.582    B/op
JmhReaderBench.bench:·gc.count                              circe-jawn      10  thrpt    8         3209.000                   counts
JmhReaderBench.bench:·gc.time                               circe-jawn      10  thrpt    8         2168.000                       ms
JmhReaderBench.bench:·stack                                 circe-jawn      10  thrpt                   NaN                      ---
JmhReaderBench.bench                                        circe-jawn     100  thrpt    8         1590.345 ±         10.696   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         circe-jawn     100  thrpt    8         2607.991 ±         17.531  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    circe-jawn     100  thrpt    8      1748256.027 ±         16.007    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                circe-jawn     100  thrpt    8         2608.418 ±         20.807  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           circe-jawn     100  thrpt    8      1748539.837 ±       4338.248    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            circe-jawn     100  thrpt    8            1.094 ±          0.278  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       circe-jawn     100  thrpt    8          733.556 ±        185.771    B/op
JmhReaderBench.bench:·gc.count                              circe-jawn     100  thrpt    8         2347.000                   counts
JmhReaderBench.bench:·gc.time                               circe-jawn     100  thrpt    8         2099.000                       ms
JmhReaderBench.bench:·stack                                 circe-jawn     100  thrpt                   NaN                      ---
JmhReaderBench.bench                                        circe-jawn    1000  thrpt    8          151.732 ±          2.556   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         circe-jawn    1000  thrpt    8         2401.839 ±         42.905  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    circe-jawn    1000  thrpt    8     16875462.107 ±      17463.677    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                circe-jawn    1000  thrpt    8         2408.408 ±         49.994  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           circe-jawn    1000  thrpt    8     16921604.492 ±     175890.661    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            circe-jawn    1000  thrpt    8            1.814 ±          0.246  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       circe-jawn    1000  thrpt    8        12747.503 ±       1679.922    B/op
JmhReaderBench.bench:·gc.count                              circe-jawn    1000  thrpt    8          430.000                   counts
JmhReaderBench.bench:·gc.time                               circe-jawn    1000  thrpt    8         2153.000                       ms
JmhReaderBench.bench:·stack                                 circe-jawn    1000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        circe-jawn    5000  thrpt    8           29.696 ±          0.675   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         circe-jawn    5000  thrpt    8         2342.567 ±         32.920  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    circe-jawn    5000  thrpt    8     84102704.507 ±    1341133.779    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                circe-jawn    5000  thrpt    8         2355.968 ±         78.617  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           circe-jawn    5000  thrpt    8     84585057.994 ±    3034362.488    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            circe-jawn    5000  thrpt    8            3.654 ±          1.444  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       circe-jawn    5000  thrpt    8       131031.828 ±      50598.828    B/op
JmhReaderBench.bench:·gc.count                              circe-jawn    5000  thrpt    8          164.000                   counts
JmhReaderBench.bench:·gc.time                               circe-jawn    5000  thrpt    8         2049.000                       ms
JmhReaderBench.bench:·stack                                 circe-jawn    5000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        circe-jawn   10000  thrpt    8           14.637 ±          0.421   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         circe-jawn   10000  thrpt    8         2354.165 ±         69.945  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    circe-jawn   10000  thrpt    8    171460281.029 ±     163518.950    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                circe-jawn   10000  thrpt    8         2369.850 ±        150.887  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           circe-jawn   10000  thrpt    8    172624700.804 ±   11246327.785    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            circe-jawn   10000  thrpt    8            5.521 ±          1.435  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       circe-jawn   10000  thrpt    8       402163.239 ±     106068.836    B/op
JmhReaderBench.bench:·gc.count                              circe-jawn   10000  thrpt    8          110.000                   counts
JmhReaderBench.bench:·gc.time                               circe-jawn   10000  thrpt    8         2847.000                       ms
JmhReaderBench.bench:·stack                                 circe-jawn   10000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        circe-jawn   50000  thrpt    8            2.808 ±          0.121   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         circe-jawn   50000  thrpt    8         2246.236 ±         96.215  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    circe-jawn   50000  thrpt    8    852697213.250 ±     817595.136    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                circe-jawn   50000  thrpt    8         2251.980 ±        141.818  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           circe-jawn   50000  thrpt    8    854924872.080 ±   43473730.871    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            circe-jawn   50000  thrpt    8           36.418 ±          9.642  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       circe-jawn   50000  thrpt    8     13795663.995 ±    3191049.537    B/op
JmhReaderBench.bench:·gc.count                              circe-jawn   50000  thrpt    8          124.000                   counts
JmhReaderBench.bench:·gc.time                               circe-jawn   50000  thrpt    8        14685.000                       ms
JmhReaderBench.bench:·stack                                 circe-jawn   50000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        circe-jawn  100000  thrpt    8            1.319 ±          0.029   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         circe-jawn  100000  thrpt    8         2111.558 ±         47.112  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    circe-jawn  100000  thrpt    8   1705941979.466 ±          0.624    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                circe-jawn  100000  thrpt    8         2132.308 ±         91.845  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           circe-jawn  100000  thrpt    8   1723039681.497 ±   94040308.021    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            circe-jawn  100000  thrpt    8           74.544 ±         13.079  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       circe-jawn  100000  thrpt    8     60179260.998 ±    9452977.004    B/op
JmhReaderBench.bench:·gc.count                              circe-jawn  100000  thrpt    8          142.000                   counts
JmhReaderBench.bench:·gc.time                               circe-jawn  100000  thrpt    8        29810.000                       ms
JmhReaderBench.bench:·stack                                 circe-jawn  100000  thrpt                   NaN                      ---
JmhReaderBench.bench                                      pure-jackson      10  thrpt    8        25561.755 ±        120.059   ops/s
JmhReaderBench.bench:·gc.alloc.rate                       pure-jackson      10  thrpt    8         1317.196 ±          4.283  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                  pure-jackson      10  thrpt    8        54936.001 ±         98.111    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space              pure-jackson      10  thrpt    8         1319.479 ±          3.857  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm         pure-jackson      10  thrpt    8        55031.249 ±        153.296    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space          pure-jackson      10  thrpt    8            0.121 ±          0.024  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm     pure-jackson      10  thrpt    8            5.047 ±          0.983    B/op
JmhReaderBench.bench:·gc.count                            pure-jackson      10  thrpt    8         3206.000                   counts
JmhReaderBench.bench:·gc.time                             pure-jackson      10  thrpt    8         2079.000                       ms
JmhReaderBench.bench:·stack                               pure-jackson      10  thrpt                   NaN                      ---
JmhReaderBench.bench                                      pure-jackson     100  thrpt    8         2708.732 ±          9.582   ops/s
JmhReaderBench.bench:·gc.alloc.rate                       pure-jackson     100  thrpt    8          974.577 ±         11.046  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                  pure-jackson     100  thrpt    8       383563.843 ±       3213.162    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space              pure-jackson     100  thrpt    8          976.054 ±         10.746  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm         pure-jackson     100  thrpt    8       384145.661 ±       3340.132    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space          pure-jackson     100  thrpt    8            0.600 ±          0.082  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm     pure-jackson     100  thrpt    8          236.212 ±         32.872    B/op
JmhReaderBench.bench:·gc.count                            pure-jackson     100  thrpt    8         2991.000                   counts
JmhReaderBench.bench:·gc.time                             pure-jackson     100  thrpt    8         2042.000                       ms
JmhReaderBench.bench:·stack                               pure-jackson     100  thrpt                   NaN                      ---
JmhReaderBench.bench                                      pure-jackson    1000  thrpt    8          271.331 ±          5.237   ops/s
JmhReaderBench.bench:·gc.alloc.rate                       pure-jackson    1000  thrpt    8          909.190 ±         17.334  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                  pure-jackson    1000  thrpt    8      3572300.055 ±        907.530    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space              pure-jackson    1000  thrpt    8          910.971 ±         18.936  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm         pure-jackson    1000  thrpt    8      3579280.581 ±      19662.379    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space          pure-jackson    1000  thrpt    8            2.689 ±          0.489  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm     pure-jackson    1000  thrpt    8        10568.900 ±       1969.912    B/op
JmhReaderBench.bench:·gc.count                            pure-jackson    1000  thrpt    8         1445.000                   counts
JmhReaderBench.bench:·gc.time                             pure-jackson    1000  thrpt    8         2099.000                       ms
JmhReaderBench.bench:·stack                               pure-jackson    1000  thrpt                   NaN                      ---
JmhReaderBench.bench                                      pure-jackson    5000  thrpt    8           51.135 ±          0.246   ops/s
JmhReaderBench.bench:·gc.alloc.rate                       pure-jackson    5000  thrpt    8          851.314 ±          4.098  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                  pure-jackson    5000  thrpt    8     17748532.330 ±        907.520    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space              pure-jackson    5000  thrpt    8          853.493 ±         29.032  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm         pure-jackson    5000  thrpt    8     17793899.389 ±     588963.799    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space          pure-jackson    5000  thrpt    8            2.953 ±          1.125  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm     pure-jackson    5000  thrpt    8        61577.381 ±      23535.238    B/op
JmhReaderBench.bench:·gc.count                            pure-jackson    5000  thrpt    8          327.000                   counts
JmhReaderBench.bench:·gc.time                             pure-jackson    5000  thrpt    8         1919.000                       ms
JmhReaderBench.bench:·stack                               pure-jackson    5000  thrpt                   NaN                      ---
JmhReaderBench.bench                                      pure-jackson   10000  thrpt    8           24.019 ±          0.231   ops/s
JmhReaderBench.bench:·gc.alloc.rate                       pure-jackson   10000  thrpt    8          803.463 ±          7.744  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                  pure-jackson   10000  thrpt    8     35661510.529 ±       2281.375    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space              pure-jackson   10000  thrpt    8          813.782 ±         68.207  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm         pure-jackson   10000  thrpt    8     36116715.449 ±    2864208.670    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space          pure-jackson   10000  thrpt    8            1.687 ±          2.110  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm     pure-jackson   10000  thrpt    8        74985.827 ±      94155.618    B/op
JmhReaderBench.bench:·gc.count                            pure-jackson   10000  thrpt    8           92.000                   counts
JmhReaderBench.bench:·gc.time                             pure-jackson   10000  thrpt    8         1083.000                       ms
JmhReaderBench.bench:·stack                               pure-jackson   10000  thrpt                   NaN                      ---
JmhReaderBench.bench                                      pure-jackson   50000  thrpt    8            5.397 ±          0.181   ops/s
JmhReaderBench.bench:·gc.alloc.rate                       pure-jackson   50000  thrpt    8          939.875 ±         37.281  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                  pure-jackson   50000  thrpt    8    185637254.785 ±    1222149.029    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space              pure-jackson   50000  thrpt    8          932.557 ±         65.283  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm         pure-jackson   50000  thrpt    8    184186145.704 ±   10354182.554    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space          pure-jackson   50000  thrpt    8           10.291 ±          4.570  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm     pure-jackson   50000  thrpt    8      2032293.103 ±     898326.797    B/op
JmhReaderBench.bench:·gc.count                            pure-jackson   50000  thrpt    8          131.000                   counts
JmhReaderBench.bench:·gc.time                             pure-jackson   50000  thrpt    8         5362.000                       ms
JmhReaderBench.bench:·stack                               pure-jackson   50000  thrpt                   NaN                      ---
JmhReaderBench.bench                                      pure-jackson  100000  thrpt    8            2.687 ±          0.134   ops/s
JmhReaderBench.bench:·gc.alloc.rate                       pure-jackson  100000  thrpt    8          938.891 ±         46.707  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                  pure-jackson  100000  thrpt    8    372543649.533 ±       1446.935    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space              pure-jackson  100000  thrpt    8          945.865 ±         71.124  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm         pure-jackson  100000  thrpt    8    375299577.387 ±   20584830.797    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space          pure-jackson  100000  thrpt    8           18.479 ±          6.306  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm     pure-jackson  100000  thrpt    8      7318906.935 ±    2297013.493    B/op
JmhReaderBench.bench:·gc.count                            pure-jackson  100000  thrpt    8           98.000                   counts
JmhReaderBench.bench:·gc.time                             pure-jackson  100000  thrpt    8         9645.000                       ms
JmhReaderBench.bench:·stack                               pure-jackson  100000  thrpt                   NaN                      ---
JmhReaderBench.bench                                    json4s-jackson      10  thrpt    8         4211.916 ±         86.530   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     json4s-jackson      10  thrpt    8         1198.812 ±         26.636  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                json4s-jackson      10  thrpt    8       303428.004 ±        515.085    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            json4s-jackson      10  thrpt    8         1200.000 ±         27.221  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       json4s-jackson      10  thrpt    8       303728.213 ±       1042.450    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        json4s-jackson      10  thrpt    8            0.195 ±          0.032  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   json4s-jackson      10  thrpt    8           49.456 ±          7.780    B/op
JmhReaderBench.bench:·gc.count                          json4s-jackson      10  thrpt    8         2732.000                   counts
JmhReaderBench.bench:·gc.time                           json4s-jackson      10  thrpt    8         2135.000                       ms
JmhReaderBench.bench:·stack                             json4s-jackson      10  thrpt                   NaN                      ---
JmhReaderBench.bench                                    json4s-jackson     100  thrpt    8          500.319 ±         28.164   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     json4s-jackson     100  thrpt    8         1150.101 ±         65.572  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                json4s-jackson     100  thrpt    8      2450637.313 ±       1783.330    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            json4s-jackson     100  thrpt    8         1151.325 ±         66.925  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       json4s-jackson     100  thrpt    8      2453209.539 ±       7682.434    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        json4s-jackson     100  thrpt    8            1.483 ±          0.176  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   json4s-jackson     100  thrpt    8         3166.138 ±        509.935    B/op
JmhReaderBench.bench:·gc.count                          json4s-jackson     100  thrpt    8         2158.000                   counts
JmhReaderBench.bench:·gc.time                           json4s-jackson     100  thrpt    8         2201.000                       ms
JmhReaderBench.bench:·stack                             json4s-jackson     100  thrpt                   NaN                      ---
JmhReaderBench.bench                                    json4s-jackson    1000  thrpt    8           50.702 ±          1.529   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     json4s-jackson    1000  thrpt    8         1051.662 ±         27.104  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                json4s-jackson    1000  thrpt    8     22113193.490 ±      98112.330    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            json4s-jackson    1000  thrpt    8         1048.529 ±         34.965  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       json4s-jackson    1000  thrpt    8     22048294.859 ±     633093.674    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        json4s-jackson    1000  thrpt    8            2.770 ±          1.848  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   json4s-jackson    1000  thrpt    8        58516.223 ±      40467.045    B/op
JmhReaderBench.bench:·gc.count                          json4s-jackson    1000  thrpt    8          420.000                   counts
JmhReaderBench.bench:·gc.time                           json4s-jackson    1000  thrpt    8         2026.000                       ms
JmhReaderBench.bench:·stack                             json4s-jackson    1000  thrpt                   NaN                      ---
JmhReaderBench.bench                                    json4s-jackson    5000  thrpt    8            8.945 ±          0.450   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     json4s-jackson    5000  thrpt    8          989.061 ±         15.038  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                json4s-jackson    5000  thrpt    8    117966215.233 ±    7595609.919    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            json4s-jackson    5000  thrpt    8         1004.275 ±         76.053  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       json4s-jackson    5000  thrpt    8    119774394.226 ±   11583673.301    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        json4s-jackson    5000  thrpt    8            2.509 ±          2.526  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   json4s-jackson    5000  thrpt    8       298887.981 ±     297076.167    B/op
JmhReaderBench.bench:·gc.count                          json4s-jackson    5000  thrpt    8           94.000                   counts
JmhReaderBench.bench:·gc.time                           json4s-jackson    5000  thrpt    8         1678.000                       ms
JmhReaderBench.bench:·stack                             json4s-jackson    5000  thrpt                   NaN                      ---
JmhReaderBench.bench                                    json4s-jackson   10000  thrpt    8            4.515 ±          0.100   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     json4s-jackson   10000  thrpt    8         1031.996 ±         22.765  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                json4s-jackson   10000  thrpt    8    243687063.357 ±      90744.994    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            json4s-jackson   10000  thrpt    8         1019.999 ±         65.606  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       json4s-jackson   10000  thrpt    8    240913784.910 ±   18426877.227    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        json4s-jackson   10000  thrpt    8            3.819 ±          2.773  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   json4s-jackson   10000  thrpt    8       902665.320 ±     667506.726    B/op
JmhReaderBench.bench:·gc.count                          json4s-jackson   10000  thrpt    8           53.000                   counts
JmhReaderBench.bench:·gc.time                           json4s-jackson   10000  thrpt    8         2702.000                       ms
JmhReaderBench.bench:·stack                             json4s-jackson   10000  thrpt                   NaN                      ---
JmhReaderBench.bench                                    json4s-jackson   50000  thrpt    8            0.931 ±          0.018   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     json4s-jackson   50000  thrpt    8         1068.472 ±         20.349  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                json4s-jackson   50000  thrpt    8   1222887788.076 ±        465.877    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            json4s-jackson   50000  thrpt    8         1057.174 ±         64.598  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       json4s-jackson   50000  thrpt    8   1209950894.030 ±   69024445.183    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        json4s-jackson   50000  thrpt    8           26.788 ±         18.155  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   json4s-jackson   50000  thrpt    8     30706565.527 ±   21054068.384    B/op
JmhReaderBench.bench:·gc.count                          json4s-jackson   50000  thrpt    8           83.000                   counts
JmhReaderBench.bench:·gc.time                           json4s-jackson   50000  thrpt    8        14945.000                       ms
JmhReaderBench.bench:·stack                             json4s-jackson   50000  thrpt                   NaN                      ---
JmhReaderBench.bench                                    json4s-jackson  100000  thrpt    8            0.450 ±          0.013   ops/s
JmhReaderBench.bench:·gc.alloc.rate                     json4s-jackson  100000  thrpt    8         1040.936 ±         21.947  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                json4s-jackson  100000  thrpt    8   2462184976.000 ±   32705941.571    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space            json4s-jackson  100000  thrpt    8         1039.902 ±         35.880  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm       json4s-jackson  100000  thrpt    8   2460404004.571 ±  137739075.992    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space        json4s-jackson  100000  thrpt    8           50.116 ±         29.186  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm   json4s-jackson  100000  thrpt    8    118395756.286 ±   67023737.063    B/op
JmhReaderBench.bench:·gc.count                          json4s-jackson  100000  thrpt    8           97.000                   counts
JmhReaderBench.bench:·gc.time                           json4s-jackson  100000  thrpt    8        27296.000                       ms
JmhReaderBench.bench:·stack                             json4s-jackson  100000  thrpt                   NaN                      ---
JmhReaderBench.bench                                     json4s-native      10  thrpt    8         4461.948 ±        276.733   ops/s
JmhReaderBench.bench:·gc.alloc.rate                      json4s-native      10  thrpt    8         1667.283 ±         47.247  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                 json4s-native      10  thrpt    8       398892.003 ±      35998.707    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space             json4s-native      10  thrpt    8         1668.836 ±         47.077  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm        json4s-native      10  thrpt    8       399263.277 ±      35998.146    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space         json4s-native      10  thrpt    8            0.225 ±          0.043  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm    json4s-native      10  thrpt    8           53.658 ±         10.267    B/op
JmhReaderBench.bench:·gc.count                           json4s-native      10  thrpt    8         3008.000                   counts
JmhReaderBench.bench:·gc.time                            json4s-native      10  thrpt    8         2173.000                       ms
JmhReaderBench.bench:·stack                              json4s-native      10  thrpt                   NaN                      ---
JmhReaderBench.bench                                     json4s-native     100  thrpt    8          502.838 ±         42.042   ops/s
JmhReaderBench.bench:·gc.alloc.rate                      json4s-native     100  thrpt    8         1509.392 ±         53.439  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                 json4s-native     100  thrpt    8      3203209.465 ±     154843.000    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space             json4s-native     100  thrpt    8         1510.374 ±         56.039  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm        json4s-native     100  thrpt    8      3205198.764 ±     150712.967    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space         json4s-native     100  thrpt    8            1.600 ±          0.172  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm    json4s-native     100  thrpt    8         3400.602 ±        546.842    B/op
JmhReaderBench.bench:·gc.count                           json4s-native     100  thrpt    8         2350.000                   counts
JmhReaderBench.bench:·gc.time                            json4s-native     100  thrpt    8         2238.000                       ms
JmhReaderBench.bench:·stack                              json4s-native     100  thrpt                   NaN                      ---
JmhReaderBench.bench                                     json4s-native    1000  thrpt    8           42.249 ±          2.684   ops/s
JmhReaderBench.bench:·gc.alloc.rate                      json4s-native    1000  thrpt    8         1286.535 ±         24.148  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                 json4s-native    1000  thrpt    8     32486064.508 ±    1458444.741    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space             json4s-native    1000  thrpt    8         1293.880 ±         52.162  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm        json4s-native    1000  thrpt    8     32678328.223 ±    2313488.635    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space         json4s-native    1000  thrpt    8            1.753 ±          0.607  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm    json4s-native    1000  thrpt    8        44203.712 ±      15025.150    B/op
JmhReaderBench.bench:·gc.count                           json4s-native    1000  thrpt    8          279.000                   counts
JmhReaderBench.bench:·gc.time                            json4s-native    1000  thrpt    8         1923.000                       ms
JmhReaderBench.bench:·stack                              json4s-native    1000  thrpt                   NaN                      ---
JmhReaderBench.bench                                     json4s-native    5000  thrpt    8            7.078 ±          0.622   ops/s
JmhReaderBench.bench:·gc.alloc.rate                      json4s-native    5000  thrpt    8         1337.583 ±        129.535  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                 json4s-native    5000  thrpt    8    201412758.128 ±    1798651.514    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space             json4s-native    5000  thrpt    8         1356.220 ±        195.031  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm        json4s-native    5000  thrpt    8    204109510.296 ±   16599688.832    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space         json4s-native    5000  thrpt    8            3.993 ±          2.584  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm    json4s-native    5000  thrpt    8       604577.838 ±     415138.471    B/op
JmhReaderBench.bench:·gc.count                           json4s-native    5000  thrpt    8          123.000                   counts
JmhReaderBench.bench:·gc.time                            json4s-native    5000  thrpt    8         2005.000                       ms
JmhReaderBench.bench:·stack                              json4s-native    5000  thrpt                   NaN                      ---
JmhReaderBench.bench                                     json4s-native   10000  thrpt    8            3.027 ±          0.063   ops/s
JmhReaderBench.bench:·gc.alloc.rate                      json4s-native   10000  thrpt    8         1390.085 ±         38.896  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                 json4s-native   10000  thrpt    8    489573588.910 ±    3597385.129    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space             json4s-native   10000  thrpt    8         1370.228 ±        106.648  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm        json4s-native   10000  thrpt    8    482508284.295 ±   30637965.357    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space         json4s-native   10000  thrpt    8            3.890 ±          1.888  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm    json4s-native   10000  thrpt    8      1370952.930 ±     673902.413    B/op
JmhReaderBench.bench:·gc.count                           json4s-native   10000  thrpt    8           68.000                   counts
JmhReaderBench.bench:·gc.time                            json4s-native   10000  thrpt    8         2443.000                       ms
JmhReaderBench.bench:·stack                              json4s-native   10000  thrpt                   NaN                      ---
JmhReaderBench.bench                                     json4s-native   50000  thrpt    8            0.205 ±          0.004   ops/s
JmhReaderBench.bench:·gc.alloc.rate                      json4s-native   50000  thrpt    8         1129.923 ±         20.097  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                 json4s-native   50000  thrpt    8   5851736440.000 ±          4.672    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space             json4s-native   50000  thrpt    8         1133.174 ±         58.920  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm        json4s-native   50000  thrpt    8   5867924918.857 ±  224294268.742    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space         json4s-native   50000  thrpt    8           37.437 ±          8.949  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm    json4s-native   50000  thrpt    8    194073746.286 ±   49636144.607    B/op
JmhReaderBench.bench:·gc.count                           json4s-native   50000  thrpt    8          115.000                   counts
JmhReaderBench.bench:·gc.time                            json4s-native   50000  thrpt    8        16872.000                       ms
JmhReaderBench.bench:·stack                              json4s-native   50000  thrpt                   NaN                      ---
JmhReaderBench.bench                                     json4s-native  100000  thrpt    8            0.056 ±          0.002   ops/s
JmhReaderBench.bench:·gc.alloc.rate                      json4s-native  100000  thrpt    8         1062.259 ±         43.631  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                 json4s-native  100000  thrpt    8  20204658800.000 ±    3270388.123    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space             json4s-native  100000  thrpt    8         1077.188 ±         80.290  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm        json4s-native  100000  thrpt    8  20491173888.000 ± 1416670052.404    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space         json4s-native  100000  thrpt    8           35.089 ±          5.600  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm    json4s-native  100000  thrpt    8    667129856.000 ±   94356317.290    B/op
JmhReaderBench.bench:·gc.count                           json4s-native  100000  thrpt    8           95.000                   counts
JmhReaderBench.bench:·gc.time                            json4s-native  100000  thrpt    8        25517.000                       ms
JmhReaderBench.bench:·stack                              json4s-native  100000  thrpt                   NaN                      ---
JmhReaderBench.bench                                         play-json      10  thrpt    8         7081.284 ±         58.599   ops/s
JmhReaderBench.bench:·gc.alloc.rate                          play-json      10  thrpt    8         3293.025 ±         27.353  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                     play-json      10  thrpt    8       495768.003 ±          0.001    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                 play-json      10  thrpt    8         3295.115 ±         29.550  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm            play-json      10  thrpt    8       496082.581 ±       1614.896    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space             play-json      10  thrpt    8            0.242 ±          0.036  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm        play-json      10  thrpt    8           36.377 ±          5.206    B/op
JmhReaderBench.bench:·gc.count                               play-json      10  thrpt    8         2863.000                   counts
JmhReaderBench.bench:·gc.time                                play-json      10  thrpt    8         2188.000                       ms
JmhReaderBench.bench:·stack                                  play-json      10  thrpt                   NaN                      ---
JmhReaderBench.bench                                         play-json     100  thrpt    8          758.406 ±         20.444   ops/s
JmhReaderBench.bench:·gc.alloc.rate                          play-json     100  thrpt    8         2858.595 ±         77.023  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                     play-json     100  thrpt    8      4018288.539 ±         11.743    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                 play-json     100  thrpt    8         2859.901 ±         80.334  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm            play-json     100  thrpt    8      4020096.441 ±       9368.240    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space             play-json     100  thrpt    8            1.332 ±          0.272  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm        play-json     100  thrpt    8         1871.074 ±        356.841    B/op
JmhReaderBench.bench:·gc.count                               play-json     100  thrpt    8         2299.000                   counts
JmhReaderBench.bench:·gc.time                                play-json     100  thrpt    8         2274.000                       ms
JmhReaderBench.bench:·stack                                  play-json     100  thrpt                   NaN                      ---
JmhReaderBench.bench                                         play-json    1000  thrpt    8           70.378 ±          0.374   ops/s
JmhReaderBench.bench:·gc.alloc.rate                          play-json    1000  thrpt    8         2556.636 ±         11.912  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                     play-json    1000  thrpt    8     38728070.573 ±      32703.771    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                 play-json    1000  thrpt    8         2553.873 ±         37.824  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm            play-json    1000  thrpt    8     38686190.430 ±     537494.846    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space             play-json    1000  thrpt    8            2.555 ±          1.287  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm        play-json    1000  thrpt    8        38705.110 ±      19433.397    B/op
JmhReaderBench.bench:·gc.count                               play-json    1000  thrpt    8          482.000                   counts
JmhReaderBench.bench:·gc.time                                play-json    1000  thrpt    8         2081.000                       ms
JmhReaderBench.bench:·stack                                  play-json    1000  thrpt                   NaN                      ---
JmhReaderBench.bench                                         play-json    5000  thrpt    8           12.258 ±          0.230   ops/s
JmhReaderBench.bench:·gc.alloc.rate                          play-json    5000  thrpt    8         2271.630 ±         48.286  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                     play-json    5000  thrpt    8    197565091.009 ±     569863.244    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                 play-json    5000  thrpt    8         2267.469 ±        149.796  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm            play-json    5000  thrpt    8    197192360.422 ±   11701752.624    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space             play-json    5000  thrpt    8            3.496 ±          0.815  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm        play-json    5000  thrpt    8       303949.438 ±      69074.441    B/op
JmhReaderBench.bench:·gc.count                               play-json    5000  thrpt    8          118.000                   counts
JmhReaderBench.bench:·gc.time                                play-json    5000  thrpt    8         2513.000                       ms
JmhReaderBench.bench:·stack                                  play-json    5000  thrpt                   NaN                      ---
JmhReaderBench.bench                                         play-json   10000  thrpt    8            5.987 ±          0.047   ops/s
JmhReaderBench.bench:·gc.alloc.rate                          play-json   10000  thrpt    8         2232.107 ±         17.602  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                     play-json   10000  thrpt    8    397455758.485 ±       5322.522    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                 play-json   10000  thrpt    8         2216.402 ±          7.339  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm            play-json   10000  thrpt    8    394666218.727 ±    3842823.252    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space             play-json   10000  thrpt    8            6.865 ±          1.415  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm        play-json   10000  thrpt    8      1222329.978 ±     248553.006    B/op
JmhReaderBench.bench:·gc.count                               play-json   10000  thrpt    8          104.000                   counts
JmhReaderBench.bench:·gc.time                                play-json   10000  thrpt    8         3404.000                       ms
JmhReaderBench.bench:·stack                                  play-json   10000  thrpt                   NaN                      ---
JmhReaderBench.bench                                         play-json   50000  thrpt    8            1.276 ±          0.024   ops/s
JmhReaderBench.bench:·gc.alloc.rate                          play-json   50000  thrpt    8         2394.559 ±         50.794  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                     play-json   50000  thrpt    8   1999448078.501 ±   11034245.720    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                 play-json   50000  thrpt    8         2381.764 ±        115.751  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm            play-json   50000  thrpt    8   1988852964.016 ±   95727120.371    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space             play-json   50000  thrpt    8           39.150 ±         11.748  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm        play-json   50000  thrpt    8     32661569.099 ±    9347823.403    B/op
JmhReaderBench.bench:·gc.count                               play-json   50000  thrpt    8          141.000                   counts
JmhReaderBench.bench:·gc.time                                play-json   50000  thrpt    8        22990.000                       ms
JmhReaderBench.bench:·stack                                  play-json   50000  thrpt                   NaN                      ---
JmhReaderBench.bench                                         play-json  100000  thrpt    8            0.562 ±          0.013   ops/s
JmhReaderBench.bench:·gc.alloc.rate                          play-json  100000  thrpt    8         2111.872 ±         47.907  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                     play-json  100000  thrpt    8   4002700416.967 ±   29435351.882    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                 play-json  100000  thrpt    8         2122.497 ±         78.258  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm            play-json  100000  thrpt    8   4023042583.425 ±  146882850.147    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space             play-json  100000  thrpt    8          125.079 ±         22.264  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm        play-json  100000  thrpt    8    236949596.889 ±   38854470.764    B/op
JmhReaderBench.bench:·gc.count                               play-json  100000  thrpt    8          183.000                   counts
JmhReaderBench.bench:·gc.time                                play-json  100000  thrpt    8        58879.000                       ms
JmhReaderBench.bench:·stack                                  play-json  100000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        spray-json      10  thrpt    8        10907.068 ±        171.108   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         spray-json      10  thrpt    8         1594.134 ±         24.981  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    spray-json      10  thrpt    8       155816.001 ±          0.001    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                spray-json      10  thrpt    8         1595.762 ±         25.024  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           spray-json      10  thrpt    8       155975.093 ±        161.351    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            spray-json      10  thrpt    8            0.171 ±          0.037  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       spray-json      10  thrpt    8           16.713 ±          3.647    B/op
JmhReaderBench.bench:·gc.count                              spray-json      10  thrpt    8         3173.000                   counts
JmhReaderBench.bench:·gc.time                               spray-json      10  thrpt    8         2135.000                       ms
JmhReaderBench.bench:·stack                                 spray-json      10  thrpt                   NaN                      ---
JmhReaderBench.bench                                        spray-json     100  thrpt    8         1221.005 ±         99.354   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         spray-json     100  thrpt    8         1472.170 ±        119.794  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    spray-json     100  thrpt    8      1285381.340 ±         11.104    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                spray-json     100  thrpt    8         1473.827 ±        120.551  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           spray-json     100  thrpt    8      1286819.418 ±       3982.545    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            spray-json     100  thrpt    8            1.654 ±          0.179  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       spray-json     100  thrpt    8         1445.338 ±        172.641    B/op
JmhReaderBench.bench:·gc.count                              spray-json     100  thrpt    8         2802.000                   counts
JmhReaderBench.bench:·gc.time                               spray-json     100  thrpt    8         2246.000                       ms
JmhReaderBench.bench:·stack                                 spray-json     100  thrpt                   NaN                      ---
JmhReaderBench.bench                                        spray-json    1000  thrpt    8          106.373 ±          6.684   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         spray-json    1000  thrpt    8         1252.997 ±         76.296  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    spray-json    1000  thrpt    8     12558093.568 ±      24552.834    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                spray-json    1000  thrpt    8         1256.494 ±         81.186  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           spray-json    1000  thrpt    8     12592600.341 ±     133724.626    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            spray-json    1000  thrpt    8            4.147 ±          0.961  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       spray-json    1000  thrpt    8        41603.016 ±      10172.413    B/op
JmhReaderBench.bench:·gc.count                              spray-json    1000  thrpt    8          752.000                   counts
JmhReaderBench.bench:·gc.time                               spray-json    1000  thrpt    8         1979.000                       ms
JmhReaderBench.bench:·stack                                 spray-json    1000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        spray-json    5000  thrpt    8           22.353 ±          0.068   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         spray-json    5000  thrpt    8         1323.187 ±          4.030  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    spray-json    5000  thrpt    8     63106592.708 ±          0.167    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                spray-json    5000  thrpt    8         1317.078 ±         57.710  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           spray-json    5000  thrpt    8     62816138.542 ±    2827825.997    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            spray-json    5000  thrpt    8            5.199 ±          2.481  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       spray-json    5000  thrpt    8       247986.897 ±     118711.619    B/op
JmhReaderBench.bench:·gc.count                              spray-json    5000  thrpt    8          161.000                   counts
JmhReaderBench.bench:·gc.time                               spray-json    5000  thrpt    8         1778.000                       ms
JmhReaderBench.bench:·stack                                 spray-json    5000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        spray-json   10000  thrpt    8           10.412 ±          0.746   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         spray-json   10000  thrpt    8         1238.686 ±         88.774  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    spray-json   10000  thrpt    8    126827393.445 ±          0.158    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                spray-json   10000  thrpt    8         1253.138 ±        164.746  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           spray-json   10000  thrpt    8    128275857.537 ±   12819061.109    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            spray-json   10000  thrpt    8            5.178 ±          3.361  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       spray-json   10000  thrpt    8       527815.903 ±     327828.076    B/op
JmhReaderBench.bench:·gc.count                              spray-json   10000  thrpt    8           91.000                   counts
JmhReaderBench.bench:·gc.time                               spray-json   10000  thrpt    8         2091.000                       ms
JmhReaderBench.bench:·stack                                 spray-json   10000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        spray-json   50000  thrpt    8            2.029 ±          0.051   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         spray-json   50000  thrpt    8         1204.969 ±         29.966  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    spray-json   50000  thrpt    8    633146999.287 ±          0.616    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                spray-json   50000  thrpt    8         1203.855 ±        117.638  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           spray-json   50000  thrpt    8    632560837.724 ±   59824481.305    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            spray-json   50000  thrpt    8           26.425 ±         14.865  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       spray-json   50000  thrpt    8     13908206.446 ±    8006344.602    B/op
JmhReaderBench.bench:·gc.count                              spray-json   50000  thrpt    8           95.000                   counts
JmhReaderBench.bench:·gc.time                               spray-json   50000  thrpt    8        11142.000                       ms
JmhReaderBench.bench:·stack                                 spray-json   50000  thrpt                   NaN                      ---
JmhReaderBench.bench                                        spray-json  100000  thrpt    8            0.941 ±          0.098   ops/s
JmhReaderBench.bench:·gc.alloc.rate                         spray-json  100000  thrpt    8         1119.038 ±        116.231  MB/sec
JmhReaderBench.bench:·gc.alloc.rate.norm                    spray-json  100000  thrpt    8   1267363172.046 ±    2452809.747    B/op
JmhReaderBench.bench:·gc.churn.PS_Eden_Space                spray-json  100000  thrpt    8         1119.662 ±        150.752  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Eden_Space.norm           spray-json  100000  thrpt    8   1267938752.049 ±  101629674.784    B/op
JmhReaderBench.bench:·gc.churn.PS_Old_Gen                   spray-json  100000  thrpt    8            2.339 ±         10.908  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Old_Gen.norm              spray-json  100000  thrpt    8      2833587.236 ±   13129743.831    B/op
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space            spray-json  100000  thrpt    8           71.242 ±         16.327  MB/sec
JmhReaderBench.bench:·gc.churn.PS_Survivor_Space.norm       spray-json  100000  thrpt    8     80795991.768 ±   18085984.447    B/op
JmhReaderBench.bench:·gc.count                              spray-json  100000  thrpt    8           98.000                   counts
JmhReaderBench.bench:·gc.time                               spray-json  100000  thrpt    8        27026.000                       ms
JmhReaderBench.bench:·stack                                 spray-json  100000  thrpt                   NaN                      ---

Benchmark result is saved to jmh-result.json
